<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.consume.dao.ConsumeMapper">
	<select id="listConsumeSharePersonInfo" parameterType="java.lang.String" resultType="com.koscom.domain.PersonInfo">
		SELECT
			 SI.OFFER_NO_PERSON AS NO_PERSON
			,PI.NM_PERSON AS NM_PERSON
			,0 AS PRIORITY
		FROM
			SHARE_INFO SI, PERSON_INFO PI
		WHERE
				SI.REQ_NO_PERSON		= #{no_person, jdbcType = VARCHAR}
			AND SI.OFFER_NO_PERSON		= PI.NO_PERSON
			AND SI.SHARE_STATUS			= '02'
			AND SI.YN_CONSUME_INFO		= 'Y'
			AND SI.DT_END_OFFER			IS NULL
		UNION(
			SELECT
				 NO_PERSON
				,NM_PERSON
				,1 AS PRIORITY
			FROM
				PERSON_INFO
			WHERE
				NO_PERSON = #{no_person, jdbcType = VARCHAR}
		)
		ORDER BY
		PRIORITY DESC
	</select>
	<select id="chkScrapCard" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			'1'
		FROM
			FC_LINK_INFO
		WHERE
			NO_PERSON			= #{no_person, jdbcType=VARCHAR}
			AND CD_AGENCY		= '05'
			AND CD_LINK_STAT	= '00'
	</select>
	<select id="getConsumeGoal" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 CD_SET
			,TO_CHAR( NVL( SUM( TO_NUMBER( AMT_BUDGET ) ), 0 )) AS AMT_BUDGET
		FROM
			CONSUME_GOAL_INFO
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND REQ_YYYYMM	= #{req_yyyymm	, jdbcType = VARCHAR}
		GROUP BY CD_SET
		ORDER BY CD_SET ASC
	</select>
	<select id="getConsumeInfoAmt" parameterType="com.koscom.consume.model.ConsumeForm" resultType="java.lang.String">
		SELECT
			TO_CHAR(NVL( SUM( AMT_IN_OUT ), 0 )) AS AMT_IN_OUT
		FROM
			CONSUME_INFO CI,
			(
				SELECT
					 YN_INSTALLMENT
					,CASE
						WHEN DT_BASIC IS NULL
							THEN TO_CHAR( TRUNC( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ), 'MONTH' ), 'YYYYMMDD' )
							ELSE #{ym_trd, jdbcType = VARCHAR} || DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC )
					END AS DT_FROM
					,CASE
						WHEN DT_BASIC IS NULL
							THEN TO_CHAR( LAST_DAY( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' )), 'YYYYMMDD' )
							ELSE TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ), 1 ), 'YYYYMM' ) ||
								 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC )
					END AS DT_TO
				FROM
					PERSON_SET_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			) PSI
		WHERE
				NO_PERSON					 = #{no_person, jdbcType = VARCHAR}
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
			AND CI.TYPE_IN_OUT				 = '02'
			AND CI.YN_DELETE				 = 'N'
			AND CI.YN_CANCEL				 = 'N'
			AND CI.YN_BUDGET_EXCEPT 		 = 'N'
		    AND 1 =
				(
				CASE WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
					ELSE 0
				END
				)
	</select>
	<select id="listConsumeInfoAmt" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 TYPE_IN_OUT
			,NVL( SUM( AMT_IN_OUT ), 0 ) AS AMT_IN_OUT
		FROM
			 CONSUME_INFO CI
			,(
				SELECT
					 YN_INSTALLMENT
					,CASE
						WHEN DT_BASIC IS NULL
							THEN TO_CHAR( TRUNC( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ), 'MONTH' ), 'YYYYMMDD' )
							ELSE #{ym_trd, jdbcType = VARCHAR} || DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC )
					END AS DT_FROM
					,CASE
						WHEN DT_BASIC IS NULL
							THEN TO_CHAR( LAST_DAY( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' )), 'YYYYMMDD' )
							ELSE TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ), 1 ), 'YYYYMM' ) ||
								 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC )
					END AS DT_TO
				FROM
					PERSON_SET_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			 ) PSI
		WHERE
			NO_PERSON IN
				<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
					#{each_person}
				</foreach>
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
			AND CI.YN_CANCEL				 =		'N'
			AND CI.YN_DELETE				 =		'N'
			AND CI.YN_BUDGET_EXCEPT			 =		'N'
		    AND 1 =
				(
				CASE WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
					ELSE 0
				END
				)
			AND EXISTS (
				SELECT
				      1
				   FROM
				      ( SELECT
				         DISTINCT NO_PERSON AS OFFER_NO_PERSON, MEANS_CONSUME AS CD_TYPE, NO_CARD AS NO_CARD_ACC
				         FROM
				            CONSUME_INFO
				         WHERE
				            NO_PERSON = #{no_person, jdbcType = VARCHAR}
				      UNION ALL SELECT
				            OFFER_NO_PERSON, CD_TYPE, NO_CARD_ACC
				         FROM
				            SHARE_INFO_DETAIL A
				         INNER JOIN SHARE_INFO B ON
				            A.SEQ_SHARE = B.SEQ_SHARE
				            AND B.REQ_NO_PERSON = #{no_person, jdbcType = VARCHAR}
				            AND B.SHARE_STATUS = '02'
				            AND B.YN_CONSUME_INFO = 'Y'
				            AND B.DT_END_OFFER IS NULL
				         WHERE
				            1 = 1
				            AND A.CD_INFO = '03'
				            AND A.YN_SHARE = 'Y' )
				   WHERE
				      1 = 1
				      AND OFFER_NO_PERSON = CI.NO_PERSON
				      AND
				      ( CASE
				         WHEN CD_TYPE = '01' THEN SUBSTR( NO_CARD_ACC, - 3 ) /* 카드 */
				         WHEN CD_TYPE = '02' THEN CD_TYPE /* 현금 */
				         WHEN CD_TYPE = '03' THEN CD_TYPE /* 현금영수증 */
				         WHEN CD_TYPE = '04' THEN NO_CARD_ACC /* 입출금계좌 */
				      END ) IN
				      ( CASE
				         WHEN CI.MEANS_CONSUME = '01' THEN SUBSTR( CI.NO_CARD, - 3 ) /* 카드 */
				         WHEN CI.MEANS_CONSUME = '02' THEN CI.MEANS_CONSUME /* 현금 */
				         WHEN CI.MEANS_CONSUME = '03' THEN CI.MEANS_CONSUME /* 현금영수증 */
				         WHEN CI.MEANS_CONSUME = '04' THEN CI.NO_CARD /* 입출금계좌 */
				      END ) 
			)
		GROUP BY
			TYPE_IN_OUT
		ORDER BY
			TYPE_IN_OUT ASC
	</select>
	<select id="listConsumeInfo" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
		   CI.NO_PERSON,
		   CI.SEQ_CONSUME,
		   CI.TYPE_IN_OUT,
		   CI.MEANS_CONSUME,
		   CI.CD_FC,
		   CI.NM_CARD,
		   CI.DT_TRD,
		   CI.CD_CLASS,
		   PCCI.NM_CLASS,
		   PCCI.NM_TYPE,
		   CI.CONTENTS,
		   CI.AMT_IN_OUT,
		   CI.YN_AUTO,
		   CI.YN_PERSON_REGIST
		FROM
		   CONSUME_INFO CI,
		   PERSON_CONSUME_CLASS_INFO PCCI,
		   (
			SELECT
				 YN_INSTALLMENT
				,CASE
					WHEN DT_BASIC IS NULL
						THEN TO_CHAR( TRUNC( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ), 'MONTH' ), 'YYYYMMDD' )
						ELSE #{ym_trd, jdbcType = VARCHAR}|| DECODE( LENGTH(DT_BASIC), 1, '0' || DT_BASIC, DT_BASIC )
				 END AS DT_FROM
				,CASE
					WHEN DT_BASIC IS NULL
						THEN TO_CHAR( LAST_DAY( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' )), 'YYYYMMDD' )
						ELSE TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType = VARCHAR} , 'YYYYMM' ), 1 ), 'YYYYMM' ) || DECODE( LENGTH(DT_BASIC), 1, '0' || DT_BASIC, DT_BASIC )
				 END AS DT_TO
		   FROM
		      PERSON_SET_INFO
		   WHERE
		      NO_PERSON = #{no_person, jdbcType = VARCHAR} 
			) PSI
		WHERE
			    CI.NO_PERSON IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
		   AND CI.NO_PERSON = PCCI.NO_PERSON
		   AND CI.CD_CLASS = PCCI.CD_CLASS
		   AND CI.CD_TYPE = PCCI.CD_TYPE
		   AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]> TO_NUMBER(PSI.DT_FROM)
		   AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]> TO_NUMBER(PSI.DT_TO)
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(type_in_out)">
				AND CI.TYPE_IN_OUT			 =		#{type_in_out, jdbcType=VARCHAR}
			</if>
		   AND YN_CANCEL = 'N'
		   AND YN_DELETE = 'N'
		   AND YN_BUDGET_EXCEPT = 'N'
		   AND 1 =
				(
				CASE WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
					ELSE 0
				END
				)
		   AND EXISTS ( SELECT
		      1
		   FROM
		      ( SELECT
		         DISTINCT NO_PERSON AS OFFER_NO_PERSON, MEANS_CONSUME AS CD_TYPE, NO_CARD AS NO_CARD_ACC
		         FROM
		            CONSUME_INFO
		         WHERE
		            NO_PERSON = #{no_person, jdbcType = VARCHAR}
		      UNION ALL SELECT
		            OFFER_NO_PERSON, CD_TYPE, NO_CARD_ACC
		         FROM
		            SHARE_INFO_DETAIL A
		         INNER JOIN SHARE_INFO B ON
		            A.SEQ_SHARE = B.SEQ_SHARE
		            AND B.REQ_NO_PERSON = #{no_person, jdbcType = VARCHAR}
		            AND B.SHARE_STATUS = '02'
		            AND B.YN_CONSUME_INFO = 'Y'
		            AND B.DT_END_OFFER IS NULL
		         WHERE
		            1 = 1
		            AND A.CD_INFO = '03'
		            AND A.YN_SHARE = 'Y' )
		   WHERE
		      1 = 1
		      AND OFFER_NO_PERSON = CI.NO_PERSON
		      AND
		      ( CASE
		         WHEN CD_TYPE = '01' THEN SUBSTR( NO_CARD_ACC, - 3 ) /* 카드 */
		         WHEN CD_TYPE = '02' THEN CD_TYPE /* 현금 */
		         WHEN CD_TYPE = '03' THEN CD_TYPE /* 현금영수증 */
		         WHEN CD_TYPE = '04' THEN NO_CARD_ACC /* 입출금계좌 */
		      END ) IN
		      ( CASE
		         WHEN CI.MEANS_CONSUME = '01' THEN SUBSTR( CI.NO_CARD, - 3 ) /* 카드 */
		         WHEN CI.MEANS_CONSUME = '02' THEN CI.MEANS_CONSUME /* 현금 */
		         WHEN CI.MEANS_CONSUME = '03' THEN CI.MEANS_CONSUME /* 현금영수증 */
		         WHEN CI.MEANS_CONSUME = '04' THEN CI.NO_CARD /* 입출금계좌 */
		      END ) )
		ORDER BY
		   CI.DT_TRD DESC,
		   CI.TM_TRD DESC
	</select>
	<select id="listShareInfoDetail" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			CD_INFO AS MEANS_CONSUME, NO_CARD_ACC AS NO_CARD 
		FROM
			SHARE_INFO_DETAIL
		WHERE
			SEQ_SHARE IN(
				SELECT
					SEQ_SHARE
				FROM
					SHARE_INFO
				WHERE
						REQ_NO_PERSON	= #{no_person, jdbcType = VARCHAR}
					AND SHARE_STATUS	= '02'
					AND YN_CONSUME_INFO = 'Y'
					AND DT_END_OFFER IS NULL
			)
			AND YN_SHARE	= 'Y'
	</select>
	<select id="listPersonIncomeClassInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonConsumeClassVO">
		SELECT
			 NO_PERSON
			,CD_CLASS
			,NM_CLASS
			,YN_DEFAULT
			,YN_USE
			,SORT_CLASS
		FROM
			PERSON_CONSUME_CLASS_INFO
		WHERE
				NO_PERSON	= #{no_person, jdbcType = VARCHAR}
			AND TYPE_IN_OUT = '01'
			AND YN_USE		= 'Y'
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC
	</select>
	<select id="listPersonConsumeClassInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonConsumeClassVO">
		SELECT DISTINCT
			 CD_CLASS
			,NM_CLASS
			,CD_TYPE
			,NM_TYPE
			,SORT_CLASS
			,SORT_TYPE
				FROM PERSON_CONSUME_CLASS_INFO
		WHERE 		NO_PERSON 	= #{no_person	, jdbcType=VARCHAR}
				AND TYPE_IN_OUT	= '02'
				AND YN_USE 		= 'Y'
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC, TO_NUMBER(SORT_TYPE) ASC
	</select>
	<select id="getPersonSetInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonSetInfoVO">
		SELECT
			 NO_PERSON
			,DT_BASIC
			,YN_INSTALLMENT
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		FROM
			PERSON_SET_INFO
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR} 
	</select>
	<update id="modifyPersonSetInfo" parameterType="com.koscom.consume.model.PersonSetInfoVO">
		MERGE INTO
			PERSON_SET_INFO
				USING DUAL ON
					(
						NO_PERSON = #{no_person, jdbcType = VARCHAR}
					)
			WHEN MATCHED THEN
				UPDATE
					SET
						 DT_BASIC			= #{dt_basic		, jdbcType = VARCHAR}
						,YN_INSTALLMENT		= #{yn_installment	, jdbcType = VARCHAR}
						,ID_LST				= #{id_lst			, jdbcType = VARCHAR}
						,DT_LST				= SYSDATE
			WHEN NOT MATCHED THEN
				INSERT
					(
						 NO_PERSON
						,DT_BASIC
						,YN_INSTALLMENT
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES
					(
						 #{no_person		, jdbcType = VARCHAR}
						,#{dt_basic			, jdbcType = VARCHAR}
						,#{yn_installment	, jdbcType = VARCHAR}
						,#{id_frt			, jdbcType = VARCHAR}
						,SYSDATE
						,#{id_lst			, jdbcType = VARCHAR}
						,SYSDATE
					)
	</update>
	<select id="listRegisteredSeqTran" parameterType="com.koscom.consume.model.ConsumeForm" resultType="java.lang.Integer">
		SELECT
			SEQ_TRAN
		FROM
			 CONSUME_INFO CI
			,(
				SELECT
					CASE
						WHEN DT_BASIC IS NULL THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| '00'
						WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[>=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[<]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
					END AS DT_FROM,
					CASE
						WHEN DT_BASIC IS NULL THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE,- 0 )), 'YYYYMMDD' )
						WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[>=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMMDD' )
						WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[<]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
					END AS DT_TO
				FROM
					(
						SELECT
							DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType=VARCHAR}
					)
			 ) PSI
		WHERE
				CI.NO_PERSON				 = 		#{no_person		, jdbcType = VARCHAR}
			AND CI.SEQ_TRAN					 IS NOT NULL
			AND CI.TYPE_IN_OUT				 =		#{type_in_out	, jdbcType = VARCHAR}
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
	</select>
	<select id="listPersonTransDetail" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.PersonTransDetailVO">
		SELECT
			 STD.SEQ_TRAN
			,XX1.DEC_VARCHAR2_SEL(STD.AN, '10','FS_ARIA','SCR_TRANSACTION_DETAIL','AN') AS AN
			,SBAAI.NM_AN
			,STD.DT_TRD
			,STD.TM_TRD
			,STD.AMT_WDRL
			,STD.AMT_DEP
			,STD.DOC1
			,STD.DOC2
			,SBAAI.CD_FC
			,FI.NM_FC
    			FROM 	 SCR_TRANSACTION_DETAIL STD
    					,SCR_BANK_API_AN_INFO SBAAI
    					,FC_INFO FI
						,(
							SELECT
								CASE
									WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| '00'
									WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
									WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
								END AS DT_FROM,
								CASE
									WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE,- 0 ) ), 'YYYYMMDD' )
									WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMMDD' )
									WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
								END AS DT_TO
							FROM
								(
									SELECT
										DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
									FROM
										PERSON_SET_INFO
									WHERE
										NO_PERSON = #{no_person, jdbcType=VARCHAR}
								)
						) PSI
		WHERE 		STD.NO_PERSON				  =		#{no_person, jdbcType=VARCHAR}
        		AND STD.NO_PERSON				  = 	SBAAI.NO_PERSON
        		AND SBAAI.CD_FC					  = 	FI.CD_FC
        		AND STD.AN						  = 	SBAAI.AN
				AND TO_NUMBER(STD.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
				AND TO_NUMBER(STD.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
        		<choose>
        			<when test="@com.koscom.util.MybatisUtil@contains('01',type_in_out)">
        				AND STD.AMT_DEP					 != '0'
        			</when>
        			<otherwise>
        				AND STD.AMT_WDRL				 != '0'
        			</otherwise>
        		</choose>
       ORDER BY
			STD.DT_TRD DESC, STD.TM_TRD DESC
	</select>
	<select id="getPersonTransDetail" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.PersonTransDetailVO">
		SELECT
			 STD.SEQ_TRAN
			,XX1.DEC_VARCHAR2_SEL(STD.AN, '10', 'FS_ARIA', 'SCR_TRANSACTION_DETAIL', 'AN') AS AN
			,SBAAI.NM_AN
			,STD.DT_TRD
			,STD.TM_TRD
			,STD.AMT_WDRL
			,STD.AMT_DEP
			,STD.DOC1
			,STD.DOC2
			,SBAAI.CD_FC
			,FI.NM_FC
		FROM
			 SCR_TRANSACTION_DETAIL STD
			,SCR_BANK_API_AN_INFO SBAAI
			,FC_INFO FI
		WHERE
				STD.SEQ_TRAN	= #{seq_tran	, jdbcType = VARCHAR}
			AND STD.NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND STD.NO_PERSON	= SBAAI.NO_PERSON
			AND SBAAI.CD_FC		= FI.CD_FC
			AND STD.AN			= SBAAI.AN
	</select>
	<select id="chkPersonConsumeClassInfoExist" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT
			COUNT( 1 )
		FROM
			PERSON_CONSUME_CLASS_INFO
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR}
	</select>
	<insert id="createDefaultConsumeClassInfo" parameterType="java.lang.String">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				SELECT
					 #{no_person, jdbcType=VARCHAR}
					,A.CD_CONSUME_CLASS
					,A.TYPE_IN_OUT
					,A.CD_CLASS
					,A.NM_CLASS
					,A.CD_TYPE
					,A.NM_TYPE
					,'Y' AS YN_DEFAULT
					,'Y' AS YN_USE
					,CASE
						WHEN A.TYPE_IN_OUT = '01' THEN TO_CHAR( TO_NUMBER( A.CD_CLASS ))
						WHEN A.TYPE_IN_OUT = '02' AND CD_CLASS = '99'  THEN A.CD_CLASS
						WHEN A.TYPE_IN_OUT = '02' AND CD_CLASS != '99' THEN TO_CHAR( TO_NUMBER( A.CD_CLASS )- 10 )
					 END AS SORT_CLASS
					,CASE
						WHEN A.CD_TYPE = '999' THEN '99'
					 	ELSE TO_CHAR( ROW_NUMBER() OVER( PARTITION BY A.CD_CLASS ORDER BY A.CD_TYPE ASC ))
					 END AS SORT_TYPE
					,#{no_person, jdbcType=VARCHAR} AS ID_FRT
					,SYSDATE AS DT_FRT
					,#{no_person, jdbcType=VARCHAR} AS ID_LST
					,SYSDATE AS DT_LST
				FROM
					(
						SELECT
							 A.CD_CONSUME_CLASS
							,A.TYPE_IN_OUT
							,A.CD_CLASS
							,A.NM_CLASS
							,A.CD_TYPE
							,A.NM_TYPE
						FROM
							CONSUME_CLASS_INFO A
						ORDER BY
							 A.CD_CLASS ASC
							,A.CD_TYPE ASC
					) A
			)
	</insert>
	
	<insert id="createGoal" parameterType="com.koscom.consume.model.ConsumeGoalInfoVO">
		MERGE INTO
			CONSUME_GOAL_INFO
				USING DUAL ON
			(
					NO_PERSON	= {#no_person	, jdbcType = VARCHAR}
				AND REQ_YYYYMM	= {#req_yyyymm	, jdbcType = VARCHAR}
			)
			WHEN MATCHED THEN UPDATE
			SET
				 AMT_BUDGET		= {#amt_budget	, jdbcType = VARCHAR}
				,AMT_EXPENSE	= {#amt_expense	, jdbcType = VARCHAR}
				,ID_LST			= #{id_lst		, jdbcType = VARCHAR}
				,DT_LST			= SYSDATE
				WHEN NOT MATCHED THEN INSERT
					CONSUME_GOAL_INFO(
						 NO_PERSON
						,REQ_YYYYMM
						,AMT_BUDGET
						,AMT_EXPENSE
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES(
					 {#no_person	, jdbcType = VARCHAR}
					,{#req_yyyymm	, jdbcType = VARCHAR}
					,{#amt_budget	, jdbcType = VARCHAR}
					,{#amt_expense	, jdbcType = VARCHAR}
					,{#id_frt		, jdbcType = VARCHAR}
					,SYSDATE
					,{#id_lst		, jdbcType = VARCHAR}
					,SYSDATE
				);
	</insert>
	<select id="getGoal" parameterType="com.koscom.consume.model.ConsumeGoalInfoVO" resultType="com.koscom.consume.model.ConsumeGoalInfoVO">
		SELECT
			 NO_PERSON
			,REQ_YYYYMM
			,AMT_BUDGET
			,AMT_EXPENSE
		FROM
			CONSUME_GOAL_INFO
		WHERE
				NO_PERSON	= 	{#no_person		, jdbcType = VARCHAR}
			AND REQ_YYYYMM	=	{#req_yyyymm	, jdbcType = VARCHAR}
	</select>
    <select id="listCalendarConsumeData" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			CI.TYPE_IN_OUT,
			NVL( SUM( CI.AMT_IN_OUT ), 0 ) AS AMT_IN_OUT,
			CI.DT_TRD
		FROM
			 CONSUME_INFO CI
			,(
				SELECT
					YN_INSTALLMENT
				FROM
					PERSON_SET_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			 ) PSI
		WHERE
			NO_PERSON IN
				<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
					#{each_person}
				</foreach>
			AND SUBSTR(CI.DT_TRD, 0, 6)	= #{ym_trd, jdbcType = VARCHAR}
			AND CI.YN_CANCEL			= 'N'
			AND CI.YN_BUDGET_EXCEPT		= 'N'
		    AND 1 =
				(
				CASE WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
					ELSE 0
				END
				)
			AND EXISTS (
				SELECT
				      1
				   FROM
				      ( SELECT
				         DISTINCT NO_PERSON AS OFFER_NO_PERSON, MEANS_CONSUME AS CD_TYPE, NO_CARD AS NO_CARD_ACC
				         FROM
				            CONSUME_INFO
				         WHERE
				            NO_PERSON = #{no_person, jdbcType = VARCHAR}
				      UNION ALL SELECT
				            OFFER_NO_PERSON, CD_TYPE, NO_CARD_ACC
				         FROM
				            SHARE_INFO_DETAIL A
				         INNER JOIN SHARE_INFO B ON
				            A.SEQ_SHARE = B.SEQ_SHARE
				            AND B.REQ_NO_PERSON = #{no_person, jdbcType = VARCHAR}
				            AND B.SHARE_STATUS = '02'
				            AND B.YN_CONSUME_INFO = 'Y'
				            AND B.DT_END_OFFER IS NULL
				         WHERE
				            1 = 1
				            AND A.CD_INFO = '03'
				            AND A.YN_SHARE = 'Y' )
				   WHERE
				      1 = 1
				      AND OFFER_NO_PERSON = CI.NO_PERSON
				      AND
				      ( CASE
				         WHEN CD_TYPE = '01' THEN SUBSTR( NO_CARD_ACC, - 3 ) /* 카드 */
				         WHEN CD_TYPE = '02' THEN CD_TYPE /* 현금 */
				         WHEN CD_TYPE = '03' THEN CD_TYPE /* 현금영수증 */
				         WHEN CD_TYPE = '04' THEN NO_CARD_ACC /* 입출금계좌 */
				      END ) IN
				      ( CASE
				         WHEN CI.MEANS_CONSUME = '01' THEN SUBSTR( CI.NO_CARD, - 3 ) /* 카드 */
				         WHEN CI.MEANS_CONSUME = '02' THEN CI.MEANS_CONSUME /* 현금 */
				         WHEN CI.MEANS_CONSUME = '03' THEN CI.MEANS_CONSUME /* 현금영수증 */
				         WHEN CI.MEANS_CONSUME = '04' THEN CI.NO_CARD /* 입출금계좌 */
				      END ) 
			)
		GROUP BY
			 TYPE_IN_OUT
			,DT_TRD
		ORDER BY
			TYPE_IN_OUT ASC
    </select>

    <select id="listDetailCalendarConsumeData" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 CI.NO_PERSON
			,CI.TYPE_IN_OUT
			,CI.DT_TRD
			,CI.AMT_IN_OUT
			,CI.CONTENTS
		FROM
			CONSUME_INFO CI
		WHERE
			NO_PERSON IN
				<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
					#{each_person}
				</foreach>
			AND CI.DT_TRD				= #{ymd_trd, jdbcType = VARCHAR}
			AND CI.YN_CANCEL			= 'N'
			AND CI.YN_BUDGET_EXCEPT		= 'N'
			AND EXISTS (
				SELECT
				      1
				   FROM
				      (
					      SELECT
					         DISTINCT NO_PERSON AS OFFER_NO_PERSON, MEANS_CONSUME AS CD_TYPE, NO_CARD AS NO_CARD_ACC
					         FROM
					            CONSUME_INFO
					         WHERE
					            NO_PERSON = #{no_person, jdbcType = VARCHAR}
					      UNION ALL SELECT
					            OFFER_NO_PERSON, CD_TYPE, NO_CARD_ACC
					         FROM
					            SHARE_INFO_DETAIL A
					         INNER JOIN SHARE_INFO B ON
					            A.SEQ_SHARE = B.SEQ_SHARE
					            AND B.REQ_NO_PERSON = #{no_person, jdbcType = VARCHAR}
					            AND B.SHARE_STATUS = '02'
					            AND B.YN_CONSUME_INFO = 'Y'
					            AND B.DT_END_OFFER IS NULL
					         WHERE
					            1 = 1
					            AND A.CD_INFO = '03'
					            AND A.YN_SHARE = 'Y' 
				       )
				       ,(
					       	SELECT
					       		YN_INSTALLMENT
					       	FROM
					       		PERSON_SET_INFO
					       	WHERE NO_PERSON = #{no_person, jdbcType = VARCHAR}
				       )
				   WHERE
				      1 = 1
				      AND OFFER_NO_PERSON = CI.NO_PERSON
				      AND 1 =
						(
							CASE WHEN YN_PAY_INSTALLMENT = 'N' THEN 1
								WHEN YN_INSTALLMENT = 'N' AND YN_PAY_INSTALLMENT = 'Y' AND MON_REMAINING = '0' THEN 1
								WHEN YN_INSTALLMENT = 'Y' AND YN_PAY_INSTALLMENT = 'Y' AND MON_REMAINING != '0' THEN 1
								ELSE 0
							END
						)
				      AND
				      ( CASE
				         WHEN CD_TYPE = '01' THEN SUBSTR( NO_CARD_ACC, - 3 ) /* 카드 */
				         WHEN CD_TYPE = '02' THEN CD_TYPE /* 현금 */
				         WHEN CD_TYPE = '03' THEN CD_TYPE /* 현금영수증 */
				         WHEN CD_TYPE = '04' THEN NO_CARD_ACC /* 입출금계좌 */
				      END ) IN
				      ( CASE
				         WHEN CI.MEANS_CONSUME = '01' THEN SUBSTR( CI.NO_CARD, - 3 ) /* 카드 */
				         WHEN CI.MEANS_CONSUME = '02' THEN CI.MEANS_CONSUME /* 현금 */
				         WHEN CI.MEANS_CONSUME = '03' THEN CI.MEANS_CONSUME /* 현금영수증 */
				         WHEN CI.MEANS_CONSUME = '04' THEN CI.NO_CARD /* 입출금계좌 */
				      END ) 
			)
		ORDER BY
			TYPE_IN_OUT ASC
    </select>
    <select id="getPaymentSummary" parameterType="com.koscom.consume.model.PaymentForm" resultType="com.koscom.consume.model.PaymentVO">
		SELECT
			 COUNT(CD_FC) AS COUNT_FC
			,SUM(MONTHLY_CHARGE) AS SUM_CHARGE_YYYYMM
		FROM
			 SCR_CARD_CHARGE_INFO
		WHERE
				NO_PERSON IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
			AND CHARGE_YYYYMM = #{charge_yyyymm, jdbcType = VARCHAR} 
    </select>
    <select id="listPayment" parameterType="com.koscom.consume.model.PaymentForm" resultType="com.koscom.consume.model.PaymentVO">
		SELECT
			 SCCI.NO_PERSON
			,PI.NM_PERSON
			,SCCI.CD_FC
			,FI.NM_FC
			,SCCI.CHARGE_YYYYMM
			,SCCI.MONTHLY_CHARGE
			,SCCI.DT_FRT
		FROM
			 SCR_CARD_CHARGE_INFO SCCI
			,PERSON_INFO PI
			,FC_INFO FI
		WHERE
				SCCI.NO_PERSON		IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
			AND SCCI.NO_PERSON	= PI.NO_PERSON
			AND SCCI.CD_FC		= FI.CD_FC 
			AND CHARGE_YYYYMM	= #{charge_yyyymm	, jdbcType=VARCHAR}
    </select>
    <update id="modifyYn_installment" parameterType="com.koscom.consume.model.PersonSetInfoForm">
		UPDATE
			PERSON_SET_INFO
		SET
			YN_INSTALLMENT = #{yn_installment, jdbcType = VARCHAR}
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR}
    </update>
    <update id="modifyDt_basic" parameterType="com.koscom.consume.model.PersonSetInfoForm">
		UPDATE
			PERSON_SET_INFO
		SET
			DT_BASIC = #{dt_basic, jdbcType = VARCHAR}
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR}
    </update>

    <select id="listDetailGoalClass" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT DISTINCT
			 PCCI.CD_CLASS
			,PCCI.NM_CLASS
			,PCCI.SORT_CLASS
			,NVL( CGI.AMT_BUDGET, 0 ) AS AMT_BUDGET
		FROM
			PERSON_CONSUME_CLASS_INFO PCCI
		LEFT JOIN
			(
				SELECT
					 CD_CLASS
					,AMT_BUDGET
				FROM
					CONSUME_GOAL_INFO
				WHERE
						NO_PERSON	= #{no_person, jdbcType = VARCHAR}
					AND REQ_YYYYMM	=
						CASE
							WHEN TO_NUMBER( TO_CHAR( SYSDATE, 'DD' ))<![CDATA[>]]>(
								SELECT
									TO_NUMBER( NVL( DT_BASIC, 0 ))
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType = VARCHAR}
							) THEN TO_CHAR( SYSDATE, 'YYYYMM' )
							ELSE TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )
						END
			) CGI ON
				PCCI.CD_CLASS	= CGI.CD_CLASS
		WHERE
				PCCI.NO_PERSON		=		#{no_person, jdbcType=VARCHAR}
			AND PCCI.TYPE_IN_OUT	=		'02'
			AND PCCI.YN_USE			=		'Y'
		ORDER BY
			TO_NUMBER(PCCI.SORT_CLASS) ASC
    </select>
    <select id="listDetailGoalMeans" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 A.CODE_VALUE AS CD_TYPE
			,B.CD_FC
			,B.NO_CARD
			,NVL(B.NM_CARD, '현금') AS NM_CARD
			,NVL(C.AMT_BUDGET, 0) AS AMT_BUDGET
		FROM
			COMM_CD A
		LEFT JOIN(
			SELECT
				 NO_PERSON
				,CD_FC
				,NO_CARD
				,NM_CARD
				,'01' AS CODE_VALUE
			FROM
				SCR_CARD_INFO
			WHERE
				NO_PERSON = #{no_person, jdbcType = VARCHAR}
			UNION(
					SELECT
						 #{no_person, jdbcType = VARCHAR}
						,CD_FC
						,NULL
						,'현금영수증'
						,'03' AS CODE_VALUE
					FROM
						FC_INFO
					WHERE
						NM_FC LIKE '%국세청%'
				)
			UNION(
					SELECT
						 NO_PERSON
						,CD_FC
						,AN AS NO_CARD
						,NM_AN AS NM_CARD
						,'04' AS CODE_VALUE
					FROM
						SCR_BANK_API_AN_INFO
					WHERE
							NO_PERSON = #{no_person, jdbcType = VARCHAR}
						AND TYPE_AN = '01'
				)
		) B ON
		(
			A.CODE_VALUE = B.CODE_VALUE
		)
		LEFT JOIN(
			SELECT
				 NO_PERSON
				,REQ_YYYYMM
				,CD_SET
				,CD_TYPE
				,NM_CARD
				,NO_CARD
				,AMT_BUDGET
			FROM
				CONSUME_GOAL_INFO
			WHERE
					NO_PERSON	= #{no_person, jdbcType = VARCHAR}
				AND REQ_YYYYMM =
					CASE
						WHEN TO_NUMBER( TO_CHAR( SYSDATE, 'DD' ))>(
							SELECT
								TO_NUMBER( NVL( DT_BASIC, 0 ))
							FROM
								PERSON_SET_INFO
							WHERE
								NO_PERSON = #{no_person, jdbcType = VARCHAR}
						) THEN TO_CHAR( SYSDATE, 'YYYYMM' )
						ELSE TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )
					END
		) C ON
		(
			A.CODE_VALUE = C.CD_TYPE
			AND 1 =
			(
				CASE
					WHEN A.CODE_VALUE				= '01'
						AND SUBSTRB( B.NO_CARD,- 3 )= SUBSTRB( C.NO_CARD,- 3 )
						AND B.NM_CARD				= C.NM_CARD					THEN 1
					WHEN A.CODE_VALUE				= '02'						THEN 1
					WHEN A.CODE_VALUE				= '03'						THEN 1
					WHEN A.CODE_VALUE				= '04'
						AND B.NO_CARD				= C.NO_CARD					THEN 1
					ELSE 0
				END
			)
		)
		WHERE
			A.CODE_GROUP = 'cd_consume'
			AND YN_SYSTEM_CODE IS NULL
		ORDER BY
			CD_TYPE ASC, CD_FC ASC, NO_CARD ASC
    </select>
    <select id="listPrevMonthClass" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT DISTINCT 
			 PCCI.CD_CLASS
			,NVL( CGI.AMT_EXPENSE, 0 ) AS AMT_EXPENSE
			,PCCI.SORT_CLASS
		FROM
			PERSON_CONSUME_CLASS_INFO PCCI
		LEFT JOIN(
				SELECT
					 NVL(SUM( AMT_IN_OUT ), 0) AS AMT_EXPENSE
					,CI.CD_CLASS
				FROM
					 CONSUME_INFO CI
					,(
						SELECT
							 CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| '00'
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_FROM
							,CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE,- 1 ) ), 'YYYYMMDD' )
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_TO
							,YN_INSTALLMENT
						FROM
							(
								SELECT
									 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
									,YN_INSTALLMENT
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType=VARCHAR}
							)
					) PSI
				WHERE
						CI.NO_PERSON				 = #{no_person, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT				 = '02'
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
					AND 1 = (
						CASE
							WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
							ELSE 0
						END
					)
					AND CI.YN_CANCEL				 =		'N'
					AND CI.YN_DELETE				 =		'N'
					AND CI.YN_BUDGET_EXCEPT			 =		'N'
				GROUP BY
					CI.CD_CLASS
			) CGI ON
			PCCI.CD_CLASS = CGI.CD_CLASS
		WHERE
				PCCI.NO_PERSON		= #{no_person, jdbcType = VARCHAR}
			AND PCCI.TYPE_IN_OUT	= '02'
			AND YN_USE				= 'Y'
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC
    </select>
    <select id="listPrevMonthMeans" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 A.CODE_VALUE AS CD_TYPE
			,B.CD_FC
			,B.NO_CARD
			,B.NM_CARD
			,NVL( C.AMT_EXPENSE, 0 ) AS AMT_EXPENSE
		FROM
			COMM_CD A
		LEFT JOIN(
				SELECT
					 NO_PERSON
					,CD_FC
					,NO_CARD
					,NM_CARD
					,'01' AS CODE_VALUE
				FROM
					SCR_CARD_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			UNION(
					SELECT
						 #{no_person, jdbcType = VARCHAR} AS NO_PERSON
						,CD_FC
						,NULL AS NO_CARD
						,NULL AS NM_CARD
						,'03' AS CODE_VALUE
					FROM
						FC_INFO
					WHERE
						NM_FC LIKE '%국세청%'
				)
			UNION(
					SELECT
						 NO_PERSON
						,CD_FC
						,AN AS NO_CARD
						,NM_AN AS NM_CARD
						,'04' AS CODE_VALUE
					FROM
						SCR_BANK_API_AN_INFO
					WHERE
							NO_PERSON = #{no_person, jdbcType = VARCHAR}
						AND TYPE_AN = '01'
				)
			) B ON
			(
				A.CODE_VALUE = B.CODE_VALUE
			)
		LEFT JOIN(
				SELECT
					 CI.MEANS_CONSUME AS CD_TYPE
					,CI.CD_FC
					,CI.NM_CARD
					,CI.NO_CARD
					,SUM( CI.AMT_IN_OUT ) AS AMT_EXPENSE
				FROM
					 CONSUME_INFO CI
					,(
						SELECT
							 CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| '00'
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_FROM
							,CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE,- 1 ) ), 'YYYYMMDD' )
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_TO
							,YN_INSTALLMENT
						FROM
							(
								SELECT
									 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
									,YN_INSTALLMENT
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType=VARCHAR}
							)
					) PSI
				WHERE
						CI.NO_PERSON				 =		#{no_person, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT				 =		'02'
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
					AND 1 = (
						CASE
							WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
							ELSE 0
						END
					)
					AND CI.YN_CANCEL				 =		'N'
					AND CI.YN_DELETE				 =		'N'
					AND CI.YN_BUDGET_EXCEPT			 =		'N'
				GROUP BY
					 MEANS_CONSUME
					,CD_FC
					,NO_CARD
					,NM_CARD
			) C ON
			(
				A.CODE_VALUE = C.CD_TYPE
				AND 1 =
				(
					CASE
						WHEN A.CODE_VALUE				= '01'
							AND SUBSTRB( B.NO_CARD,- 3 )= SUBSTRB( C.NO_CARD,- 3 )
							AND B.NM_CARD				= C.NM_CARD					THEN 1
						WHEN A.CODE_VALUE				= '02'						THEN 1
						WHEN A.CODE_VALUE				= '03'						THEN 1
						WHEN A.CODE_VALUE				= '04'
							AND B.NO_CARD				= C.NO_CARD					THEN 1
						ELSE 0
					END
				)
			)
		WHERE
			A.CODE_GROUP = 'cd_consume'
			AND YN_SYSTEM_CODE IS NULL
		ORDER BY
			CD_TYPE ASC, CD_FC ASC, NO_CARD ASC
    </select>
    <select id="listAverageClass" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 DISTINCT PCCI.CD_CLASS
			,NVL( CGI.AMT_EXPENSE, 0 ) AS AMT_EXPENSE
			,PCCI.SORT_CLASS
		FROM
			PERSON_CONSUME_CLASS_INFO PCCI
		LEFT JOIN(
				SELECT
					 CI.CD_CLASS
					,ROUND( SUM( CI.AMT_IN_OUT )/ 3, 0 ) AS AMT_EXPENSE
				FROM
					CONSUME_INFO CI
					,(
						SELECT
							 CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| '00'
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 4 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_FROM
							,CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE,- 1 ) ), 'YYYYMMDD' )
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_TO
							,YN_INSTALLMENT
						FROM
							(
								SELECT
									 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
									,YN_INSTALLMENT
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType=VARCHAR}
							)
					) PSI
				WHERE
						CI.NO_PERSON				 =		#{no_person, jdbcType=VARCHAR}
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
					AND 1 = (
						CASE
							WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
							ELSE 0
						END
					)
					AND CI.YN_CANCEL				 =		'N'
					AND CI.YN_DELETE				 =		'N'
					AND CI.YN_BUDGET_EXCEPT			 =		'N'
				GROUP BY
					 CI.NO_PERSON
					,CI.CD_CLASS
			) CGI ON
			PCCI.CD_CLASS = CGI.CD_CLASS
		WHERE
				PCCI.NO_PERSON		= #{no_person, jdbcType = VARCHAR}
			AND PCCI.TYPE_IN_OUT	= '02'
			AND PCCI.YN_USE			= 'Y'
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC
    </select>
    <select id="listAverageMeans" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 A.CODE_VALUE AS CD_TYPE
			,B.CD_FC
			,B.NO_CARD
			,B.NM_CARD
			,ROUND(NVL( C.AMT_EXPENSE/ 3, 0 ), 0) AS AMT_EXPENSE
		FROM
			COMM_CD A
		LEFT JOIN(
				SELECT
					 NO_PERSON
					,CD_FC
					,NO_CARD
					,NM_CARD
					,'01' AS CODE_VALUE
				FROM
					SCR_CARD_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			UNION(
					SELECT
						 #{no_person, jdbcType = VARCHAR} AS NO_PERSON
						,CD_FC
						,NULL AS NO_CARD
						,NULL AS NO_CARD
						,'03' AS CODE_VALUE
					FROM
						FC_INFO
					WHERE
						NM_FC LIKE '%국세청%'
				)
			UNION(
					SELECT
						 NO_PERSON
						,CD_FC
						,AN AS NO_CARD
						,NM_AN AS NM_CARD
						,'04' AS CODE_VALUE
					FROM
						SCR_BANK_API_AN_INFO
					WHERE
							NO_PERSON = #{no_person, jdbcType = VARCHAR}
						AND TYPE_AN = '01'
				)
			) B ON
			(
				A.CODE_VALUE = B.CODE_VALUE
			)
		LEFT JOIN(
				SELECT
					 CI.MEANS_CONSUME AS CD_TYPE
					,CI.CD_FC
					,CI.NM_CARD
					,CI.NO_CARD
					,SUM( CI.AMT_IN_OUT ) AS AMT_EXPENSE
				FROM
					 CONSUME_INFO CI
					,(
						SELECT
							CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| '00'
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
							END AS DT_FROM,
							CASE
								WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE,- 1 ) ), 'YYYYMMDD' )
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
							END AS DT_TO
						FROM
							(
								SELECT
									DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType=VARCHAR}
							)
					) PSI
				WHERE
					CI.NO_PERSON = #{no_person, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT = '02'
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
					AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
					AND CI.YN_CANCEL = 'N'
					AND CI.YN_DELETE = 'N'
					AND CI.YN_BUDGET_EXCEPT = 'N'
				GROUP BY
					 MEANS_CONSUME
					,CD_FC
					,NO_CARD
					,NM_CARD
			) C ON
			(
				A.CODE_VALUE = C.CD_TYPE
				AND 1 =
					(
						CASE
							WHEN A.CODE_VALUE = '01'
							AND SUBSTRB( B.NO_CARD,- 3 )= SUBSTRB( C.NO_CARD,- 3 )
							AND B.NM_CARD = C.NM_CARD THEN 1
							WHEN A.CODE_VALUE = '02' THEN 1
							WHEN A.CODE_VALUE = '03' THEN 1
							WHEN A.CODE_VALUE = '04'
							AND B.NO_CARD = C.NO_CARD THEN 1
							ELSE 0
						END
					)
			)
		WHERE
			A.CODE_GROUP = 'cd_consume'
			AND YN_SYSTEM_CODE IS NULL
		ORDER BY
			CD_TYPE ASC, CD_FC ASC, NO_CARD ASC
    </select>
    <insert id="createDetailGoalClass" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		<selectKey keyProperty="req_yyyymm" resultType="java.lang.String" order="BEFORE">
			SELECT
				CASE
					WHEN TO_NUMBER( TO_CHAR( SYSDATE, 'DD' ))> TO_NUMBER( NVL( DT_BASIC, 0 )) THEN TO_CHAR( SYSDATE, 'YYYYMM' )
					ELSE TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )
				END AS REQ_YYYYMM
			FROM
				PERSON_SET_INFO
			WHERE
				NO_PERSON = #{no_person, jdbcType = VARCHAR}
		</selectKey>
			MERGE INTO
				CONSUME_GOAL_INFO
					USING DUAL ON
				(
						NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
					AND REQ_YYYYMM	= #{req_yyyymm	, jdbcType = VARCHAR}
					AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
				)
				WHEN MATCHED THEN UPDATE
				SET
					 AMT_BUDGET		= #{amt_budget	, jdbcType = VARCHAR}
					,AMT_EXPENSE	= #{amt_expense	, jdbcType = VARCHAR}
					,ID_LST			= #{no_person	, jdbcType = VARCHAR}
					,DT_LST			= SYSDATE
					WHEN NOT MATCHED THEN INSERT
						(
							 NO_PERSON
							,REQ_YYYYMM
							,CD_SET
							,CD_CLASS
							,AMT_BUDGET
							,AMT_EXPENSE
							,ID_FRT
							,DT_FRT
							,ID_LST
							,DT_LST
						)
					VALUES(
						 #{no_person	, jdbcType = VARCHAR}
						,#{req_yyyymm	, jdbcType = VARCHAR}
						,'01'
						,#{cd_class		, jdbcType = VARCHAR}
						,#{amt_budget	, jdbcType = VARCHAR}
						,#{amt_expense	, jdbcType = VARCHAR}
						,#{no_person	, jdbcType = VARCHAR}
						,SYSDATE
						,#{no_person	, jdbcType = VARCHAR}
						,SYSDATE
					)
    </insert>
    <insert id="createDetailGoalMeans" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		<selectKey keyProperty="req_yyyymm" resultType="java.lang.String" order="BEFORE">
			SELECT
				CASE
					WHEN TO_NUMBER( TO_CHAR( SYSDATE, 'DD' ))> TO_NUMBER( NVL( DT_BASIC, 0 )) THEN TO_CHAR( SYSDATE, 'YYYYMM' )
					ELSE TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )
				END AS REQ_YYYYMM
			FROM
				PERSON_SET_INFO
			WHERE
				NO_PERSON = #{no_person, jdbcType = VARCHAR}
		</selectKey>
		MERGE INTO
			CONSUME_GOAL_INFO
				USING DUAL ON
			(
					NO_PERSON				=		#{no_person	, jdbcType = VARCHAR}
				AND REQ_YYYYMM				= 		#{req_yyyymm, jdbcType = VARCHAR}
				AND CD_TYPE					= 		#{cd_type	, jdbcType = VARCHAR}
				AND NVL(CD_FC, 'chk')		= NVL(	#{cd_fc		, jdbcType = VARCHAR}, 'chk')
				AND NVL(NO_CARD, 'chk')		= NVL(	#{no_card	, jdbcType = VARCHAR}, 'chk')
			)
			WHEN MATCHED THEN UPDATE
			SET
				 AMT_BUDGET		= #{amt_budget	, jdbcType = VARCHAR}
				,AMT_EXPENSE	= #{amt_expense	, jdbcType = VARCHAR}
				,ID_LST			= #{no_person	, jdbcType = VARCHAR}
				,DT_LST			= SYSDATE
				WHEN NOT MATCHED THEN INSERT
					(
						 NO_PERSON
						,REQ_YYYYMM
						,CD_SET
						,CD_TYPE
						,CD_FC
						,NO_CARD
						,NM_CARD
						,AMT_BUDGET
						,AMT_EXPENSE
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES(
					 #{no_person	, jdbcType = VARCHAR}
					,#{req_yyyymm	, jdbcType = VARCHAR}
					,'02'
					,#{cd_type		, jdbcType = VARCHAR}
					,#{cd_fc		, jdbcType = VARCHAR}
					,#{no_card		, jdbcType = VARCHAR}
					,#{nm_card		, jdbcType = VARCHAR}
					,#{amt_budget	, jdbcType = VARCHAR}
					,#{amt_expense	, jdbcType = VARCHAR}
					,#{no_person	, jdbcType = VARCHAR}
					,SYSDATE
					,#{no_person	, jdbcType = VARCHAR}
					,SYSDATE
				)
    </insert>
	<select id="getConsumeInfo" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 CI.SEQ_CONSUME
			,CI.TYPE_IN_OUT
			,CI.MEANS_CONSUME
			,CI.CD_FC
			,CI.NM_CARD
			,CI.NO_CARD
			,CI.DT_TRD
			,CI.CD_CLASS
			,PCCI.NM_CLASS
			,CI.CD_TYPE
			,PCCI.NM_TYPE
			,CI.CONTENTS
			,CI.MEMO
			,CI.AMT_IN_OUT
			,CI.NO_APPROVAL
			,CI.YN_PAY_INSTALLMENT
			,CI.YN_AUTO
			,CI.YN_PERSON_REGIST
			,CI.SEQ_TRAN
		FROM
			 CONSUME_INFO CI
			,PERSON_CONSUME_CLASS_INFO PCCI
		WHERE
				CI.SEQ_CONSUME	= #{seq_consume	, jdbcType = VARCHAR}
			AND CI.NO_PERSON	= PCCI.NO_PERSON
			AND CI.NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CI.CD_CLASS		= PCCI.CD_CLASS
			AND CI.CD_TYPE		= PCCI.CD_TYPE
			AND YN_CANCEL		= 'N'
			AND YN_DELETE		= 'N'
	</select>
	<select id="getConsumeInfoWithSeqTran" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 CI.SEQ_CONSUME
			,CI.TYPE_IN_OUT
			,CI.MEANS_CONSUME
			,CI.NM_CARD
			,CI.NO_CARD
			,CI.DT_TRD
			,CI.CD_CLASS
			,PCCI.NM_CLASS
			,CI.CD_TYPE
			,PCCI.NM_TYPE
			,CI.CONTENTS
			,CI.MEMO
			,CI.AMT_IN_OUT
			,CI.NO_APPROVAL
			,CI.YN_PAY_INSTALLMENT
			,CI.YN_AUTO
			,CI.YN_PERSON_REGIST
			,CI.SEQ_TRAN
		FROM
			 CONSUME_INFO CI
			,PERSON_CONSUME_CLASS_INFO PCCI
		WHERE
				CI.SEQ_TRAN		= #{seq_tran	, jdbcType = VARCHAR}
			AND CI.NO_PERSON	= PCCI.NO_PERSON
			AND CI.NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CI.CD_CLASS		= PCCI.CD_CLASS
			AND CI.CD_TYPE		= PCCI.CD_TYPE
			AND YN_CANCEL		= 'N'
			AND YN_DELETE		= 'N'
	</select>
	<update id="modifyPersonSortClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			SORT_CLASS = #{sort_class, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND TYPE_IN_OUT = #{type_in_out , jdbcType = VARCHAR}
	</update>
	<update id="modifyPersonSortType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			SORT_TYPE = #{sort_type, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>
	<update id="deletePersonConsumeClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			 YN_USE		= 'N'
			,SORT_CLASS = NULL
			,SORT_TYPE	= NULL
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND TYPE_IN_OUT = #{type_in_out	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
	</update>
	<update id="modifyPersonConsumeClassOtherClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			SORT_CLASS = TO_CHAR( TO_NUMBER( SORT_CLASS )-1 )
		WHERE
				NO_PERSON						 =		#{no_person		, jdbcType = VARCHAR}
			AND TYPE_IN_OUT						 =		#{type_in_out	, jdbcType = VARCHAR}
			AND TO_NUMBER( SORT_CLASS )	<![CDATA[>]]>	#{sort_class	, jdbcType = VARCHAR}
			AND CD_CLASS						!=		'99'
	</update>
	<update id="modifyConsumeInfoClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			CONSUME_INFO
		SET
			 CD_CLASS	= '99'
			,CD_TYPE	= '999'
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND TYPE_IN_OUT	= #{type_in_out	, jdbcType = VARCHAR}
	</update>
	<update id="modifyConsumeGoalInfoClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			CONSUME_GOAL_INFO
		SET
			AMT_BUDGET =
				TO_CHAR(
					(
						SELECT
							TO_NUMBER( AMT_BUDGET )
						FROM
							CONSUME_GOAL_INFO
						WHERE
								NO_PERSON	= #{no_person, jdbcType = VARCHAR}
							AND CD_SET		= '01'
							AND CD_CLASS	= #{cd_class, jdbcType = VARCHAR}
					)+
					(
						SELECT
							TO_NUMBER( AMT_BUDGET )
						FROM
							CONSUME_GOAL_INFO
						WHERE
								NO_PERSON	= #{no_person, jdbcType = VARCHAR}
							AND CD_SET		= '01'
							AND CD_CLASS	= '99'
					)
				)
		WHERE
				NO_PERSON	= #{no_person, jdbcType = VARCHAR}
			AND CD_CLASS	= '99'
	</update>
	<update id="deletePersonConsumeClassType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			 YN_USE		= 'N'
			,SORT_TYPE	= NULL
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>
	<update id="modifyPersonConsumeClassOtherType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			SORT_TYPE = TO_CHAR( TO_NUMBER( SORT_TYPE )-1 )
		WHERE
				NO_PERSON						 =		#{no_person		, jdbcType = VARCHAR}
			AND TYPE_IN_OUT						 =		#{type_in_out	, jdbcType = VARCHAR}
			AND CD_CLASS						 =		#{cd_class		, jdbcType = VARCHAR}
			AND TO_NUMBER( SORT_TYPE )	<![CDATA[>]]>	#{sort_type		, jdbcType = VARCHAR}
			AND CD_TYPE							!=		'999'
	</update>
	<update id="modifyConsumeInfoType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			CONSUME_INFO
		SET
			CD_TYPE = '999'
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>

	<update id="modifyPersonConsumeClassNmClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			NM_CLASS = #{nm_class, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND TYPE_IN_OUT	= #{type_in_out	, jdbcType = VARCHAR}
	</update>
	<update id="modifyPersonConsumeClassNmType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			NM_TYPE = #{nm_type, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>
	<insert id="createPersonConsumeClassClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				 NO_PERSON
				,CD_CONSUME_CLASS
				,TYPE_IN_OUT
				,CD_CLASS
				,NM_CLASS
				,CD_TYPE
				,NM_TYPE
				,YN_DEFAULT
				,YN_USE
				,SORT_CLASS
				,SORT_TYPE
				,ID_FRT
				,DT_FRT
				,ID_LST
				,DT_LST
			)(
				SELECT
					 #{no_person, jdbcType = VARCHAR}							AS NO_PERSON
					,(MAX( TO_NUMBER( CD_CLASS ))+ 1)|| '999'					AS CD_CONSUME_CLASS
					,'02'														AS TYPE_IN_OUT
					,MAX( TO_NUMBER( CD_CLASS ))+ 1								AS CD_CLASS
					,#{nm_class, jdbcType = VARCHAR}							AS NM_CLASS
					,'999'														AS CD_TYPE
					,'기타'														AS_NM_TYPE
					,'N'														AS YN_DEFAULT
					,'Y'														AS YN_USE
					,TO_CHAR( MAX( TO_NUMBER( NVL( SORT_CLASS, 0 ) ) ) + 1 )	AS SORT_CLASS
					,'99'														AS SORT_TYPE
					,#{no_person, jdbcType = VARCHAR}							AS IS_FRT
					,SYSDATE													AS DT_FRT
					,#{no_person, jdbcType = VARCHAR}							AS ID_LST
					,SYSDATE													AS DT_LST
				FROM
					PERSON_CONSUME_CLASS_INFO
				WHERE
						NO_PERSON	= #{no_person, jdbcType = VARCHAR}
					AND TYPE_IN_OUT = '02'
					AND CD_CLASS	!= '99'
			)
	</insert>
	<insert id="createPersonConsumeClassType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				 NO_PERSON
				,CD_CONSUME_CLASS
				,TYPE_IN_OUT
				,CD_CLASS
				,NM_CLASS
				,CD_TYPE
				,NM_TYPE
				,YN_DEFAULT
				,YN_USE
				,SORT_CLASS
				,SORT_TYPE
				,ID_FRT
				,DT_FRT
				,ID_LST
				,DT_LST
			)(
				SELECT
					 #{no_person, jdbcType = VARCHAR}									AS NO_PERSON
					,#{cd_class, jdbcType = VARCHAR} || TO_CHAR( MAX( CD_TYPE )+ 1 )	AS CD_CONSUME_CLASS
					,'02'																AS TYPE_IN_OUT
					,#{cd_class, jdbcType = VARCHAR}									AS CD_CLASS
					,NM_CLASS															AS NM_CLASS
					,TO_CHAR( MAX( CD_TYPE )+ 1 )										AS CD_TYPE
					,#{nm_type, jdbcType = VARCHAR}										AS NM_TYPE
					,'N'																AS YN_DEFAULT
					,'Y'																AS YN_USE
					,SORT_CLASS															AS SORT_CLASS
					,TO_CHAR( MAX( SORT_TYPE )+ 1 )										AS SORT_TYPE
					,#{no_person, jdbcType = VARCHAR}									AS ID_FRT
					,SYSDATE															AS DT_FRT
					,#{no_person, jdbcType = VARCHAR}									AS ID_LST
					,SYSDATE															AS DT_LST
				FROM
					(
						SELECT
							 NM_CLASS
							,TO_NUMBER( MAX( CD_TYPE )) AS CD_TYPE
							,SORT_CLASS
							,TO_NUMBER( MAX( SORT_TYPE )) AS SORT_TYPE
						FROM
							PERSON_CONSUME_CLASS_INFO
						WHERE
								NO_PERSON = #{no_person, jdbcType = VARCHAR}
							AND CD_CLASS = #{cd_class, jdbcType = VARCHAR}
							AND CD_TYPE != '999'
						GROUP BY
							NM_CLASS,
							SORT_CLASS
					UNION ALL SELECT
							NM_CLASS,
							100 AS CD_TYPE,
							SORT_CLASS,
							0 AS SORT_TYPE
						FROM
							PERSON_CONSUME_CLASS_INFO
						WHERE
								NO_PERSON = #{no_person, jdbcType = VARCHAR}
							AND CD_CLASS = #{cd_class, jdbcType = VARCHAR}
					)
				GROUP BY NM_CLASS, SORT_CLASS
			)
	</insert>
	<insert id="createPersonConsumeClassIncome" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				 NO_PERSON
				,CD_CONSUME_CLASS
				,TYPE_IN_OUT
				,CD_CLASS
				,NM_CLASS
				,CD_TYPE
				,YN_DEFAULT
				,YN_USE
				,SORT_CLASS
				,SORT_TYPE
				,ID_FRT
				,DT_FRT
				,ID_LST
				,DT_LST
			)(
				SELECT
					 #{no_person, jdbcType = VARCHAR}				AS NO_PERSON
					,DECODE(
						LENGTH( MAX( TO_NUMBER( CD_CLASS ))),
						1, '0' ||( MAX( TO_NUMBER( CD_CLASS ))+ 1 ),
						2,( MAX( TO_NUMBER( CD_CLASS ))+ 1 )
					)|| '000'										AS CD_CONSUME_CLASS
					,'01'											AS TYPE_IN_OUT
					,DECODE(
						LENGTH( MAX( TO_NUMBER( CD_CLASS ))),
						1,'0' ||( MAX( TO_NUMBER( CD_CLASS ))+ 1 ),
						2,( MAX( TO_NUMBER( CD_CLASS ))+ 1 )
					)												AS CD_CLASS
					,#{nm_class, jdbcType = VARCHAR}				AS NM_CLASS
					,'000'											AS CD_TYPE
					,'N'											AS YN_DEFAULT
					,'Y'											AS YN_USE
					,MAX( TO_NUMBER( NVL( SORT_CLASS, 0 ) ) )+ 1	AS SORT_CLASS
					,'1'											AS SORT_TYPE
					,#{no_person, jdbcType = VARCHAR}				AS ID_FRT
					,SYSDATE										AS DT_FRT
					,#{no_person, jdbcType = VARCHAR}				AS ID_LST
					,SYSDATE										AS DT_LST
				FROM
					PERSON_CONSUME_CLASS_INFO
				WHERE
						NO_PERSON	=  #{no_person, jdbcType = VARCHAR}
					AND TYPE_IN_OUT	=  '01'
					AND CD_CLASS	!= '99'
			)
	</insert>
	<update id="modifyConsumeInfo" parameterType="com.koscom.consume.model.ConsumeVO">
		UPDATE
			CONSUME_INFO
		SET
			 NM_CARD			= #{nm_card			, jdbcType = VARCHAR}
			 <if test="@com.koscom.util.MybatisUtil@-">
				,DT_TRD				= #{dt_trd			, jdbcType = VARCHAR}
				,AMT_IN_OUT			= #{amt_in_out		, jdbcType = VARCHAR}
			 </if>
			,CD_CLASS			= #{cd_class		, jdbcType = VARCHAR}
			,CD_TYPE			= #{cd_type			, jdbcType = VARCHAR}
			,CONTENTS			= #{contents		, jdbcType = VARCHAR}
			,MEMO				= #{memo			, jdbcType = VARCHAR}
			,YN_PERSON_REGIST	= #{yn_person_regist, jdbcType = VARCHAR}
		WHERE
			NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			<choose>
				<when test="@com.koscom.util.MybatisUtil@contains('Y',yn_pay_installment)">
					AND NO_APPROVAL = #{no_approval , jdbcType = VARCHAR}
				</when>
				<otherwise>
					AND SEQ_CONSUME = #{seq_consume	, jdbcType = VARCHAR}
				</otherwise>
			</choose>
	</update>
	<update id="deleteConsumeInfo" parameterType="com.koscom.consume.model.ConsumeForm">
		UPDATE
			CONSUME_INFO
		SET
			YN_DELETE = 'Y'
		WHERE
				NO_PERSON		= #{no_person	, jdbcType = VARCHAR}
				<choose>
					<when test="@com.koscom.util.MybatisUtil@contains('Y',yn_pay_installment)">
						AND NO_APPROVAL = #{no_approval , jdbcType = VARCHAR}
					</when>
					<otherwise>
						AND SEQ_CONSUME = #{seq_consume	, jdbcType = VARCHAR}
					</otherwise>
				</choose>
	</update>
	<select id="listPrevTransactionDetail" parameterType="com.koscom.consume.model.ConsumeVO" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 A.NO_PERSON
			,NULL AS SEQ_CONSUME
			,CASE
				WHEN A.AMT_WDRL = '0' THEN '01'
				WHEN A.AMT_DEP = '0' THEN '02'
			 END AS TYPE_IN_OUT
			,'04' AS MEANS_CONSUME
			,B.CD_FC
			,B.NM_AN AS NM_CARD
			,A.AN AS NO_CARD
			,NULL AS TYPE_CARD
			,A.DT_TRD
			,A.TM_TRD
			,NULL AS NO_BIZ
			,NULL AS NM_BIZ
			,#{cd_class, jdbcType = VARCHAR} AS CD_CLASS
			,#{cd_type, jdbcType = VARCHAR} AS CD_TYPE
			,CASE
				WHEN DOC1 IS NOT NULL THEN DOC1
				ELSE DOC2
			 END AS CONTENTS
			,NULL AS MEMO
			,NULL AS GRADE
			,TO_CHAR( TO_NUMBER( AMT_WDRL )+ TO_NUMBER( AMT_DEP )) AS AMT_IN_OUT
			,NULL AS NO_APPROVAL
			,'0' AS MON_INSTALLMENT
			,'0' AS MON_REMAINING
			,'N' AS YN_PAY_INSTALLMENT
			,'N' AS YN_CANCEL
			,'N' AS YN_DELETE
			,'Y' AS YN_AUTO
			,'N' AS YN_BUDGET_EXCEPT
			,'N' AS YN_PERSON_REGIST
			,A.SEQ_TRAN
		FROM
			 SCR_TRANSACTION_DETAIL A
			,SCR_BANK_API_AN_INFO B
		WHERE
				A.NO_PERSON		= #{no_person	, jdbcType = VARCHAR}
			AND A.NO_PERSON		= B.NO_PERSON
			AND A.AN			= B.AN
			AND A.AN			= XX1.ENC_VARCHAR2_INS(#{no_card, jdbcType = VARCHAR}, '11', 'FS_ARIA', 'SCR_TRANSACTION_DETAIL', 'AN')
			AND B.CD_FC			= #{cd_fc		, jdbcType = VARCHAR}
			AND #{type_in_out, jdbcType = VARCHAR} =(
				CASE
					WHEN A.AMT_WDRL = '0' THEN '01'
					WHEN A.AMT_DEP = '0' THEN '02'
				END
			)
			AND 1 = (
				CASE
					WHEN A.DOC1	= #{contents, jdbcType = VARCHAR} THEN 1
					WHEN A.DOC1 IS NULL AND A.DOC2 = #{contents, jdbcType = VARCHAR} THEN 1
					ELSE 0
				END
			)
	</select>
	<insert id="createConsumeInfoAcc" parameterType="com.koscom.consume.model.ConsumeVO">
		<selectKey keyProperty="seq_consume" resultType="java.lang.Integer" order="BEFORE">
			(SELECT NVL(MAX(SEQ_CONSUME),0)+1 FROM CONSUME_INFO WHERE NO_PERSON = #{no_person, jdbcType = VARCHAR})
		</selectKey>
			INSERT INTO
				CONSUME_INFO(
					 NO_PERSON
					,SEQ_CONSUME
					,TYPE_IN_OUT
					,MEANS_CONSUME
					,CD_FC
					,NM_CARD
					,NO_CARD
					,TYPE_CARD
					,DT_TRD
					,TM_TRD
					,NO_BIZ
					,NM_BIZ
					,CD_CLASS
					,CD_TYPE
					,CONTENTS
					,MEMO
					,GRADE
					,AMT_IN_OUT
					,NO_APPROVAL
					,MON_INSTALLMENT
					,MON_REMAINING
					,YN_PAY_INSTALLMENT
					,YN_CANCEL
					,YN_DELETE
					,YN_AUTO
					,YN_BUDGET_EXCEPT
					,YN_PERSON_REGIST
					,SEQ_TRAN
					,ID_FRT
					,DT_FRT
					,ID_LST
					,DT_LST
				)
				VALUES (
					 #{no_person			, jdbcType = VARCHAR}
					,#{seq_consume}
					,#{type_in_out			, jdbcType = VARCHAR}
					,#{means_consume		, jdbcType = VARCHAR}
					,#{cd_fc				, jdbcType = VARCHAR}
					,#{nm_card				, jdbcType = VARCHAR}
					,XX1.ENC_VARCHAR2_INS(#{no_card, jdbcType = VARCHAR}, '11', 'FS_ARIA', 'CONSUME_INFO', 'NO_CARD')
					,#{type_card			, jdbcType = VARCHAR}
					,#{dt_trd				, jdbcType = VARCHAR}
					,#{tm_trd				, jdbcType = VARCHAR}
					,#{no_biz				, jdbcType = VARCHAR}
					,#{nm_biz				, jdbcType = VARCHAR}
					,#{cd_class				, jdbcType = VARCHAR}
					,#{cd_type				, jdbcType = VARCHAR}
					,#{contents				, jdbcType = VARCHAR}
					,#{memo					, jdbcType = VARCHAR}
					,#{grade				, jdbcType = VARCHAR}
					,#{amt_in_out			, jdbcType = VARCHAR}
					,#{no_approval			, jdbcType = VARCHAR}
					,#{mon_installment		, jdbcType = VARCHAR}
					,#{mon_remaining		, jdbcType = VARCHAR}
					,#{yn_pay_installment	, jdbcType = VARCHAR}
					,#{yn_cancel			, jdbcType = VARCHAR}
					,#{yn_delete			, jdbcType = VARCHAR}
					,#{yn_auto				, jdbcType = VARCHAR}
					,#{yn_budget_except		, jdbcType = VARCHAR}
					,#{yn_person_regist		, jdbcType = VARCHAR}
					,#{seq_tran				, jdbcType = VARCHAR}
					,#{no_person			, jdbcType = VARCHAR}
					,SYSDATE
					,#{no_person			, jdbcType = VARCHAR}
					,SYSDATE
				)
	</insert>
	
	<insert id="createConsumeInfoOthers" parameterType="com.koscom.consume.model.ConsumeVO">
		<selectKey keyProperty="seq_consume" resultType="java.lang.Integer" order="BEFORE">
			(SELECT NVL(MAX(SEQ_CONSUME),0)+1 FROM CONSUME_INFO WHERE NO_PERSON = #{no_person, jdbcType = VARCHAR})
		</selectKey>
			INSERT INTO
				CONSUME_INFO(
					 NO_PERSON
					,SEQ_CONSUME
					,TYPE_IN_OUT
					,MEANS_CONSUME
					,CD_FC
					,NM_CARD
					,NO_CARD
					,TYPE_CARD
					,DT_TRD
					,TM_TRD
					,NO_BIZ
					,NM_BIZ
					,CD_CLASS
					,CD_TYPE
					,CONTENTS
					,MEMO
					,GRADE
					,AMT_IN_OUT
					,NO_APPROVAL
					,MON_INSTALLMENT
					,MON_REMAINING
					,YN_PAY_INSTALLMENT
					,YN_CANCEL
					,YN_DELETE
					,YN_AUTO
					,YN_BUDGET_EXCEPT
					,YN_PERSON_REGIST
					<if test="@com.koscom.util.MybatisUtil@isNotEmpty(seq_tran)">
						,SEQ_TRAN
					</if>
					,ID_FRT
					,DT_FRT
					,ID_LST
					,DT_LST
				)
				VALUES (
					 #{no_person			, jdbcType = VARCHAR}
					,#{seq_consume}
					,#{type_in_out			, jdbcType = VARCHAR}
					,#{means_consume		, jdbcType = VARCHAR}
					,#{cd_fc				, jdbcType = VARCHAR}
					,#{nm_card				, jdbcType = VARCHAR}
					,#{no_card				, jdbcType = VARCHAR}
					,#{type_card			, jdbcType = VARCHAR}
					,#{dt_trd				, jdbcType = VARCHAR}
					,#{tm_trd				, jdbcType = VARCHAR}
					,#{no_biz				, jdbcType = VARCHAR}
					,#{nm_biz				, jdbcType = VARCHAR}
					,#{cd_class				, jdbcType = VARCHAR}
					,#{cd_type				, jdbcType = VARCHAR}
					,#{contents				, jdbcType = VARCHAR}
					,#{memo					, jdbcType = VARCHAR}
					,#{grade				, jdbcType = VARCHAR}
					,#{amt_in_out			, jdbcType = VARCHAR}
					,#{no_approval			, jdbcType = VARCHAR}
					,#{mon_installment		, jdbcType = VARCHAR}
					,#{mon_remaining		, jdbcType = VARCHAR}
					,#{yn_pay_installment	, jdbcType = VARCHAR}
					,#{yn_cancel			, jdbcType = VARCHAR}
					,#{yn_delete			, jdbcType = VARCHAR}
					,#{yn_auto				, jdbcType = VARCHAR}
					,#{yn_budget_except		, jdbcType = VARCHAR}
					,#{yn_person_regist		, jdbcType = VARCHAR}
					<if test="@com.koscom.util.MybatisUtil@isNotEmpty(seq_tran)">
						,#{seq_tran			, jdbcType = VARCHAR}
					</if>
					,#{no_person			, jdbcType = VARCHAR}
					,SYSDATE
					,#{no_person			, jdbcType = VARCHAR}
					,SYSDATE
				)
	</insert>
	
	<select id="getBannerData" parameterType="com.koscom.consume.model.ConsumeVO" resultType="java.lang.Integer">
		SELECT
			NVL( COUNT( 1 ), 0 )
		FROM
			 CONSUME_INFO CI
			,(
				SELECT
					 CASE
						WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( ADD_MONTHS( SYSDATE, 0 ), 'YYYYMM' )|| '00'
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, 0 ), 'YYYYMM' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, -1 ), 'YYYYMM' )|| DT_BASIC
					 END AS DT_FROM
					,CASE
						WHEN DT_BASIC						   IS NULL		  THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE, 0 ) ), 'YYYYMMDD' )
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, 1 ), 'YYYYMM' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, 0 ), 'YYYYMM' )|| DT_BASIC
					 END AS DT_TO
					,YN_INSTALLMENT
				FROM
					(
						SELECT
							 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
							,YN_INSTALLMENT
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType=VARCHAR}
					)
			) PSI
		WHERE
				CI.NO_PERSON				 = #{no_person	, jdbcType = VARCHAR}
			AND CI.CD_FC					 = #{cd_fc		, jdbcType = VARCHAR}
			AND CI.TYPE_IN_OUT				 = #{type_in_out, jdbcType = VARCHAR}
			AND CI.CONTENTS					 = #{contents	, jdbcType = VARCHAR}
			AND 1 = (
				CASE
					WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
					WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
					ELSE 0
				END
			)
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[>=]]>	TO_NUMBER(PSI.DT_FROM)
			AND TO_NUMBER(CI.DT_TRD)<![CDATA[<]]>	TO_NUMBER(PSI.DT_TO)
	</select>
	<select id="listMeansConsume" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 MEANS_CONSUME
			,CD_FC
			,NO_CARD
			,NM_CARD
		FROM
			(
				SELECT
					 '02' AS MEANS_CONSUME
					,NULL AS CD_FC
					,NULL AS NO_CARD
					,NULL AS NM_CARD
					,1 AS SORT_ORDER
				FROM
					DUAL
			UNION SELECT
					 '04' AS MEANS_CONSUME
					,CD_FC
					,AN AS NO_CARD
					,NM_AN AS NM_CARD
					,2 AS SORT_ORDER
				FROM
					SCR_BANK_API_AN_INFO
				WHERE
						NO_PERSON	= #{no_person, jdbcType = VARCHAR}
					AND TYPE_AN		= '01'
			)
		ORDER BY
			 SORT_ORDER ASC
			,CD_FC DESC
			,NO_CARD DESC
	</select>
    <select id="listCalendarConsumeDataYear" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 MM.MM_BASIC AS DT_TRD
			,SUM( MM.AMT_IN_OUT ) AS AMT_IN_OUT
			,MM.TYPE_IN_OUT AS TYPE_IN_OUT
		FROM
			(
				SELECT
					CI.NO_PERSON
					,CI.SEQ_CONSUME
					,CI.TYPE_IN_OUT
					,CI.MEANS_CONSUME
					,CI.CD_FC
					,CI.NM_CARD
					,CI.DT_TRD
					,PCCI.NM_CLASS
					,PCCI.NM_TYPE
					,CI.CONTENTS
					,CI.AMT_IN_OUT
					,CI.YN_AUTO
					,NVL( PSI.DT_BASIC, '01' )
					,TO_CHAR( SYSDATE, 'DD' )
					,CASE
						WHEN /* TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>=]]> NVL( PSI.DT_BASIC, '01' ) AND*/
						TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'DD' ) <![CDATA[>=]]> NVL( PSI.DT_BASIC, '01' ) THEN TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'YYYYMM' )
						ELSE TO_CHAR( ADD_MONTHS( CI.DT_TRD,- 1 ), 'YYYYMM' )
					END MM_BASIC
				FROM
					CONSUME_INFO CI,
					PERSON_CONSUME_CLASS_INFO PCCI,
					PERSON_SET_INFO PSI
				WHERE
						CI.NO_PERSON IN
							<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
								#{each_person}
							</foreach>
					AND CI.NO_PERSON = PCCI.NO_PERSON
					AND CI.CD_CLASS = PCCI.CD_CLASS
					AND CI.CD_TYPE = PCCI.CD_TYPE
					AND CI.NO_PERSON = PSI.NO_PERSON
				    AND 1 =
						(
						CASE WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
							ELSE 0
						END
						)
					AND YN_CANCEL = 'N'
					AND YN_DELETE = 'N'
					AND YN_BUDGET_EXCEPT = 'N'
					AND EXISTS(
						SELECT
							1
						FROM
							(
								SELECT
									 DISTINCT NO_PERSON AS OFFER_NO_PERSON
									,MEANS_CONSUME AS CD_TYPE
									,NO_CARD AS NO_CARD_ACC
								FROM
									CONSUME_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType = VARCHAR}
							UNION ALL SELECT
									 OFFER_NO_PERSON
									,CD_TYPE
									,NO_CARD_ACC
								FROM
									SHARE_INFO_DETAIL A
								INNER JOIN SHARE_INFO B ON
										A.SEQ_SHARE			= B.SEQ_SHARE
									AND B.REQ_NO_PERSON		= #{no_person, jdbcType = VARCHAR}
									AND B.SHARE_STATUS		= '02'
									AND B.YN_CONSUME_INFO	= 'Y'
									AND B.DT_END_OFFER		IS NULL
								WHERE
									1 = 1
									AND A.CD_INFO = '03'
									AND A.YN_SHARE = 'Y'
							)
						WHERE
							1 = 1
							AND OFFER_NO_PERSON = CI.NO_PERSON
							AND(
								CASE
									WHEN CD_TYPE = '01' THEN SUBSTR( NO_CARD_ACC,- 3 ) /* 카드 */
									WHEN CD_TYPE = '02' THEN CD_TYPE /* 현금 */
									WHEN CD_TYPE = '03' THEN CD_TYPE /* 현금영수증 */
									WHEN CD_TYPE = '04' THEN NO_CARD_ACC /* 입출금계좌 */
								END
							) IN(
								CASE
									WHEN CI.MEANS_CONSUME = '01' THEN SUBSTR( CI.NO_CARD,- 3 ) /* 카드 */
									WHEN CI.MEANS_CONSUME = '02' THEN CI.MEANS_CONSUME /* 현금 */
									WHEN CI.MEANS_CONSUME = '03' THEN CI.MEANS_CONSUME /* 현금영수증 */
									WHEN CI.MEANS_CONSUME = '04' THEN CI.NO_CARD /* 입출금계좌 */
								END
							)
					)
				ORDER BY
					CI.DT_TRD DESC,
					CI.TM_TRD DESC
			) MM
		WHERE
			1 = 1
			AND SUBSTR( MM.MM_BASIC, 0, 4 )= #{y_trd, jdbcType = VARCHAR}
		GROUP BY
			 MM.MM_BASIC
			,MM.TYPE_IN_OUT
    </select>
    <select id="listConsumeAnalyzeMonth" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 DT_TRD
			,SUM( AMT_IN_OUT ) AS AMT_IN_OUT
		FROM
			(
				SELECT
					 CASE
						WHEN PSI.DT_BASIC IS NULL THEN SUBSTR( DT_TRD, 0, 6 )
						WHEN TO_NUMBER( PSI.DT_BASIC )<![CDATA[>]]> TO_NUMBER( SUBSTR( CI.DT_TRD, 7 )) THEN TO_CHAR( ADD_MONTHS( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ),- 1 ), 'YYYYMM' )
						WHEN TO_NUMBER( PSI.DT_BASIC )<![CDATA[<=]]> TO_NUMBER( SUBSTR( CI.DT_TRD, 7 )) THEN SUBSTR( CI.DT_TRD, 0, 6 )
					 END AS DT_TRD
					,AMT_IN_OUT
				FROM
					 CONSUME_INFO CI
					,(
						SELECT
							 DT_BASIC
							,YN_INSTALLMENT
							,CASE
								WHEN DT_BASIC IS NULL THEN TO_CHAR( ADD_MONTHS( SYSDATE, 0 ), 'YYYYMM' )|| '00'
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[>]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, -2 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, -3 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_FROM
							,CASE
								WHEN DT_BASIC IS NULL THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE, 0 )), 'YYYYMMDD' )
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[>]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, 1 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, 0 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_TO
						FROM
							(
								SELECT
									 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
									,YN_INSTALLMENT
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType = VARCHAR}
							)
					) PSI
				WHERE
						CI.NO_PERSON					= #{no_person	, jdbcType = VARCHAR}
					AND CI.CD_FC						= #{cd_fc		, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT					= #{type_in_out	, jdbcType = VARCHAR}
					AND TO_NUMBER( CI.DT_TRD ) <![CDATA[>=]]> TO_NUMBER( PSI.DT_FROM )
					AND TO_NUMBER( CI.DT_TRD ) <![CDATA[<]]>TO_NUMBER( PSI.DT_TO )
					AND CI.CONTENTS						= #{contents	, jdbcType = VARCHAR}
				    AND 1 =
						(
						CASE WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
							ELSE 0
						END
						)
			)
		GROUP BY
			DT_TRD
		ORDER BY
			DT_TRD DESC
    </select>
    <select id="listConsumeAnalyzeDay" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 A.MEANS_CONSUME
			,A.DT_TRD
			,A.TM_TRD
			,A.AMT_IN_OUT
			,FI.NM_FC
		FROM
			(
				SELECT
					 CI.CD_FC
					,CI.MEANS_CONSUME
					,CI.DT_TRD
					,CI.TM_TRD
					,CI.AMT_IN_OUT
				FROM
					 CONSUME_INFO CI
					,(
						SELECT
							 YN_INSTALLMENT
							,CASE
								WHEN DT_BASIC IS NULL THEN TO_CHAR( ADD_MONTHS( SYSDATE, 0 ), 'YYYYMM' )|| '00'
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[>]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_FROM
							,CASE
								WHEN DT_BASIC IS NULL THEN TO_CHAR( LAST_DAY( ADD_MONTHS( SYSDATE, 0 )), 'YYYYMMDD' )
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[>]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, 1 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' )<![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE, 0 ), 'YYYYMM' )|| DT_BASIC
							 END AS DT_TO
						FROM
							(
								SELECT
									 DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
									,YN_INSTALLMENT
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person	, jdbcType = VARCHAR}
							)
					) PSI
				WHERE
						CI.NO_PERSON					= #{no_person	, jdbcType = VARCHAR}
					AND CI.CD_FC						= #{cd_fc		, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT					= #{type_in_out	, jdbcType = VARCHAR}
					AND TO_NUMBER( CI.DT_TRD ) <![CDATA[>=]]> TO_NUMBER( PSI.DT_FROM )
					AND TO_NUMBER( CI.DT_TRD ) <![CDATA[<]]> TO_NUMBER( PSI.DT_TO )
					AND CONTENTS						= #{contents	, jdbcType = VARCHAR}
				    AND 1 =
						(
						CASE WHEN CI.YN_PAY_INSTALLMENT = 'N' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'N' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING = '0' THEN 1
							WHEN PSI.YN_INSTALLMENT = 'Y' AND CI.YN_PAY_INSTALLMENT = 'Y' AND CI.MON_REMAINING != '0' THEN 1
							ELSE 0
						END
						)
				ORDER BY
					CI.DT_TRD DESC
			) A
		LEFT JOIN FC_INFO FI ON
			A.CD_FC = FI.CD_FC
    </select>
    <select id="listSettlementConsumeDataYear" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
				 MM.MM_BASIC AS DT_TRD
				,SUM( MM.AMT_IN_OUT ) AS AMT_IN_OUT
				,MM.TYPE_IN_OUT AS TYPE_IN_OUT
			FROM
				(
					SELECT
						CI.NO_PERSON
						,CI.SEQ_CONSUME
						,CI.TYPE_IN_OUT
						,CI.MEANS_CONSUME
						,CI.CD_FC
						,CI.NM_CARD
						,CI.DT_TRD
						,PCCI.NM_CLASS
						,PCCI.NM_TYPE
						,CI.CONTENTS
						,CI.AMT_IN_OUT
						,CI.YN_AUTO
						,NVL( PSI.DT_BASIC, '01' )
						,TO_CHAR( SYSDATE, 'DD' )
						,CASE
							WHEN /* TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>=]]> NVL( PSI.DT_BASIC, '01' ) AND*/
							TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'DD' ) >= NVL( PSI.DT_BASIC, '01' ) THEN TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'YYYYMM' )
							ELSE TO_CHAR( ADD_MONTHS( CI.DT_TRD,- 1 ), 'YYYYMM' )
						END MM_BASIC
					FROM
						CONSUME_INFO CI,
						PERSON_CONSUME_CLASS_INFO PCCI,
						PERSON_SET_INFO PSI
					WHERE
							CI.NO_PERSON IN 
								<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
									#{each_person}
								</foreach>
						AND CI.NO_PERSON = PCCI.NO_PERSON
						AND CI.CD_CLASS = PCCI.CD_CLASS
						AND CI.CD_TYPE = PCCI.CD_TYPE
						AND CI.NO_PERSON = PSI.NO_PERSON
						AND YN_CANCEL = 'N'
						AND YN_DELETE = 'N'
						AND YN_BUDGET_EXCEPT = 'N'
					ORDER BY
						CI.DT_TRD DESC,
						CI.TM_TRD DESC
				) MM
			WHERE
				1 = 1
				AND  MM.MM_BASIC <![CDATA[>=]]> #{dt_from, jdbcType = VARCHAR}
				AND MM.MM_BASIC <![CDATA[<=]]> #{dt_to, jdbcType = VARCHAR}
			GROUP BY
				 MM.MM_BASIC
				,MM.TYPE_IN_OUT
			ORDER BY
				MM.MM_BASIC
			   ,MM.TYPE_IN_OUT
	</select>
	<select id="listSettlementConsumeDataWeek" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
				MM.START_WEEK AS DT_TRD
				,SUM( MM.AMT_IN_OUT ) AS AMT_IN_OUT
				,MM.TYPE_IN_OUT AS TYPE_IN_OUT
			FROM
				(
					SELECT
						CI.NO_PERSON
						,CI.SEQ_CONSUME
						,CI.TYPE_IN_OUT
						,CI.MEANS_CONSUME
						,CI.CD_FC
						,CI.NM_CARD
						,CI.DT_TRD
						,PCCI.NM_CLASS
						,PCCI.NM_TYPE
						,CI.CONTENTS
						,CI.AMT_IN_OUT
						,CI.YN_AUTO
						,NVL( PSI.DT_BASIC, '01' )
						,TO_CHAR( SYSDATE, 'DD' )
						,CASE
							WHEN 
							TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'DD' ) >= NVL( PSI.DT_BASIC, '01' ) THEN TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'YYYYMM' )
							ELSE TO_CHAR( ADD_MONTHS( CI.DT_TRD,- 1 ), 'YYYYMM' )
						END MM_BASIC
						,TO_CHAR(TRUNC(TO_DATE(CI.DT_TRD), 'IW'), 'YYYYMMDD') AS START_WEEK
					FROM
						CONSUME_INFO CI,
						PERSON_CONSUME_CLASS_INFO PCCI,
						PERSON_SET_INFO PSI
					WHERE
							CI.NO_PERSON IN 
								<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
									#{each_person}
								</foreach>
						AND CI.NO_PERSON = PCCI.NO_PERSON
						AND CI.CD_CLASS = PCCI.CD_CLASS
						AND CI.CD_TYPE = PCCI.CD_TYPE
						AND CI.NO_PERSON = PSI.NO_PERSON
						AND YN_CANCEL = 'N'
						AND YN_DELETE = 'N'
						AND YN_BUDGET_EXCEPT = 'N'
						
					ORDER BY
						CI.DT_TRD DESC,
						CI.TM_TRD DESC
				) MM
			WHERE
				1 = 1
				AND  MM.DT_TRD <![CDATA[>=]]>  #{dt_from, jdbcType = VARCHAR} 
				AND MM.DT_TRD  <![CDATA[<=]]>  #{dt_to, jdbcType = VARCHAR} 
			GROUP BY
				 MM.START_WEEK
				,MM.TYPE_IN_OUT
			ORDER BY
				MM.START_WEEK
			  ,MM.TYPE_IN_OUT
	</select>
	<select id="listSettlementConsumeDataDay" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
				 MM.DT_TRD AS DT_TRD
				,SUM( MM.AMT_IN_OUT ) AS AMT_IN_OUT
				,MM.TYPE_IN_OUT AS TYPE_IN_OUT
			FROM
				(
					SELECT
						CI.NO_PERSON
						,CI.SEQ_CONSUME
						,CI.TYPE_IN_OUT
						,CI.MEANS_CONSUME
						,CI.CD_FC
						,CI.NM_CARD
						,CI.DT_TRD
						,PCCI.NM_CLASS
						,PCCI.NM_TYPE
						,CI.CONTENTS
						,CI.AMT_IN_OUT
						,CI.YN_AUTO
						,NVL( PSI.DT_BASIC, '01' )
						,TO_CHAR( SYSDATE, 'DD' )
						,CASE
							WHEN 
							TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'DD' ) >= NVL( PSI.DT_BASIC, '01' ) THEN TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'YYYYMM' )
							ELSE TO_CHAR( ADD_MONTHS( CI.DT_TRD,- 1 ), 'YYYYMM' )
						END MM_BASIC
					FROM
						CONSUME_INFO CI,
						PERSON_CONSUME_CLASS_INFO PCCI,
						PERSON_SET_INFO PSI
					WHERE
							CI.NO_PERSON IN 
								<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
									#{each_person}
								</foreach>
						AND CI.NO_PERSON = PCCI.NO_PERSON
						AND CI.CD_CLASS = PCCI.CD_CLASS
						AND CI.CD_TYPE = PCCI.CD_TYPE
						AND CI.NO_PERSON = PSI.NO_PERSON
						AND YN_CANCEL = 'N'
						AND YN_DELETE = 'N'
						AND YN_BUDGET_EXCEPT = 'N'
						
					ORDER BY
						CI.DT_TRD DESC,
						CI.TM_TRD DESC
				) MM
			WHERE
				1 = 1
				AND  MM.DT_TRD <![CDATA[>=]]>  #{dt_from, jdbcType = VARCHAR} 
				AND MM.DT_TRD <![CDATA[<=]]>  #{dt_to, jdbcType = VARCHAR} 
			GROUP BY
				 MM.DT_TRD
				,MM.TYPE_IN_OUT
			ORDER BY
				MM.DT_TRD
			   ,MM.TYPE_IN_OUT
	</select>
	<select id="getRangeListforSettlement" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
				<if test="@com.koscom.util.MybatisUtil@contains('yr', chartType)">
					MM.MM_BASIC AS DT_TRD,
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('mon',chartType)">
					MM.START_WEEK AS DT_TRD,
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('week',chartType)">
					 MM.DT_TRD AS DT_TRD, 
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('category',listType)">
					MM.CD_CLASS,
					MM.NM_CLASS,
					COUNT( MM.NM_CLASS ) AS GRADE,
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('store',listType)">
					MM.CONTENTS,
					COUNT( MM.CONTENTS ) AS GRADE,
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('means',listType)">
					MM.NM_CARD, 
					MM.NO_CARD,
					COUNT( MM.NO_CARD ) AS GRADE,
				</if>
				SUM( MM.AMT_IN_OUT ) AS AMT_IN_OUT,
				MM.TYPE_IN_OUT AS TYPE_IN_OUT
			FROM
				(
					SELECT
						CI.NO_PERSON
						,CI.SEQ_CONSUME
						,CI.TYPE_IN_OUT
						,CI.MEANS_CONSUME
						,CI.CD_FC
						,CI.NO_CARD
						,CI.NM_CARD
						,CI.DT_TRD
						,PCCI.CD_CLASS
						,PCCI.NM_CLASS
						,PCCI.NM_TYPE
						,CI.CONTENTS
						,CI.AMT_IN_OUT
						,CI.YN_AUTO
						,NVL( PSI.DT_BASIC, '01' )
						,TO_CHAR( SYSDATE, 'DD' )
						,CASE
							WHEN /* TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>=]]> NVL( PSI.DT_BASIC, '01' ) AND*/
							TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'DD' ) >= NVL( PSI.DT_BASIC, '01' ) THEN TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'YYYYMM' )
							ELSE TO_CHAR( ADD_MONTHS( CI.DT_TRD,- 1 ), 'YYYYMM' )
						END MM_BASIC
						,TO_CHAR( TRUNC( TO_DATE( CI.DT_TRD ), 'IW' ), 'YYYYMMDD' ) AS START_WEEK
					FROM
						CONSUME_INFO CI,
						PERSON_CONSUME_CLASS_INFO PCCI,
						PERSON_SET_INFO PSI
					WHERE
							CI.NO_PERSON IN 
								<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
									#{each_person}
								</foreach>
						AND CI.NO_PERSON = PCCI.NO_PERSON
						AND CI.CD_CLASS = PCCI.CD_CLASS
						AND CI.CD_TYPE = PCCI.CD_TYPE
						AND CI.NO_PERSON = PSI.NO_PERSON
						AND YN_CANCEL = 'N'
						AND YN_DELETE = 'N'
						AND YN_BUDGET_EXCEPT = 'N'
				) MM
			WHERE
				1 = 1
				<if test="@com.koscom.util.MybatisUtil@contains('yr', chartType)">
					AND  MM.MM_BASIC = #{dt_from, jdbcType = VARCHAR}
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('mon',chartType)">
					AND  MM.START_WEEK = #{dt_from, jdbcType = VARCHAR}
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('week',chartType)">
					 AND  MM.DT_TRD = #{dt_from, jdbcType = VARCHAR}
				</if>
			GROUP BY
				<if test="@com.koscom.util.MybatisUtil@contains('category',listType)">
					MM.NM_CLASS,
					MM.CD_CLASS,
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('store',listType)">
					MM.CONTENTS,
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('means',listType)">
					MM.NM_CARD, 
					MM.NO_CARD,
				</if>
				MM.TYPE_IN_OUT,
				<if test="@com.koscom.util.MybatisUtil@contains('yr', chartType)">
					MM.MM_BASIC
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('mon',chartType)">
					MM.START_WEEK
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('week',chartType)">
					MM.DT_TRD
				</if>
			ORDER BY
				MM.TYPE_IN_OUT,
				<if test="@com.koscom.util.MybatisUtil@contains('sum',orderType)">
					TO_NUMBER(AMT_IN_OUT) DESC
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('count',orderType)">
					GRADE DESC
				</if>
				
	</select>
	<select id="getSettlementDetail" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
			SELECT
				MM.NO_PERSON,
				MM.DT_TRD,
				MM.TM_TRD,
				MM.NM_CARD, 
				MM.NO_CARD,
				MM.CD_CLASS, 
				MM.NM_CLASS, 
				MM.CONTENTS, 
				MM.AMT_IN_OUT,
				MM.TYPE_IN_OUT AS TYPE_IN_OUT,
				MM.NM_FC
			FROM
				(
					SELECT
						CI.NO_PERSON
						,CI.SEQ_CONSUME
						,CI.TYPE_IN_OUT
						,CI.MEANS_CONSUME
						,CI.CD_FC
						,CI.NO_CARD
						,CI.NM_CARD
						,CI.DT_TRD
						,CI.TM_TRD
						,(SELECT NM_FC FROM FC_INFO WHERE CD_FC=CI.CD_FC) AS NM_FC
						,PCCI.CD_CLASS
						,PCCI.NM_CLASS
						,PCCI.NM_TYPE
						,CI.CONTENTS
						,CI.AMT_IN_OUT
						,CI.YN_AUTO
						,NVL( PSI.DT_BASIC, '01' )
						,TO_CHAR( SYSDATE, 'DD' )
						,CASE
							WHEN 
							TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'DD' ) >= NVL( PSI.DT_BASIC, '01' ) THEN TO_CHAR( TO_DATE( CI.DT_TRD, 'YYYYMMDD' ), 'YYYYMM' )
							ELSE TO_CHAR( ADD_MONTHS( CI.DT_TRD,- 1 ), 'YYYYMM' )
						END MM_BASIC
						,TO_CHAR( TRUNC( TO_DATE( CI.DT_TRD ), 'IW' ), 'YYYYMMDD' ) AS START_WEEK
					FROM
						CONSUME_INFO CI,
						PERSON_CONSUME_CLASS_INFO PCCI,
						PERSON_SET_INFO PSI
					WHERE
						CI.NO_PERSON IN
						<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
							#{each_person}
						</foreach>
						AND CI.NO_PERSON = PCCI.NO_PERSON
						AND CI.CD_CLASS = PCCI.CD_CLASS
						AND CI.CD_TYPE = PCCI.CD_TYPE
						AND CI.NO_PERSON = PSI.NO_PERSON
						AND YN_CANCEL = 'N'
						AND YN_DELETE = 'N'
						AND YN_BUDGET_EXCEPT = 'N'
				) MM
			WHERE
				1 = 1
				AND MM.TYPE_IN_OUT = #{type_in_out, jdbcType = VARCHAR}
				<if test="@com.koscom.util.MybatisUtil@contains('yr', chartType)">
					AND  MM.MM_BASIC = #{dt_from, jdbcType = VARCHAR}
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('mon',chartType)">
					AND  MM.START_WEEK = #{dt_from, jdbcType = VARCHAR}
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('week',chartType)">
					 AND  MM.DT_TRD = #{dt_from, jdbcType = VARCHAR}
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('category',listType)">
					AND MM.NM_CLASS = #{contents, jdbcType = VARCHAR}
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('store',listType)">
					AND MM.CONTENTS= #{contents, jdbcType = VARCHAR}
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('means',listType)">
					AND MM.NM_CARD= #{contents, jdbcType = VARCHAR}
					AND MM.NO_CARD= #{no_card, jdbcType = VARCHAR} 
				</if>
			ORDER BY
				<if test="@com.koscom.util.MybatisUtil@contains('date',orderType)">
					MM.DT_TRD DESC,
					MM.TM_TRD DESC
				</if>
				<if test="@com.koscom.util.MybatisUtil@contains('amt',orderType)">
					TO_NUMBER(AMT_IN_OUT) DESC
				</if>
	</select>	   
</mapper>