<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.consume.dao.ConsumeMapper">
	<select id="listConsumeSharePersonInfo" parameterType="java.lang.String" resultType="com.koscom.domain.PersonInfo">
		SELECT
			 OFFER_NO_PERSON AS NO_PERSON
			,OFFER_NM_PERSON AS NM_PERSON
			,0 AS PRIORITY
		FROM
			SHARE_INFO
		WHERE
				REQ_NO_PERSON			= #{no_person, jdbcType=VARCHAR}
			AND SHARE_STATUS			= '02'
			AND YN_CONSUME_ITGT_MNGM	= 'Y'
			AND DT_END_OFFER			> TO_CHAR( SYSDATE, 'YYYYMMDD' )
		UNION(
			SELECT
				 NO_PERSON
				,NM_PERSON
				,1 AS PRIORITY
			FROM
				PERSON_INFO
			WHERE
				NO_PERSON = #{no_person, jdbcType=VARCHAR}
		)
		ORDER BY
		PRIORITY DESC
	</select>
	<select id="chkScrapCard" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			'1'
		FROM
			FC_LINK_INFO
		WHERE
			NO_PERSON			= #{no_person, jdbcType=VARCHAR}
			AND CD_AGENCY		= '05'
			AND CD_LINK_STAT	= '00'
	</select>
	<select id="listConsumeInfoAmt" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			TYPE_IN_OUT, NVL( SUM( AMT_IN_OUT ), 0 ) AS AMT_IN_OUT
		FROM
			CONSUME_INFO CI,
			(
				SELECT
					CASE
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[>]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType=VARCHAR}, 'yyyymm' ),- 1 ), 'yyyymm' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[<=]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType=VARCHAR}, 'yyyymm' ),- 1 ), 'yyyymm' )|| DT_BASIC
					END AS DT_FROM,
					CASE
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[>]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[<=]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN TO_CHAR( SYSDATE, 'YYYYMMDD' )
					END AS DT_TO
				FROM
					(
						SELECT
							DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType=VARCHAR}
					)
			) PSI
		WHERE
			NO_PERSON IN
				<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
					#{each_person}
				</foreach>
			AND TO_NUMBER( CI.DT_TRD ) BETWEEN TO_NUMBER( PSI.DT_FROM ) AND TO_NUMBER( PSI.DT_TO )
			AND CI.YN_CANCEL = 'N'
			AND CI.YN_BUDGET_EXCEPT = 'N'
		GROUP BY
			TYPE_IN_OUT
		ORDER BY
			TYPE_IN_OUT ASC
	</select>
	<select id="listConsumeInfo" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 CI.SEQ_CONSUME
			,CI.TYPE_IN_OUT
			,CI.MEANS_CONSUME
			,CI.CD_FC
			,CI.NM_CARD
			/*,CI.NO_CARD*/
			/*,CI.TYPE_CARD*/
			,CI.DT_TRD
			/*,CI.TM_TRD*/
			/*,CI.NO_BIZ*/
			/*,CI.NM_BIZ*/
			/*,CI.CD_CLASS*/
			,PCCI.NM_CLASS
			/*,CI.CD_TYPE*/
			,PCCI.NM_TYPE
			,CI.CONTENTS
			/*,CI.MEMO*/
			/*,CI.GRADE*/
			,CI.AMT_IN_OUT
			/*,CI.NO_APPROVAL*/
			/*,CI.MON_INSTALLMENT*/
			/*,CI.MON_REMAINING*/
			/*,CI.YN_PAY_INSTALLMENT*/
				FROM CONSUME_INFO CI, PERSON_CONSUME_CLASS_INFO PCCI,
				(
				SELECT
					CASE
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[>]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType=VARCHAR}, 'yyyymm' ),- 1 ), 'yyyymm' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[<=]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType=VARCHAR}, 'yyyymm' ),- 1 ), 'yyyymm' )|| DT_BASIC
					END AS DT_FROM,
					CASE
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[>]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'YYYYMMDD' )<![CDATA[<=]]> #{ym_trd, jdbcType=VARCHAR} || DT_BASIC
							THEN TO_CHAR( SYSDATE, 'YYYYMMDD' )
					END AS DT_TO
				FROM
					(
						SELECT
							DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType=VARCHAR}
					)
			) PSI
				
		WHERE
			    CI.NO_PERSON IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
			AND CI.NO_PERSON				=		PCCI.NO_PERSON
			AND CI.CD_CLASS					=		PCCI.CD_CLASS
			AND CI.CD_TYPE					=		PCCI.CD_TYPE
			AND TO_NUMBER(CI.DT_TRD) BETWEEN TO_NUMBER(PSI.DT_FROM) AND TO_NUMBER(PSI.DT_TO)
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(type_in_out)">
			AND CI.TYPE_IN_OUT				=		#{type_in_out, jdbcType=VARCHAR}
			</if>
			AND YN_CANCEL 					=		'N'
			AND YN_BUDGET_EXCEPT			=		'N'
				ORDER BY CI.DT_TRD DESC, CI.TM_TRD DESC
	</select>
	<select id="getConsumeInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 CI.SEQ_CONSUME
			,CI.TYPE_IN_OUT
			,CI.MEANS_CONSUME
			,CI.NM_CARD
			,CI.NO_CARD
			,CI.DT_TRD
			,CI.CD_CLASS
			,PCCI.NM_CLASS
			,CI.CD_TYPE
			,PCCI.NM_TYPE
			,CI.CONTENTS
			,CI.MEMO
			,CI.AMT_IN_OUT
		FROM
			 CONSUME_INFO CI
			,PERSON_CONSUME_CLASS_INFO PCCI
		WHERE
				CI.NO_PERSON	= #{no_person, jdbcType = VARCHAR}
			AND CI.NO_PERSON	= PCCI.NO_PERSON
			AND CI.CD_CLASS		= PCCI.CD_CLASS
			AND CI.CD_TYPE		= PCCI.CD_TYPE
			AND YN_CANCEL		= 'N'
			AND YN_DELETE		= 'N'
	</select>
	<select id="listPersonIncomeClassInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonConsumeClassVO">
		SELECT DISTINCT
			 CD_CLASS
			,NM_CLASS
			,CD_TYPE
			,NM_TYPE
				FROM PERSON_CONSUME_CLASS_INFO
		WHERE 		NO_PERSON 	= #{no_person	, jdbcType=VARCHAR}
				AND TO_NUMBER(CD_CLASS) <![CDATA[<]]> 10
				AND CD_TYPE IS NOT NULL
				AND YN_USE 		= 'Y'
		ORDER BY CD_CLASS ASC, CD_TYPE ASC
	</select>
	<select id="listPersonConsumeClassInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonConsumeClassVO">
		SELECT DISTINCT
			 CD_CLASS
			,NM_CLASS
			,CD_TYPE
			,NM_TYPE
				FROM PERSON_CONSUME_CLASS_INFO
		WHERE 		NO_PERSON 	= #{no_person	, jdbcType=VARCHAR}
				AND TO_NUMBER(CD_CLASS) <![CDATA[>]]> 10
				AND CD_TYPE IS NOT NULL
				AND YN_USE 		= 'Y'
		ORDER BY CD_CLASS ASC, CD_TYPE ASC
	</select>
	<select id="getPersonSetInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonSetInfoVO">
		SELECT
			 NO_PERSON
			,DT_BASIC
			,YN_INSTALLMENT
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		FROM
			PERSON_SET_INFO
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR} 
	</select>
	<update id="modifyPersonSetInfo" parameterType="com.koscom.consume.model.PersonSetInfoVO">
		MERGE INTO
			PERSON_SET_INFO
				USING DUAL ON
					(
						NO_PERSON = #{no_person, jdbcType = VARCHAR}
					)
			WHEN MATCHED THEN
				UPDATE
					SET
						 DT_BASIC			= #{dt_basic		, jdbcType = VARCHAR}
						,YN_INSTALLMENT		= #{yn_installment	, jdbcType = VARCHAR}
						,ID_LST				= #{id_lst			, jdbcType = VARCHAR}
						,DT_LST				= SYSDATE
			WHEN NOT MATCHED THEN
				INSERT
					(
						 NO_PERSON
						,DT_BASIC
						,YN_INSTALLMENT
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES
					(
						 #{no_person		, jdbcType = VARCHAR}
						,#{dt_basic			, jdbcType = VARCHAR}
						,#{yn_installment	, jdbcType = VARCHAR}
						,#{id_frt			, jdbcType = VARCHAR}
						,SYSDATE
						,#{id_lst			, jdbcType = VARCHAR}
						,SYSDATE
					)
	</update>
	<select id="listPersonTransDetail" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.PersonTransDetailVO">
		SELECT
			STD.AN
			,STD.DT_TRD
			,STD.TM_TRD
			,STD.AMT_WDRL
			,STD.AMT_DEP
			,STD.DOC1
			,STD.DOC2
			,SBAAI.CD_FC
			,FI.NM_FC
    			FROM 	 SCR_TRANSACTION_DETAIL STD
    					,SCR_BANK_API_AN_INFO SBAAI
    					,FC_INFO FI
		WHERE 		STD.NO_PERSON = 					 #{no_person, jdbcType=VARCHAR}
        		AND STD.NO_PERSON = 					 SBAAI.NO_PERSON
        		AND TO_NUMBER(STD.DT_TRD) <![CDATA[>=]]> #{dt_from	, jdbcType=VARCHAR}
        		AND TO_NUMBER(STD.DT_TRD) <![CDATA[<=]]> #{dt_to	, jdbcType=VARCHAR}
        		AND SBAAI.CD_FC = 						 FI.CD_FC
        		AND STD.AN = 							 SBAAI.AN
            		ORDER BY STD.DT_TRD DESC
	</select>
	<insert id="createDefaultConsumeClassInfo" parameterType="java.lang.String">
		INSERT INTO PERSON_CONSUME_CLASS_INFO
		(
			 NO_PERSON
			,CD_CONSUME_CLASS
			,CD_CLASS
			,NM_CLASS
			,CD_TYPE
			,NM_TYPE
			,YN_DEFAULT
			,YN_USE
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		)
		(
		SELECT
			 #{no_person, jdbcType=VARCHAR}
			,CD_CONSUME_CLASS
			,CD_CLASS
			,NM_CLASS
			,CD_TYPE
			,NM_TYPE
			,'Y'
			,YN_USE
			,#{no_person, jdbcType=VARCHAR}
			,SYSDATE
			,#{no_person, jdbcType=VARCHAR}
			,SYSDATE
				FROM CONSUME_CLASS_INFO
		)
	</insert>
	
	<insert id="createGoal" parameterType="com.koscom.consume.model.ConsumeGoalInfoVO">
		MERGE INTO
			CONSUME_GOAL_INFO
				USING DUAL ON
			(
					NO_PERSON	= {#no_person	, jdbcType = VARCHAR}
				AND REQ_YYYYMM	= {#req_yyyymm	, jdbcType = VARCHAR}
			)
			WHEN MATCHED THEN UPDATE
			SET
				 AMT_BUDGET		= {#amt_budget	, jdbcType = VARCHAR}
				,AMT_EXPENSE	= {#amt_expense	, jdbcType = VARCHAR}
				,ID_LST			= #{id_lst		, jdbcType = VARCHAR}
				,DT_LST			= SYSDATE
				WHEN NOT MATCHED THEN INSERT
					CONSUME_GOAL_INFO(
						 NO_PERSON
						,REQ_YYYYMM
						,AMT_BUDGET
						,AMT_EXPENSE
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES(
					 {#no_person	, jdbcType = VARCHAR}
					,{#req_yyyymm	, jdbcType = VARCHAR}
					,{#amt_budget	, jdbcType = VARCHAR}
					,{#amt_expense	, jdbcType = VARCHAR}
					,{#id_frt		, jdbcType = VARCHAR}
					,SYSDATE
					,{#id_lst		, jdbcType = VARCHAR}
					,SYSDATE
				);
	</insert>
	<select id="getGoal" parameterType="com.koscom.consume.model.ConsumeGoalInfoVO" resultType="com.koscom.consume.model.ConsumeGoalInfoVO">
		SELECT
			 NO_PERSON
			,REQ_YYYYMM
			,AMT_BUDGET
			,AMT_EXPENSE
		FROM
			CONSUME_GOAL_INFO
		WHERE
				NO_PERSON	= 	{#no_person		, jdbcType = VARCHAR}
			AND REQ_YYYYMM	=	{#req_yyyymm	, jdbcType = VARCHAR}
	</select>
	
	<insert id="createDetailGoal" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		INSERT
			INTO
				CONSUME_GOAL_DETAIL_INFO(
					 NO_PERSON
					,REQ_YYYYMM
					,CD_SET
					,CD_CLASS
					,CD_TYPE
					,CD_FC
					,NM_CARD
					,NO_CARD
					,AMT_BUDGET
					,AMT_EXPENSE
					,ID_FRT
					,DT_FRT
					,ID_LST
					,DT_LST
				)
			VALUES(
				 {#no_person	, jdbcType = VARCHAR}
				,{#req_yyyymm	, jdbcType = VARCHAR}
				,{#cd_set		, jdbcType = VARCHAR}
				,{#cd_class		, jdbcType = VARCHAR}
				,{#cd_type		, jdbcType = VARCHAR}
				,{#cd_fc		, jdbcType = VARCHAR}
				,{#nm_card		, jdbcType = VARCHAR}
				,{#no_card		, jdbcType = VARCHAR}
				,{#amt_budget	, jdbcType = VARCHAR}
				,{#amt_expense	, jdbcType = VARCHAR}
				,{#id_frt		, jdbcType = VARCHAR}
				,SYSDATE
				,{#id_lst		, jdbcType = VARCHAR}
				,SYSDATE
			)
	</insert>
	<select id="listDetailGoal" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 NO_PERSON
			,REQ_YYYYMM
			,CD_SET
			,CD_CLASS
			,CD_TYPE
			,CD_FC
			,NM_CARD
			,NO_CARD
			,AMT_BUDGET
			,AMT_EXPENSE
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		FROM
			CONSUME_GOAL_DETAIL_INFO
		WHERE
				NO_PERSON	= {#no_person	,jdbcType = VARCHAR}
			AND REQ_YYYYMM	= {#req_yyyymm	,jdbcType = VARCHAR}
			AND CD_SET		= {#cd_set		,jdbcType = VARCHAR}
	</select>
    <select id="getCalendarConsumeData" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 TYPE_IN_OUT
			,DT_TRD
			,SUM( TO_NUMBER( AMT_IN_OUT )) AMT_IN_OUT
		FROM
			CONSUME_INFO
		WHERE
			NO_PERSON = #{no_person , jdbcType = VARCHAR}
			AND(
				YN_DELETE IS NULL
				OR YN_DELETE = ''
			)
			AND SUBSTR( DT_TRD, 0, 6 )= #{ym_trd , jdbcType = VARCHAR}
		GROUP BY
			 DT_TRD
			,TYPE_IN_OUT
		ORDER BY
			DT_TRD DESC 
    </select>
    <select id="listCalendarConsumeData" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 TYPE_IN_OUT
			,DT_TRD
			,AMT_IN_OUT
			,CONTENTS
		FROM
			CONSUME_INFO
		WHERE
			NO_PERSON = #{no_person , jdbcType = VARCHAR}
			AND(
				YN_DELETE IS NULL
				OR YN_DELETE = ''
			)
			AND DT_TRD = #{ymd_trd , jdbcType = VARCHAR}
		ORDER BY
			DT_TRD DESC 
    </select>
    
    <select id="listPayment" parameterType="com.koscom.consume.model.PaymentForm" resultType="com.koscom.consume.model.PaymentVO">
		SELECT
			 SCCI.NO_PERSON
			,PI.NM_PERSON
			,SCCI.CD_FC
			,FI.NM_FC
			,SCCI.CHARGE_YYYYMM
			,SCCI.MONTHLY_CHARGE
			,SCCI.DT_FRT
		FROM
			 SCR_CARD_CHARGE_INFO SCCI
			,PERSON_INFO PI
			,FC_INFO FI
		WHERE
				SCCI.NO_PERSON		IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
			AND SCCI.NO_PERSON	= PI.NO_PERSON
			AND SCCI.CD_FC		= FI.CD_FC 
			AND CHARGE_YYYYMM	= #{charge_yyyymm	, jdbcType=VARCHAR}
    </select>
</mapper>