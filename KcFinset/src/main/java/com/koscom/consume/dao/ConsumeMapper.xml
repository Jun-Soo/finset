<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.consume.dao.ConsumeMapper">
	<select id="listConsumeSharePersonInfo" parameterType="java.lang.String" resultType="com.koscom.domain.PersonInfo">
		SELECT
			 OFFER_NO_PERSON AS NO_PERSON
			,OFFER_NM_PERSON AS NM_PERSON
			,0 AS PRIORITY
		FROM
			SHARE_INFO
		WHERE
				REQ_NO_PERSON			= #{no_person, jdbcType=VARCHAR}
			AND SHARE_STATUS			= '02'
			AND YN_CONSUME_INFO			= 'Y'
			AND DT_END_OFFER			IS NULL
		UNION(
			SELECT
				 NO_PERSON
				,NM_PERSON
				,1 AS PRIORITY
			FROM
				PERSON_INFO
			WHERE
				NO_PERSON = #{no_person, jdbcType=VARCHAR}
		)
		ORDER BY
		PRIORITY DESC
	</select>
	<select id="chkScrapCard" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			'1'
		FROM
			FC_LINK_INFO
		WHERE
			NO_PERSON			= #{no_person, jdbcType=VARCHAR}
			AND CD_AGENCY		= '05'
			AND CD_LINK_STAT	= '00'
	</select>
	<select id="getConsumeGoal" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 CD_SET
			,TO_CHAR( NVL( SUM( TO_NUMBER( AMT_BUDGET ) ), 0 )) AS AMT_BUDGET
		FROM
			CONSUME_GOAL_DETAIL_INFO
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND REQ_YYYYMM	= #{req_yyyymm	, jdbcType = VARCHAR}
		GROUP BY CD_SET
		ORDER BY CD_SET ASC
	</select>
	<select id="getConsumeInfoAmt" parameterType="com.koscom.consume.model.ConsumeForm" resultType="java.lang.String">
		SELECT
			TO_CHAR(NVL( SUM( AMT_IN_OUT ), 0 )) AS AMT_IN_OUT
		FROM
			CONSUME_INFO CI,
			(
				SELECT
					TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ),- 1 ), 'YYYYMM' )
						|| DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC) AS DT_FROM
					,#{ym_trd, jdbcType = VARCHAR} || DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC ) AS DT_TO
				FROM
					PERSON_SET_INFO PSI
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			) PSI
		WHERE
				NO_PERSON			= #{no_person, jdbcType = VARCHAR}
			AND TO_NUMBER( CI.DT_TRD ) BETWEEN TO_NUMBER( PSI.DT_FROM ) AND TO_NUMBER( PSI.DT_TO )
			AND CI.TYPE_IN_OUT		= '02'
			AND CI.YN_CANCEL		= 'N'
			AND CI.YN_BUDGET_EXCEPT = 'N'
	</select>
	<select id="listConsumeInfoAmt" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			TYPE_IN_OUT, NVL( SUM( AMT_IN_OUT ), 0 ) AS AMT_IN_OUT
		FROM
			CONSUME_INFO CI,
			(
				SELECT
					TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ),- 1 ), 'YYYYMM' )
						|| DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC) AS DT_FROM
					,#{ym_trd, jdbcType = VARCHAR} || DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC ) AS DT_TO
				FROM
					PERSON_SET_INFO PSI
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			) PSI
		WHERE
			NO_PERSON IN
				<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
					#{each_person}
				</foreach>
			AND TO_NUMBER( CI.DT_TRD ) BETWEEN TO_NUMBER( PSI.DT_FROM ) AND TO_NUMBER( PSI.DT_TO )
			AND CI.YN_CANCEL = 'N'
			AND CI.YN_BUDGET_EXCEPT = 'N'
		GROUP BY
			TYPE_IN_OUT
		ORDER BY
			TYPE_IN_OUT ASC
	</select>
	<select id="listConsumeInfo" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 CI.NO_PERSON
			,CI.SEQ_CONSUME
			,CI.TYPE_IN_OUT
			,CI.MEANS_CONSUME
			,CI.CD_FC
			,CI.NM_CARD
			,CI.DT_TRD
			,PCCI.NM_CLASS
			,PCCI.NM_TYPE
			,CI.CONTENTS
			,CI.AMT_IN_OUT
			,CI.YN_AUTO
				FROM CONSUME_INFO CI, PERSON_CONSUME_CLASS_INFO PCCI,
				(
					SELECT
						TO_CHAR( ADD_MONTHS( TO_DATE( #{ym_trd, jdbcType = VARCHAR}, 'YYYYMM' ),- 1 ), 'YYYYMM' )
							|| DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC) AS DT_FROM
						,#{ym_trd, jdbcType = VARCHAR} || DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC ) AS DT_TO
					FROM
						PERSON_SET_INFO PSI
					WHERE
						NO_PERSON = #{no_person, jdbcType = VARCHAR}
				) PSI
		WHERE
			    CI.NO_PERSON IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
			AND CI.NO_PERSON				=		PCCI.NO_PERSON
			AND CI.CD_CLASS					=		PCCI.CD_CLASS
			AND CI.CD_TYPE					=		PCCI.CD_TYPE
			AND TO_NUMBER(CI.DT_TRD) BETWEEN TO_NUMBER(PSI.DT_FROM) AND TO_NUMBER(PSI.DT_TO)
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(type_in_out)">
				AND CI.TYPE_IN_OUT			=		#{type_in_out, jdbcType=VARCHAR}
			</if>
			AND YN_CANCEL 					=		'N'
			AND YN_DELETE					=		'N'
			AND YN_BUDGET_EXCEPT			=		'N'
		ORDER BY
			CI.DT_TRD DESC, CI.TM_TRD DESC
	</select>

	<select id="listPersonIncomeClassInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonConsumeClassVO">
		SELECT
			 NO_PERSON
			,CD_CLASS
			,NM_CLASS
			,YN_DEFAULT
			,YN_USE
			,SORT_CLASS
		FROM
			PERSON_CONSUME_CLASS_INFO
		WHERE
				NO_PERSON	= #{no_person, jdbcType = VARCHAR}
			AND TYPE_IN_OUT = '01'
			AND YN_USE		= 'Y'
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC
	</select>
	<select id="listPersonConsumeClassInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonConsumeClassVO">
		SELECT DISTINCT
			 CD_CLASS
			,NM_CLASS
			,CD_TYPE
			,NM_TYPE
			,SORT_CLASS
			,SORT_TYPE
				FROM PERSON_CONSUME_CLASS_INFO
		WHERE 		NO_PERSON 	= #{no_person	, jdbcType=VARCHAR}
				AND TO_NUMBER(CD_CLASS) <![CDATA[>]]> 10
				AND CD_TYPE IS NOT NULL
				AND YN_USE 		= 'Y'
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC, TO_NUMBER(SORT_TYPE) ASC
	</select>
	<select id="getPersonSetInfo" parameterType="java.lang.String" resultType="com.koscom.consume.model.PersonSetInfoVO">
		SELECT
			 NO_PERSON
			,DT_BASIC
			,YN_INSTALLMENT
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		FROM
			PERSON_SET_INFO
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR} 
	</select>
	<update id="modifyPersonSetInfo" parameterType="com.koscom.consume.model.PersonSetInfoVO">
		MERGE INTO
			PERSON_SET_INFO
				USING DUAL ON
					(
						NO_PERSON = #{no_person, jdbcType = VARCHAR}
					)
			WHEN MATCHED THEN
				UPDATE
					SET
						 DT_BASIC			= #{dt_basic		, jdbcType = VARCHAR}
						,YN_INSTALLMENT		= #{yn_installment	, jdbcType = VARCHAR}
						,ID_LST				= #{id_lst			, jdbcType = VARCHAR}
						,DT_LST				= SYSDATE
			WHEN NOT MATCHED THEN
				INSERT
					(
						 NO_PERSON
						,DT_BASIC
						,YN_INSTALLMENT
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES
					(
						 #{no_person		, jdbcType = VARCHAR}
						,#{dt_basic			, jdbcType = VARCHAR}
						,#{yn_installment	, jdbcType = VARCHAR}
						,#{id_frt			, jdbcType = VARCHAR}
						,SYSDATE
						,#{id_lst			, jdbcType = VARCHAR}
						,SYSDATE
					)
	</update>
	<select id="listPersonTransDetail" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.PersonTransDetailVO">
		SELECT
			 STD.AN
			,SBAAI.NM_AN
			,STD.DT_TRD
			,STD.TM_TRD
			,STD.AMT_WDRL
			,STD.AMT_DEP
			,STD.DOC1
			,STD.DOC2
			,SBAAI.CD_FC
			,FI.NM_FC
    			FROM 	 SCR_TRANSACTION_DETAIL STD
    					,SCR_BANK_API_AN_INFO SBAAI
    					,FC_INFO FI
    					,PERSON_SET_INFO PSI
		WHERE 		STD.NO_PERSON = 					 #{no_person, jdbcType=VARCHAR}
        		AND STD.NO_PERSON = 					 SBAAI.NO_PERSON
        		AND STD.NO_PERSON = 					 PSI.NO_PERSON
        		AND SBAAI.CD_FC = 						 FI.CD_FC
        		AND TO_NUMBER(STD.DT_TRD) BETWEEN		 TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC )
        											 AND TO_CHAR( SYSDATE, 'YYYYMM' )|| DECODE( LENGTH( PSI.DT_BASIC ), 1, '0' || PSI.DT_BASIC, PSI.DT_BASIC )
        		<choose>
        			<when test="@com.koscom.util.MybatisUtil@contains('01',type_in_out)">
        				AND STD.AMT_DEP					 != '0'
        			</when>
        			<otherwise>
        				AND STD.AMT_WDRL				 != '0'
        			</otherwise>
        		</choose>
        		AND STD.AN = 							 SBAAI.AN
       ORDER BY
			STD.DT_TRD DESC, STD.TM_TRD DESC
	</select>
	<insert id="createDefaultConsumeClassInfo" parameterType="java.lang.String">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				SELECT
					 #{no_person, jdbcType=VARCHAR}
					,A.CD_CONSUME_CLASS
					,A.TYPE_IN_OUT
					,A.CD_CLASS
					,A.NM_CLASS
					,A.CD_TYPE
					,A.NM_TYPE
					,'Y' AS YN_DEFAULT
					,'Y' AS YN_USE
					,CASE
						WHEN A.TYPE_IN_OUT = '01' THEN TO_CHAR( TO_NUMBER( A.CD_CLASS ))
						WHEN A.TYPE_IN_OUT = '02' AND CD_CLASS = '99'  THEN A.CD_CLASS
						WHEN A.TYPE_IN_OUT = '02' AND CD_CLASS != '99' THEN TO_CHAR( TO_NUMBER( A.CD_CLASS )- 10 )
					 END AS SORT_CLASS
					,CASE
						WHEN A.CD_TYPE = '999' THEN '99'
					 	ELSE TO_CHAR( ROW_NUMBER() OVER( PARTITION BY A.CD_CLASS ORDER BY A.CD_TYPE ASC ))
					 END AS SORT_TYPE
					,#{no_person, jdbcType=VARCHAR} AS ID_FRT
					,SYSDATE AS DT_FRT
					,#{no_person, jdbcType=VARCHAR} AS ID_LST
					,SYSDATE AS DT_LST
				FROM
					(
						SELECT
							 A.CD_CONSUME_CLASS
							,A.TYPE_IN_OUT
							,A.CD_CLASS
							,A.NM_CLASS
							,A.CD_TYPE
							,A.NM_TYPE
						FROM
							CONSUME_CLASS_INFO A
						ORDER BY
							 A.CD_CLASS ASC
							,A.CD_TYPE ASC
					) A
			)
	</insert>
	
	<insert id="createGoal" parameterType="com.koscom.consume.model.ConsumeGoalInfoVO">
		MERGE INTO
			CONSUME_GOAL_INFO
				USING DUAL ON
			(
					NO_PERSON	= {#no_person	, jdbcType = VARCHAR}
				AND REQ_YYYYMM	= {#req_yyyymm	, jdbcType = VARCHAR}
			)
			WHEN MATCHED THEN UPDATE
			SET
				 AMT_BUDGET		= {#amt_budget	, jdbcType = VARCHAR}
				,AMT_EXPENSE	= {#amt_expense	, jdbcType = VARCHAR}
				,ID_LST			= #{id_lst		, jdbcType = VARCHAR}
				,DT_LST			= SYSDATE
				WHEN NOT MATCHED THEN INSERT
					CONSUME_GOAL_INFO(
						 NO_PERSON
						,REQ_YYYYMM
						,AMT_BUDGET
						,AMT_EXPENSE
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES(
					 {#no_person	, jdbcType = VARCHAR}
					,{#req_yyyymm	, jdbcType = VARCHAR}
					,{#amt_budget	, jdbcType = VARCHAR}
					,{#amt_expense	, jdbcType = VARCHAR}
					,{#id_frt		, jdbcType = VARCHAR}
					,SYSDATE
					,{#id_lst		, jdbcType = VARCHAR}
					,SYSDATE
				);
	</insert>
	<select id="getGoal" parameterType="com.koscom.consume.model.ConsumeGoalInfoVO" resultType="com.koscom.consume.model.ConsumeGoalInfoVO">
		SELECT
			 NO_PERSON
			,REQ_YYYYMM
			,AMT_BUDGET
			,AMT_EXPENSE
		FROM
			CONSUME_GOAL_INFO
		WHERE
				NO_PERSON	= 	{#no_person		, jdbcType = VARCHAR}
			AND REQ_YYYYMM	=	{#req_yyyymm	, jdbcType = VARCHAR}
	</select>
    <select id="getCalendarConsumeData" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 TYPE_IN_OUT
			,DT_TRD
			,SUM( TO_NUMBER( AMT_IN_OUT )) AMT_IN_OUT
		FROM
			CONSUME_INFO
		WHERE
				NO_PERSON = #{no_person , jdbcType = VARCHAR}
			AND YN_DELETE = 'N'
			AND SUBSTR( DT_TRD, 0, 6 )= #{ym_trd , jdbcType = VARCHAR}
		GROUP BY
			 DT_TRD
			,TYPE_IN_OUT
		ORDER BY
			DT_TRD DESC 
    </select>
    <select id="listCalendarConsumeData" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 TYPE_IN_OUT
			,DT_TRD
			,AMT_IN_OUT
			,CONTENTS
		FROM
			CONSUME_INFO
		WHERE
				NO_PERSON = #{no_person , jdbcType = VARCHAR}
			AND YN_DELETE = 'N'
			AND DT_TRD	  = #{ymd_trd , jdbcType = VARCHAR}
		ORDER BY
			DT_TRD DESC 
    </select>
    <select id="getPaymentSummary" parameterType="com.koscom.consume.model.PaymentForm" resultType="com.koscom.consume.model.PaymentVO">
		SELECT
			 COUNT(CD_FC) AS COUNT_FC
			,SUM(MONTHLY_CHARGE) AS SUM_CHARGE_YYYYMM
		FROM
			 SCR_CARD_CHARGE_INFO
		WHERE
				NO_PERSON IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
			AND CHARGE_YYYYMM = #{charge_yyyymm, jdbcType = VARCHAR} 
    </select>
    <select id="listPayment" parameterType="com.koscom.consume.model.PaymentForm" resultType="com.koscom.consume.model.PaymentVO">
		SELECT
			 SCCI.NO_PERSON
			,PI.NM_PERSON
			,SCCI.CD_FC
			,FI.NM_FC
			,SCCI.CHARGE_YYYYMM
			,SCCI.MONTHLY_CHARGE
			,SCCI.DT_FRT
		FROM
			 SCR_CARD_CHARGE_INFO SCCI
			,PERSON_INFO PI
			,FC_INFO FI
		WHERE
				SCCI.NO_PERSON		IN
					<foreach item="each_person" collection="no_person_list" open="(" separator="," close=")">
						#{each_person}
					</foreach>
			AND SCCI.NO_PERSON	= PI.NO_PERSON
			AND SCCI.CD_FC		= FI.CD_FC 
			AND CHARGE_YYYYMM	= #{charge_yyyymm	, jdbcType=VARCHAR}
    </select>
    <update id="modifyYn_installment" parameterType="com.koscom.consume.model.PersonSetInfoForm">
		UPDATE
			PERSON_SET_INFO
		SET
			YN_INSTALLMENT = #{yn_installment, jdbcType = VARCHAR}
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR}
    </update>
    <update id="modifyDt_basic" parameterType="com.koscom.consume.model.PersonSetInfoForm">
		UPDATE
			PERSON_SET_INFO
		SET
			DT_BASIC = #{dt_basic, jdbcType = VARCHAR}
		WHERE
			NO_PERSON = #{no_person, jdbcType = VARCHAR}
    </update>

    <select id="listDetailGoalClass" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT DISTINCT
			 PCCI.CD_CLASS
			,PCCI.NM_CLASS
			,PCCI.SORT_CLASS
			,NVL( CGDI.AMT_BUDGET, 0 ) AS AMT_BUDGET
		FROM
			PERSON_CONSUME_CLASS_INFO PCCI
		LEFT JOIN CONSUME_GOAL_DETAIL_INFO CGDI ON
				PCCI.CD_CLASS = CGDI.CD_CLASS
			AND CGDI.NO_PERSON = #{no_person, jdbcType=VARCHAR}
		WHERE
				PCCI.NO_PERSON						=		#{no_person, jdbcType=VARCHAR}
			AND TO_NUMBER( PCCI.CD_CLASS ) <![CDATA[>]]>	10
			AND PCCI.YN_USE							=		'Y'
		ORDER BY
			TO_NUMBER(PCCI.SORT_CLASS) ASC
    </select>
    <select id="listDetailGoalMeans" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 A.CODE_VALUE AS CD_TYPE
			,B.CD_FC
			,B.NO_CARD
			,B.NM_CARD
			,NVL(C.AMT_BUDGET, 0) AS AMT_BUDGET
		FROM
			COMM_CD A
		LEFT JOIN(
				SELECT
					 NO_PERSON
					,CD_FC
					,NO_CARD
					,NM_CARD
					,'01' AS CODE_VALUE
				FROM
					SCR_CARD_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			UNION(
					SELECT
						 #{no_person, jdbcType = VARCHAR}
						,CD_FC
						,NULL
						,NULL
						,'03' AS CODE_VALUE
					FROM
						FC_INFO
					WHERE
						NM_FC LIKE '%국세청%'
				)
			) B ON
			(
				A.CODE_VALUE = B.CODE_VALUE
			)
		LEFT JOIN(
				SELECT
					 NO_PERSON
					,REQ_YYYYMM
					,CD_SET
					,CD_TYPE
					,NM_CARD
					,NO_CARD
					,AMT_BUDGET
				FROM
					CONSUME_GOAL_DETAIL_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
					AND REQ_YYYYMM = TO_CHAR( SYSDATE, 'YYYYMM' )
			) C ON
			(
				A.CODE_VALUE = C.CD_TYPE
				AND NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )= CASE
					WHEN NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )= 'chk' THEN 'chk'
					WHEN NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )!= 'chk' THEN NVL( SUBSTRB( C.NO_CARD,- 3 ), 'chk' )
				END
				AND NVL( B.NM_CARD, 'chk' )= CASE
					WHEN NVL( B.NM_CARD, 'chk' )= 'chk' THEN 'chk'
					WHEN NVL( B.NM_CARD, 'chk' )!= 'chk' THEN NVL( C.NM_CARD, 'chk' )
				END
			)
		WHERE
			A.CODE_GROUP = 'cd_consume'
			AND YN_SYSTEM_CODE IS NULL
		ORDER BY
			CD_TYPE ASC, CD_FC ASC, NO_CARD ASC
    </select>
    <select id="listPrevMonthClass" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT DISTINCT 
			 PCCI.CD_CLASS
			,NVL( CGDI.AMT_EXPENSE, 0 ) AS AMT_EXPENSE
			,PCCI.SORT_CLASS
		FROM
			PERSON_CONSUME_CLASS_INFO PCCI
		LEFT JOIN(
				SELECT
					 NVL(SUM( AMT_IN_OUT ), 0) AS AMT_EXPENSE
					,CI.CD_CLASS
				FROM
					 CONSUME_INFO CI
					,(
						SELECT
							 NO_PERSON
							,DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType=VARCHAR}
					) PSI
				WHERE
						CI.NO_PERSON	= PSI.NO_PERSON
					AND CI.NO_PERSON	= #{no_person, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT	= '02'
					AND CI.DT_TRD BETWEEN
							TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| PSI.DT_BASIC
						AND TO_CHAR( SYSDATE, 'YYYYMM' )|| PSI.DT_BASIC
							/*TO_CHAR( ADD_MONTHS( SYSDATE,- 4 ), 'YYYYMM' )|| PSI.DT_BASIC*/
						/*AND TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| PSI.DT_BASIC*/
				GROUP BY
					CI.CD_CLASS
			) CGDI ON
			PCCI.CD_CLASS = CGDI.CD_CLASS
		WHERE
			PCCI.NO_PERSON = #{no_person, jdbcType = VARCHAR}
			AND PCCI.CD_CLASS <![CDATA[>]]> 10
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC
    </select>
    <select id="listPrevMonthMeans" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 A.CODE_VALUE AS CD_TYPE
			,B.CD_FC
			,B.NO_CARD
			,B.NM_CARD
			,NVL( C.AMT_EXPENSE, 0 ) AS AMT_EXPENSE
		FROM
			COMM_CD A
		LEFT JOIN(
				SELECT
					 NO_PERSON
					,CD_FC
					,NO_CARD
					,NM_CARD
					,'01' AS CODE_VALUE
				FROM
					SCR_CARD_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			UNION(
					SELECT
						 #{no_person, jdbcType = VARCHAR} AS NO_PERSON
						,CD_FC
						,NULL AS NO_CARD
						,NULL AS NO_CARD
						,'03' AS CODE_VALUE
					FROM
						FC_INFO
					WHERE
						NM_FC LIKE '%국세청%'
				)
			) B ON
			(
				A.CODE_VALUE = B.CODE_VALUE
			)
		LEFT JOIN(
				SELECT
					 CI.MEANS_CONSUME AS CD_TYPE
					,CI.CD_FC
					,CI.NM_CARD
					,CI.NO_CARD
					,SUM( CI.AMT_IN_OUT ) AS AMT_EXPENSE
				FROM
					CONSUME_INFO CI,
					(
						SELECT
							DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType=VARCHAR}
					) PSI
				WHERE
					CI.NO_PERSON = #{no_person, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT = '02'
					AND CI.DT_TRD BETWEEN
							TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| PSI.DT_BASIC
						AND TO_CHAR( SYSDATE, 'YYYYMM' )|| PSI.DT_BASIC
							/*TO_CHAR( ADD_MONTHS( SYSDATE,- 4 ), 'YYYYMM' )|| PSI.DT_BASIC*/
						/*AND TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| PSI.DT_BASIC*/
					AND CI.YN_CANCEL = 'N'
					AND CI.YN_DELETE = 'N'
					AND CI.YN_BUDGET_EXCEPT = 'N'
				GROUP BY
					 MEANS_CONSUME
					,CD_FC
					,NO_CARD
					,NM_CARD
			) C ON
			(
				A.CODE_VALUE = C.CD_TYPE
				AND NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )= CASE
					WHEN NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )= 'chk' THEN 'chk'
					WHEN NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )!= 'chk' THEN NVL( SUBSTRB( C.NO_CARD,- 3 ), 'chk' )
				END
				AND NVL( B.NM_CARD, 'chk' )= CASE
					WHEN NVL( B.NM_CARD, 'chk' )= 'chk' THEN 'chk'
					WHEN NVL( B.NM_CARD, 'chk' )!= 'chk' THEN NVL( C.NM_CARD, 'chk' )
				END
			)
		WHERE
			A.CODE_GROUP = 'cd_consume'
			AND YN_SYSTEM_CODE IS NULL
		ORDER BY
			CD_TYPE ASC, CD_FC ASC, NO_CARD ASC
    </select>
    <select id="listAverageClass" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 DISTINCT PCCI.CD_CLASS
			,NVL( CGDI.AMT_EXPENSE, 0 ) AS AMT_EXPENSE
			,PCCI.SORT_CLASS
		FROM
			PERSON_CONSUME_CLASS_INFO PCCI
		LEFT JOIN(
				SELECT
					 CI.CD_CLASS
					,ROUND( SUM( CI.AMT_IN_OUT )/ 3, 0 ) AS AMT_EXPENSE
				FROM
					CONSUME_INFO CI,
					(
						SELECT
							CASE
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| DT_BASIC
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 5 ), 'YYYYMM' )|| DT_BASIC*/
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 6 ), 'YYYYMM' )|| DT_BASIC*/
							END AS DT_FROM,
							CASE
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| DT_BASIC*/
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 4 ), 'YYYYMM' )|| DT_BASIC*/
							END AS DT_TO
						FROM
							(
								SELECT
									DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType=VARCHAR}
							)
					) PSI
				WHERE
					CI.NO_PERSON = #{no_person, jdbcType=VARCHAR}
					AND CI.DT_TRD BETWEEN PSI.DT_FROM AND PSI.DT_TO
				GROUP BY
					 CI.NO_PERSON
					,CI.CD_CLASS
			) CGDI ON
			PCCI.CD_CLASS = CGDI.CD_CLASS
		WHERE
			PCCI.CD_CLASS <![CDATA[>]]> 10
		ORDER BY
			TO_NUMBER(SORT_CLASS) ASC
    </select>
    <select id="listAverageMeans" parameterType="java.lang.String" resultType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		SELECT
			 A.CODE_VALUE AS CD_TYPE
			,B.CD_FC
			,B.NO_CARD
			,B.NM_CARD
			,ROUND(NVL( C.AMT_EXPENSE/ 3, 0 ), 0) AS AMT_EXPENSE
		FROM
			COMM_CD A
		LEFT JOIN(
				SELECT
					 NO_PERSON
					,CD_FC
					,NO_CARD
					,NM_CARD
					,'01' AS CODE_VALUE
				FROM
					SCR_CARD_INFO
				WHERE
					NO_PERSON = #{no_person, jdbcType = VARCHAR}
			UNION(
					SELECT
						 #{no_person, jdbcType = VARCHAR} AS NO_PERSON
						,CD_FC
						,NULL AS NO_CARD
						,NULL AS NO_CARD
						,'03' AS CODE_VALUE
					FROM
						FC_INFO
					WHERE
						NM_FC LIKE '%국세청%'
				)
			) B ON
			(
				A.CODE_VALUE = B.CODE_VALUE
			)
		LEFT JOIN(
				SELECT
					 CI.MEANS_CONSUME AS CD_TYPE
					,CI.CD_FC
					,CI.NM_CARD
					,CI.NO_CARD
					,SUM( CI.AMT_IN_OUT ) AS AMT_EXPENSE
				FROM
					CONSUME_INFO CI,
					(
						SELECT
							CASE
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| DT_BASIC
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 5 ), 'YYYYMM' )|| DT_BASIC*/
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 6 ), 'YYYYMM' )|| DT_BASIC*/
							END AS DT_FROM,
							CASE
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
								WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 3 ), 'YYYYMM' )|| DT_BASIC*/
								/*WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 4 ), 'YYYYMM' )|| DT_BASIC*/
							END AS DT_TO
						FROM
							(
								SELECT
									DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
								FROM
									PERSON_SET_INFO
								WHERE
									NO_PERSON = #{no_person, jdbcType = VARCHAR}
							)
					) PSI
				WHERE
					CI.NO_PERSON = #{no_person, jdbcType = VARCHAR}
					AND CI.TYPE_IN_OUT = '02'
					AND CI.DT_TRD BETWEEN PSI.DT_FROM AND PSI.DT_TO
					AND CI.YN_CANCEL = 'N'
					AND CI.YN_DELETE = 'N'
					AND CI.YN_BUDGET_EXCEPT = 'N'
				GROUP BY
					 MEANS_CONSUME
					,CD_FC
					,NO_CARD
					,NM_CARD
			) C ON
			(
				A.CODE_VALUE = C.CD_TYPE
				AND NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )= CASE
					WHEN NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )= 'chk' THEN 'chk'
					WHEN NVL( SUBSTRB( B.NO_CARD,- 3 ), 'chk' )!= 'chk' THEN NVL( SUBSTRB( C.NO_CARD,- 3 ), 'chk' )
				END
				AND NVL( B.NM_CARD, 'chk' )= CASE
					WHEN NVL( B.NM_CARD, 'chk' )= 'chk' THEN 'chk'
					WHEN NVL( B.NM_CARD, 'chk' )!= 'chk' THEN NVL( C.NM_CARD, 'chk' )
				END
			)
		WHERE
			A.CODE_GROUP = 'cd_consume'
			AND YN_SYSTEM_CODE IS NULL
		ORDER BY
			CD_TYPE ASC, CD_FC ASC, NO_CARD ASC
    </select>
    <insert id="createDetailGoalClass" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		MERGE INTO
			CONSUME_GOAL_DETAIL_INFO
				USING DUAL ON
			(
					NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
				AND REQ_YYYYMM	= TO_CHAR(SYSDATE, 'YYYYMM')
				AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			)
			WHEN MATCHED THEN UPDATE
			SET
				 AMT_BUDGET		= #{amt_budget	, jdbcType = VARCHAR}
				,AMT_EXPENSE	= #{amt_expense	, jdbcType = VARCHAR}
				,ID_LST			= #{no_person	, jdbcType = VARCHAR}
				,DT_LST			= SYSDATE
				WHEN NOT MATCHED THEN INSERT
					(
						 NO_PERSON
						,REQ_YYYYMM
						,CD_SET
						,CD_CLASS
						,AMT_BUDGET
						,AMT_EXPENSE
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES(
					 #{no_person	, jdbcType = VARCHAR}
					,TO_CHAR(SYSDATE, 'YYYYMM')
					,'01'
					,#{cd_class		, jdbcType = VARCHAR}
					,#{amt_budget	, jdbcType = VARCHAR}
					,#{amt_expense	, jdbcType = VARCHAR}
					,#{no_person	, jdbcType = VARCHAR}
					,SYSDATE
					,#{no_person	, jdbcType = VARCHAR}
					,SYSDATE
				)
    </insert>
    <insert id="createDetailGoalMeans" parameterType="com.koscom.consume.model.ConsumeDetailGoalInfoVO">
		MERGE INTO
			CONSUME_GOAL_DETAIL_INFO
				USING DUAL ON
			(
					NO_PERSON				=		#{no_person	, jdbcType = VARCHAR}
				AND REQ_YYYYMM				= 		TO_CHAR(SYSDATE, 'YYYYMM')
				AND CD_TYPE					= 		#{cd_type	, jdbcType = VARCHAR}
				AND NVL(CD_FC, 'chk')		= NVL(	#{cd_fc		, jdbcType = VARCHAR}, 'chk')
				AND NVL(NO_CARD, 'chk')		= NVL(	#{no_card	, jdbcType = VARCHAR}, 'chk')
			)
			WHEN MATCHED THEN UPDATE
			SET
				 AMT_BUDGET		= #{amt_budget	, jdbcType = VARCHAR}
				,AMT_EXPENSE	= #{amt_expense	, jdbcType = VARCHAR}
				,ID_LST			= #{no_person	, jdbcType = VARCHAR}
				,DT_LST			= SYSDATE
				WHEN NOT MATCHED THEN INSERT
					(
						 NO_PERSON
						,REQ_YYYYMM
						,CD_SET
						,CD_TYPE
						,CD_FC
						,NO_CARD
						,NM_CARD
						,AMT_BUDGET
						,AMT_EXPENSE
						,ID_FRT
						,DT_FRT
						,ID_LST
						,DT_LST
					)
				VALUES(
					 #{no_person	, jdbcType = VARCHAR}
					,TO_CHAR(SYSDATE, 'YYYYMM')
					,'02'
					,#{cd_type		, jdbcType = VARCHAR}
					,#{cd_fc		, jdbcType = VARCHAR}
					,#{no_card		, jdbcType = VARCHAR}
					,#{nm_card		, jdbcType = VARCHAR}
					,#{amt_budget	, jdbcType = VARCHAR}
					,#{amt_expense	, jdbcType = VARCHAR}
					,#{no_person	, jdbcType = VARCHAR}
					,SYSDATE
					,#{no_person	, jdbcType = VARCHAR}
					,SYSDATE
				)
    </insert>
	<select id="getConsumeInfo" parameterType="com.koscom.consume.model.ConsumeForm" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 CI.SEQ_CONSUME
			,CI.TYPE_IN_OUT
			,CI.MEANS_CONSUME
			,CI.NM_CARD
			,CI.NO_CARD
			,CI.DT_TRD
			,CI.CD_CLASS
			,PCCI.NM_CLASS
			,CI.CD_TYPE
			,PCCI.NM_TYPE
			,CI.CONTENTS
			,CI.MEMO
			,CI.AMT_IN_OUT
			,CI.YN_AUTO
		FROM
			 CONSUME_INFO CI
			,PERSON_CONSUME_CLASS_INFO PCCI
		WHERE
				CI.SEQ_CONSUME	= #{seq_consume	, jdbcType = VARCHAR}
			AND CI.NO_PERSON	= PCCI.NO_PERSON
			AND CI.NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CI.CD_CLASS		= PCCI.CD_CLASS
			AND CI.CD_TYPE		= PCCI.CD_TYPE
			AND YN_CANCEL		= 'N'
			AND YN_DELETE		= 'N'
	</select>
	
	<update id="modifyPersonSortClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			SORT_CLASS = #{sort_class, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
	</update>
	<update id="modifyPersonSortType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			SORT_TYPE = #{sort_type, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>
	<update id="deletePersonConsumeClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			YN_USE = 'N'
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
	</update>
	<update id="modifyConsumeInfoClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			CONSUME_INFO
		SET
			 CD_CLASS	= '99'
			,CD_TYPE	= '999'
		WHERE
				NO_PERSON	= #{no_person, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class, jdbcType = VARCHAR}
	</update>
	<update id="deletePersonConsumeClassType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			YN_USE = 'N'
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>
	<update id="modifyConsumeInfoType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			CONSUME_INFO
		SET
			CD_TYPE = '999'
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>

	<update id="modifyPersonConsumeClassNmClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			NM_CLASS = #{nm_class, jdbcType = VARCHAR}
		WHERE
				NO_PERSON			= #{no_person			, jdbcType = VARCHAR}
			AND CD_CONSUME_CLASS	= #{cd_consume_class	, jdbcType = VARCHAR}
	</update>
	<update id="modifyPersonConsumeClassNmType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		UPDATE
			PERSON_CONSUME_CLASS_INFO
		SET
			NM_TYPE = #{nm_type, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			AND CD_TYPE		= #{cd_type		, jdbcType = VARCHAR}
	</update>
	<insert id="createPersonConsumeClassClass" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				SELECT
					 #{no_person, jdbcType = VARCHAR}				AS NO_PERSON
					,(MAX( TO_NUMBER( CD_CLASS ))+ 1)|| '000'		AS CD_CONSUME_CLASS
					,MAX( TO_NUMBER( CD_CLASS ))+ 1					AS CD_CLASS
					,#{nm_class, jdbcType = VARCHAR}				AS NM_CLASS
					,'000'											AS CD_TYPE
					,NULL											AS_NM_TYPE
					,'N'											AS YN_DEFAULT
					,'Y'											AS YN_USE
					,TO_CHAR( MAX( TO_NUMBER( SORT_CLASS ))+ 1 )	AS SORT_CLASS
					,'1'											AS SORT_TYPE
					,#{no_person, jdbcType = VARCHAR}				AS IS_FRT
					,SYSDATE										AS DT_FRT
					,#{no_person, jdbcType = VARCHAR}				AS ID_LST
					,SYSDATE										AS DT_LST
				FROM
					PERSON_CONSUME_CLASS_INFO
				WHERE
						NO_PERSON = #{no_person, jdbcType = VARCHAR}
					AND CD_CLASS != 99
					AND CD_CLASS > 10
			)
	</insert>
	<insert id="createPersonConsumeClassType" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				SELECT
					 #{no_person, jdbcType = VARCHAR}									AS NO_PERSON
					,#{cd_class, jdbcType = VARCHAR} || (MAX( TO_NUMBER( CD_TYPE ))+ 1)	AS CD_CONSUME_CLASS
					,#{cd_class, jdbcType = VARCHAR}									AS CD_CLASS
					,NM_CLASS															AS NM_CLASS
					,MAX( TO_NUMBER( CD_TYPE ))+ 1										AS CD_TYPE
					,#{nm_type, jdbcType = VARCHAR}										AS_NM_TYPE
					,'N'																AS YN_DEFAULT
					,'Y'																AS YN_USE
					,SORT_CLASS															AS SORT_CLASS
					,MAX(TO_NUMBER(SORT_TYPE))+1										AS SORT_TYPE
					,#{no_person, jdbcType = VARCHAR}									AS IS_FRT
					,SYSDATE															AS DT_FRT
					,#{no_person, jdbcType = VARCHAR}									AS ID_LST
					,SYSDATE															AS DT_LST
				FROM
					PERSON_CONSUME_CLASS_INFO
				WHERE
						NO_PERSON = #{no_person, jdbcType = VARCHAR}
					AND CD_CLASS > 10
					AND CD_CLASS = #{cd_class, jdbcType = VARCHAR}
					AND CD_TYPE != '999'
				GROUP BY
					 NM_CLASS
					,SORT_CLASS
			)
	</insert>
	<insert id="createPersonConsumeClassIncome" parameterType="com.koscom.consume.model.PersonConsumeClassVO">
		INSERT INTO
			PERSON_CONSUME_CLASS_INFO(
				 NO_PERSON
				,CD_CONSUME_CLASS
				,TYPE_IN_OUT
				,CD_CLASS
				,NM_CLASS
				,CD_TYPE
				,YN_DEFAULT
				,YN_USE
				,SORT_CLASS
				,SORT_TYPE
				,ID_FRT
				,DT_FRT
				,ID_LST
				,DT_LST
			)(
				SELECT
					 #{no_person, jdbcType = VARCHAR}		AS NO_PERSON
					,DECODE(
						LENGTH( MAX( TO_NUMBER( CD_CLASS ))),
						1, '0' ||( MAX( TO_NUMBER( CD_CLASS ))+ 1 ),
						2,( MAX( TO_NUMBER( CD_CLASS ))+ 1 )
					)|| '000'								AS CD_CONSUME_CLASS
					,'01'									AS TYPE_IN_OUT
					,DECODE(
						LENGTH( MAX( TO_NUMBER( CD_CLASS ))),
						1,'0' ||( MAX( TO_NUMBER( CD_CLASS ))+ 1 ),
						2,( MAX( TO_NUMBER( CD_CLASS ))+ 1 )
					)										AS CD_CLASS
					,#{nm_class, jdbcType = VARCHAR}		AS NM_CLASS
					,'000'									AS CD_TYPE
					,'N'									AS YN_DEFAULT
					,'Y'									AS YN_USE
					,MAX( TO_NUMBER( SORT_CLASS ))+ 1		AS SORT_CLASS
					,'1'									AS SORT_TYPE
					,#{no_person, jdbcType = VARCHAR}		AS ID_FRT
					,SYSDATE								AS DT_FRT
					,#{no_person, jdbcType = VARCHAR}		AS ID_LST
					,SYSDATE								AS DT_LST
				FROM
					PERSON_CONSUME_CLASS_INFO
				WHERE
						NO_PERSON	=  #{no_person, jdbcType = VARCHAR}
					AND TYPE_IN_OUT	=  '01'
					AND CD_CLASS	!= '99'
			)
	</insert>
	<update id="modifyConsumeInfo" parameterType="com.koscom.consume.model.ConsumeVO">
		UPDATE
			CONSUME_INFO
		SET
			 NM_CARD	= #{nm_card		, jdbcType = VARCHAR}
			,DT_TRD		= #{dt_trd		, jdbcType = VARCHAR}
			,CD_CLASS	= #{cd_class	, jdbcType = VARCHAR}
			,CD_TYPE	= #{cd_type		, jdbcType = VARCHAR}
			,CONTENTS	= #{contents	, jdbcType = VARCHAR}
			,AMT_IN_OUT	= #{amt_in_out	, jdbcType = VARCHAR}
			,MEMO		= #{memo		, jdbcType = VARCHAR}
			,YN_AUTO	= #{yn_auto		, jdbcType = VARCHAR}
		WHERE
				NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND SEQ_CONSUME = #{seq_consume	, jdbcType = VARCHAR}
	</update>
	<update id="deleteConsumeInfo" parameterType="com.koscom.consume.model.ConsumeForm">
		UPDATE
			CONSUME_INFO
		SET
			YN_DELETE = 'Y'
		WHERE
				NO_PERSON		= #{no_person	, jdbcType = VARCHAR}
			AND SEQ_CONSUME		= #{seq_consume	, jdbcType = VARCHAR}
	</update>
	
	<insert id="createConsumeInfo" parameterType="com.koscom.consume.model.ConsumeVO">
		<selectKey keyProperty="seq_consume" resultType="java.lang.Integer" order="BEFORE">
			(SELECT NVL(MAX(SEQ_CONSUME),0)+1 FROM CONSUME_INFO)
		</selectKey>
			INSERT INTO
				CONSUME_INFO(
					 NO_PERSON
					,SEQ_CONSUME
					,TYPE_IN_OUT
					,MEANS_CONSUME
					,CD_FC
					,NM_CARD
					,NO_CARD
					,TYPE_CARD
					,DT_TRD
					,TM_TRD
					,NO_BIZ
					,NM_BIZ
					,CD_CLASS
					,CD_TYPE
					,CONTENTS
					,MEMO
					,GRADE
					,AMT_IN_OUT
					,NO_APPROVAL
					,MON_INSTALLMENT
					,MON_REMAINING
					,YN_PAY_INSTALLMENT
					,YN_CANCEL
					,YN_DELETE
					,YN_AUTO
					,YN_BUDGET_EXCEPT
					,ID_FRT
					,DT_FRT
					,ID_LST
					,DT_LST
				)
				VALUES (
					 #{no_person			, jdbcType = VARCHAR}
					,#{seq_consume}
					,#{type_in_out			, jdbcType = VARCHAR}
					,#{means_consume		, jdbcType = VARCHAR}
					,#{cd_fc				, jdbcType = VARCHAR}
					,#{nm_card				, jdbcType = VARCHAR}
					,#{no_card				, jdbcType = VARCHAR}
					,#{type_card			, jdbcType = VARCHAR}
					,#{dt_trd				, jdbcType = VARCHAR}
					,#{tm_trd				, jdbcType = VARCHAR}
					,#{no_biz				, jdbcType = VARCHAR}
					,#{nm_biz				, jdbcType = VARCHAR}
					,#{cd_class				, jdbcType = VARCHAR}
					,#{cd_type				, jdbcType = VARCHAR}
					,#{contents				, jdbcType = VARCHAR}
					,#{memo					, jdbcType = VARCHAR}
					,#{grade				, jdbcType = VARCHAR}
					,#{amt_in_out			, jdbcType = VARCHAR}
					,#{no_approval			, jdbcType = VARCHAR}
					,#{mon_installment		, jdbcType = VARCHAR}
					,#{mon_remaining		, jdbcType = VARCHAR}
					,#{yn_pay_installment	, jdbcType = VARCHAR}
					,#{yn_cancel			, jdbcType = VARCHAR}
					,#{yn_delete			, jdbcType = VARCHAR}
					,#{yn_auto				, jdbcType = VARCHAR}
					,#{yn_budget_except		, jdbcType = VARCHAR}
					,#{no_person			, jdbcType = VARCHAR}
					,SYSDATE
					,#{no_person			, jdbcType = VARCHAR}
					,SYSDATE
				)
	</insert>
	<select id="getBannerDataConsume" parameterType="com.koscom.consume.model.ConsumeVO" resultType="java.lang.Integer">
		SELECT
			NVL( COUNT( 1 ), 0 )
		FROM
			CONSUME_INFO CI,
			(
				SELECT
					CASE
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
					END AS DT_FROM,
					CASE
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
					END AS DT_TO
				FROM
					(
						SELECT
							DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType = VARCHAR}
					)
			) PSI
		WHERE
				CI.NO_PERSON	= #{no_person	, jdbcType = VARCHAR}
			AND CI.NM_CARD		= #{nm_card		, jdbcType = VARCHAR}
			AND CI.CONTENTS		= #{contents	, jdbcType = VARCHAR}
			AND TO_NUMBER( CI.DT_TRD ) BETWEEN
					PSI.DT_FROM
				AND PSI.DT_TO
	</select>
	<select id="getBannerDataIncome" parameterType="com.koscom.consume.model.ConsumeVO" resultType="com.koscom.consume.model.ConsumeVO">
		SELECT
			 SUM( AMT_IN_OUT ) AS AMT_IN_OUT
			,SUBSTR( DT_TRD, 0, 6 ) AS DT_TRD
		FROM
			CONSUME_INFO CI,
			(
				SELECT
					CASE
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 2 ), 'YYYYMM' )|| DT_BASIC
					END AS DT_FROM,
					CASE
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[>]]>  DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 0 ), 'YYYYMM' )|| DT_BASIC
						WHEN TO_CHAR( SYSDATE, 'DD' ) <![CDATA[<=]]> DT_BASIC THEN TO_CHAR( ADD_MONTHS( SYSDATE,- 1 ), 'YYYYMM' )|| DT_BASIC
					END AS DT_TO
				FROM
					(
						SELECT
							DECODE( LENGTH( DT_BASIC ), 1, '0' || DT_BASIC, DT_BASIC ) AS DT_BASIC
						FROM
							PERSON_SET_INFO
						WHERE
							NO_PERSON = #{no_person, jdbcType = VARCHAR}
					)
			) PSI
		WHERE
				CI.NO_PERSON	= #{no_person, jdbcType = VARCHAR}
			AND CI.NM_CARD		= #{nm_card, jdbcType = VARCHAR}
			AND CI.CONTENTS		= #{contents, jdbcType = VARCHAR}
			AND TO_NUMBER( CI.DT_TRD ) BETWEEN PSI.DT_FROM AND PSI.DT_TO
		GROUP BY
			SUBSTR( DT_TRD, 0, 6 )
		ORDER BY SUBSTR( DT_TRD, 0, 6 ) ASC
	</select>
</mapper>