<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.env.dao.CodeMapper">

<select id="getCodeInfo" parameterType="com.koscom.env.model.CodeInfo" resultType="com.koscom.env.model.CodeInfo">       
     SELECT * FROM comm_cd WHERE code_group = #{code_group} AND code_value = #{code_value}
</select>

<select id="getCodeId" parameterType="com.koscom.env.model.CodeInfo" resultType="java.lang.String">       
     SELECT CODE_VALUE FROM comm_cd WHERE code_group = #{code_group} AND nm_code = #{nm_code}
</select>

<select id="listCodeInfo" parameterType="com.koscom.env.model.CodeInfo" resultType="com.koscom.env.model.CodeInfo">
	SELECT * 
	FROM comm_cd 
	WHERE code_group = #{code_group} 
	AND code_value != ' '
	<if test="nm_code != null and nm_code != ''">
		AND nm_code LIKE '%' || #{nm_code} || '%'
	</if> 
	ORDER BY seq_order
</select>

<select id="listCode" parameterType="com.koscom.env.model.CodeForm" resultType="com.koscom.env.model.CodeVO">
	SELECT * 
	FROM comm_cd 
	<where>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(code_group)'>
			AND code_group = #{code_group}
		</if>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(code_value)'>
			AND code_value = #{code_value}
		</if>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(nm_code)'>
			AND nm_code = #{nm_code}
		</if>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(yn_code_group)'>
			<choose>
				<when test='"Y".equals(yn_code_group)'>
					AND code_value = ' '
				</when>
				<otherwise>
					AND code_value != ' '
					<if test='@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)'>
						<if test='"code_group".equals(sel_detail)'>AND code_group = #{txt_detail}</if>
						<if test='"nm_code"   .equals(sel_detail)'>AND nm_code    = #{txt_detail}</if>
						<if test='"etc"       .equals(sel_detail)'>AND etc        = #{txt_detail}</if>
					</if>
				</otherwise>
			</choose>
			
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)'>
				<if test='"code_group".equals(sel_detail)'>AND code_group LIKE '%'||#{txt_detail}||'%'</if>
				<if test='"nm_code"   .equals(sel_detail)'>AND nm_code    LIKE '%'||#{txt_detail}||'%'</if>
				<if test='"etc"       .equals(sel_detail)'>AND etc        LIKE '%'||#{txt_detail}||'%'</if>
			</if>
		</if>
	</where>
	ORDER BY code_group, seq_order
</select>



<update id="procCodeInfo" parameterType="com.koscom.env.model.CodeInfo">
	MERGE INTO comm_cd
	   USING DUAL
	   ON (code_group = #{code_group} AND code_value = #{code_value} )
	   WHEN MATCHED THEN
	      UPDATE 
	         SET  nm_code = #{nm_code, jdbcType=VARCHAR}
				, etc = #{etc, jdbcType=VARCHAR}
				, seq_order = #{seq_order, jdbcType=INTEGER}
				, yn_system_code = #{yn_system_code, jdbcType=VARCHAR}
				, yn_use = #{yn_use, jdbcType=VARCHAR}
				, id_lst = #{id_lst, jdbcType=VARCHAR}
				, dt_lst = SYSDATE
		WHEN NOT MATCHED THEN
		  INSERT ( 	  code_group
					, code_value
					, nm_code
					, etc
					, seq_order
					, yn_system_code
					, yn_use
					, id_frt
					, dt_frt
					, id_lst
					, dt_lst 
				)
			VALUES(	  #{code_group, jdbcType=VARCHAR}
				    , #{code_value, jdbcType=VARCHAR}
				    , #{nm_code, jdbcType=VARCHAR}
				    , #{etc, jdbcType=VARCHAR}
				    , #{seq_order, jdbcType=INTEGER}
				    , #{yn_system_code, jdbcType=VARCHAR}
				    , #{yn_use, jdbcType=VARCHAR}
				    , #{id_frt, jdbcType=VARCHAR}
				    , SYSDATE 
				    , #{id_frt, jdbcType=VARCHAR}
				    , SYSDATE 
				)
</update>


<delete id="delCodeInfo" parameterType="com.koscom.env.model.CodeInfo">
	DELETE from comm_cd
	 WHERE code_group = #{code_group}
	<if test='@com.koscom.util.MybatisUtil@isNotEmpty(code_value)'>
		AND code_value = #{code_value}
	</if>
</delete>

<!-- 코드그룹의 seq_order,code_value 의 최대값을 가져온다  -->
<select id="getMaxCodeInfo" parameterType="com.koscom.env.model.CodeInfo" resultType="com.koscom.env.model.CodeVO">
	SELECT 
			  code_group
			, MAX(seq_order) AS seq_order
			, MAX(code_value) AS code_value
	FROM comm_cd
	WHERE code_group=#{code_group}
	GROUP BY code_group 
</select>

<!-- 코드그룹의 seq_order를 바꾼다. -->
<update id="modifyListSeq" parameterType="com.koscom.env.model.CodeInfo">
	UPDATE comm_cd SET seq_order = #{seq_order}
		   , id_lst    = #{id_lst, jdbcType=VARCHAR}
		   , dt_lst    = SYSDATE
	 WHERE code_group = #{code_group}
		   AND code_value = #{code_value}
</update>

<!-- 코드그룹의 openAPI 약관동의를 가져온다  -->
<select id="getAgreeTerm" parameterType="com.koscom.env.model.CodeInfo" resultType="com.koscom.env.model.CodeInfo">
	SELECT   code_value
			, code_group
			, nm_code
			, etc
	FROM COMM_CD
	WHERE etc IS NOT NULL
		  AND code_group = #{code_group}
</select>

</mapper>      