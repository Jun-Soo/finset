<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.apply.dao.ApplyMapper">

	<sql id="listApplyInfo_WHERE">
		<where>
			<!-- 문서함구분 -->
			<choose>
				<when test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_doc)'>
					AP.cd_apply_doc_box = #{cd_apply_doc, jdbcType=VARCHAR}
				</when>
				<otherwise>
					AP.cd_apply_doc_box <![CDATA[<]]> 99
					<if test="@com.koscom.util.MybatisUtil@isEmpty(yn_agency)">
						AND AP.cd_apply_doc_box <![CDATA[>]]> 0
					</if>
				</otherwise>
			</choose>
			<!-- 상세검색 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)">
                <if test='"PE.hp"       .equals(sel_detail)'>AND PE.hp        LIKE '%'||#{txt_detail}||'%'</if>
                <if test='"PE.nm_person".equals(sel_detail)'>AND PE.nm_person LIKE '%'||#{txt_detail}||'%'</if>
                <if test='"PE.no_person".equals(sel_detail)'>AND PE.no_person LIKE '%'||#{txt_detail}||'%'</if>
                <if test='"PE.bgn"      .equals(sel_detail)'>AND PE.bgn       LIKE '%'||#{txt_detail}||'%'</if>
			</if>

			<!-- 일자구분 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_dt_kind)">
				<choose>
					<when test="@com.koscom.util.MybatisUtil@contains('dt_',sel_dt_kind)">
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
 							<if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_frt      ),'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_lst      ),'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND TO_CHAR(AP.ymd_approval),'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}</if>
						</if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
                            <if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_frt      ),'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_lst      ),'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND TO_CHAR(AP.ymd_approval),'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}</if>
						</if>
					</when>
					<otherwise>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
							<if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND AP.dt_frt       <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND AP.dt_lst       <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND AP.ymd_approval <![CDATA[>=]]> #{txt_dt_from}</if>
						</if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
                            <if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND AP.dt_frt       <![CDATA[>=]]> #{txt_dt_to}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND AP.dt_lst       <![CDATA[>=]]> #{txt_dt_to}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND AP.ymd_approval <![CDATA[>=]]> #{txt_dt_to}</if>
						</if>
					</otherwise>
				</choose>
			</if>
			<!-- 광고매체 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_advertisement)'>
				AND PR.cd_advertisement = #{cd_advertisement}
			</if>

			<!-- 상품명 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods)'>
				AND AP.cd_goods = #{cd_goods}
			</if>

			<!-- 상품구분 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods_type)'>
				AND PR.cd_goods_type = #{cd_goods_type}
			</if>

			<!-- 금융사 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_fc)'>
				AND AP.cd_fc = #{cd_fc}
			</if>

			<!-- 담당자 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
				AND PR.id_prepare = #{id_prepare}
			</if>

			<!-- 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare_srch)'>
				AND PR.id_prepare = #{id_prepare_srch}
			</if>

			<!-- 매체사별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency)'>
				AND PR.id_agency = #{id_agency}
			</if>

			<!-- 대리점 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency_user)'>
				AND PR.id_agency_user = #{id_agency_user}
			</if>

			<!-- 대리점 유입경로별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_agency_path)'>
				AND PR.cd_agency_path = #{cd_agency_path}
			</if>

		</where>
	</sql>

	<select id="listApplyInfo" parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listApplyInfo : */
	   SELECT
	          no_apply
			, no_prepare
			, no_person
			, cd_apply_doc_box
			, cd_fc
			, cd_goods
			, amt_apply
			, ymd_apply
			, amt_approval
			, ymd_approval
			, ymd_lst_comp
			, his_lst_comp
			, memo_from_apply
			, id_frt
			, dt_frt
			, id_lst
			, dt_lst
			, year_term
			, rto_loan
			, id_prepare
			, cd_advertisement
			, cd_goods_type
			, nm_person
			, bgn
			, hp
	    FROM
	        (SELECT
	            	  LST.no_apply
					, LST.no_prepare
					, LST.no_person
					, LST.cd_apply_doc_box
					, LST.cd_fc
					, LST.cd_goods
					, LST.amt_apply
					, LST.ymd_apply
					, LST.amt_approval
					, LST.ymd_approval
					, LST.ymd_lst_comp
					, LST.his_lst_comp
					, LST.memo_from_apply
					, LST.id_frt
					, LST.dt_frt
					, LST.id_lst
					, LST.dt_lst
					, LST.year_term
					, LST.rto_loan
					, LST.id_prepare
					, LST.cd_advertisement
					, LST.cd_goods_type
					, LST.nm_person
					, LST.bgn
					, LST.hp
	            	, ROWNUM RNUM
	         FROM
	            (SELECT
	                  AP.no_apply
					, AP.no_prepare
					, AP.no_person
					, AP.cd_apply_doc_box
					, AP.cd_fc
					, AP.cd_goods
					, AP.amt_apply
					, AP.ymd_apply
					, AP.amt_approval
					, AP.ymd_approval
					, AP.ymd_lst_comp
					, AP.his_lst_comp
					, AP.memo_from_apply
					, AP.id_frt
					, AP.dt_frt
					, AP.id_lst
					, AP.dt_lst
					, AP.year_term
					, AP.rto_loan
					, PR.id_prepare
					, PR.cd_advertisement
					, PR.cd_goods_type
					, PE.nm_person
					, PE.bgn
					, PE.hp
	             FROM apply_info AP
				 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
				 INNER JOIN person_info PE ON PE.no_person = PR.no_person
				 <include refid="listApplyInfo_WHERE"/>
				 ORDER BY NVL(AP.dt_lst,AP.dt_frt) DESC
	             ) LST
	        WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
	        )
	    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>

	<select id="listApplyCount"  parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.listApplyCount : */
		SELECT
               COUNT(*) AS recordCount, SUM(TO_NUMBER(NVL(AP.amt_approval,0))) AS amtTotAppr, SUM(TO_NUMBER(NVL(AP.amt_apply,0))) AS amtTotApply
            FROM apply_info AP
		 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		 INNER JOIN person_info PE ON PE.no_person = PR.no_person
		 <include refid="listApplyInfo_WHERE"/>
	</select>

	<select id="listApplyInfoAgency" parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listApplyInfoAgency : */
	   SELECT
	        	  no_apply
				, no_prepare
				, no_agency_person
				, cd_apply_doc_box
				, cd_fc
				, cd_goods
				, amt_apply
				, ymd_apply
				, amt_approval
				, ymd_approval
				, ymd_lst_comp
				, his_lst_comp
				, memo_from_apply
				, dt_agency_frt
				, id_frt
				, dt_frt
				, id_lst
				, dt_lst
				, year_term
				, rto_loan
				, id_agency_user
				, cd_agency_path
				, cd_goods_type
            	, RNUM
	    FROM
	        (SELECT
	            	  LST.no_apply
					, LST.no_prepare
					, LST.no_agency_person
					, LST.cd_apply_doc_box
					, LST.cd_fc
					, LST.cd_goods
					, LST.amt_apply
					, LST.ymd_apply
					, LST.amt_approval
					, LST.ymd_approval
					, LST.ymd_lst_comp
					, LST.his_lst_comp
					, LST.memo_from_apply
					, LST.dt_agency_frt
					, LST.id_frt
					, LST.dt_frt
					, LST.id_lst
					, LST.dt_lst
					, LST.year_term
					, LST.rto_loan
					, LST.id_agency_user
					, LST.cd_agency_path
					, LST.cd_goods_type
	            	, ROWNUM RNUM
	         FROM
	            (SELECT
	                  AP.no_apply
					, AP.no_prepare
					, AP.no_agency_person
					, AP.cd_apply_doc_box
					, AP.cd_fc
					, AP.cd_goods
					, AP.amt_apply
					, AP.ymd_apply
					, AP.amt_approval
					, AP.ymd_approval
					, AP.ymd_lst_comp
					, AP.his_lst_comp
					, AP.memo_from_apply
					, AP.dt_agency_frt
					, AP.id_frt
					, AP.dt_frt
					, AP.id_lst
					, AP.dt_lst
					, AP.year_term
					, AP.rto_loan
					, PR.id_agency_user
					, PR.cd_agency_path
					, PR.cd_goods_type
	             FROM apply_info AP
				 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
				 <include refid="listApplyInfo_WHERE"/>
				 ORDER BY NVL(AP.dt_agency_frt,AP.dt_frt) DESC
	             ) LST
	        WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
	        )
	    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>

	<select id="listApplyCountAgency"  parameterType="com.koscom.apply.model.ApplyForm" resultType="int">
		/* com.koscom.apply.dao.ApplyMapper.listApplyCountAgency : */
		SELECT
               COUNT(*) AS recordCount
            FROM apply_info AP
		 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		 INNER JOIN agency_person_info PE ON PE.no_person = PR.no_agency_person
		 <include refid="listApplyInfo_WHERE"/>
	</select>

	<select id="listApplyByPrepare" parameterType="java.lang.String" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listApplyByPrepare : */
		SELECT
			    no_apply
			  , no_prepare
			  , ymd_apply
			  , cd_goods
			  , cd_fc
			  , amt_approval
			  , amt_apply
			  , ymd_approval
			  , ymd_lst_comp
			  , cd_apply_doc_box
			  , memo_from_apply
			  , TO_CHAR(dt_lst, 'yyyyMMdd') AS ymd_lst
			  , TO_CHAR(dt_lst, 'hh24:mi')AS his_lst
			, year_term
			, rto_loan
		  FROM apply_info
		 WHERE no_prepare = #{no_prepare}
		   AND cd_apply_doc_box <![CDATA[<]]> 99
		   AND cd_apply_doc_box <![CDATA[>]]> 0
	  ORDER BY dt_frt
	</select>

		<select id="listApplyByPrepareAgency" parameterType="java.lang.String" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listApplyByPrepareAgency : */
		SELECT
			    no_apply
			  , ymd_apply
			  , cd_goods
			  , cd_fc
			  , amt_approval
			  , amt_apply
			  , ymd_approval
			  , ymd_lst_comp
			  , cd_apply_doc_box
			  , memo_from_apply
			  , TO_CHAR(dt_lst, 'yyyyMMdd') AS ymd_lst
			  , TO_CHAR(dt_lst, 'hh24:mi')AS his_lst
			, year_term
			, rto_loan
		  FROM apply_info
		 WHERE no_prepare = #{no_prepare}
		   AND cd_apply_doc_box <![CDATA[<]]> 99
	  ORDER BY dt_agency_frt
	</select>

	<insert id="insertApply">
		/* com.koscom.apply.dao.ApplyMapper.insertApply : */
<!-- 		<selectKey keyProperty="no_apply" resultType="string" order="BEFORE">
			(SELECT TO_CHAR(SYSDATE,'yyyyMMdd')||LPAD(NVL(MAX(SUBSTR(no_apply,9,10)),0)+1,7,'0') FROM apply_info)
		</selectKey> -->
		<selectKey keyProperty="no_apply" resultType="string" order="BEFORE">
			(SELECT TO_CHAR(SYSDATE,'yyyyMMdd')||LPAD(NVL(APPLY_SEQUENCE.NEXTVAL,0),7,'0') FROM DUAL)
		</selectKey>

		INSERT INTO apply_info
			(	  no_apply
				, no_prepare
				, no_person
				, no_agency_person
				, cd_apply_doc_box
				, cd_fc
				, cd_goods
				, amt_apply
				, memo_to_apply
				, etc_apply_path
				, cd_collect_path
				, cd_contact_path
				, cd_collect_method
				, etc_memo
				, nm_agency
				, nm_ceo_agency
				, url_homepage_agency
				, nm_writer
				, year_term
				, rto_loan
				, no_bunch
				, id_frt
				, dt_frt
				, id_lst
				, dt_lst
			) VALUES (
				  #{no_apply}
				, #{no_prepare, jdbcType=VARCHAR}
				, #{no_person, jdbcType=VARCHAR}
				, #{no_agency_person, jdbcType=VARCHAR}
				, #{cd_apply_doc_box, jdbcType=VARCHAR}
				, #{cd_fc, jdbcType=VARCHAR}
				, #{cd_goods, jdbcType=VARCHAR}
				, #{amt_apply, jdbcType=VARCHAR}
				, #{memo_to_apply, jdbcType=VARCHAR}
				, #{etc_apply_path, jdbcType=VARCHAR}
				, #{cd_collect_path, jdbcType=VARCHAR}
				, #{cd_contact_path, jdbcType=VARCHAR}
				, #{cd_collect_method, jdbcType=VARCHAR}
				, #{etc_memo, jdbcType=VARCHAR}
				, #{nm_agency, jdbcType=VARCHAR}
				, #{nm_ceo_agency, jdbcType=VARCHAR}
				, #{url_homepage_agency, jdbcType=VARCHAR}
				, #{nm_writer, jdbcType=VARCHAR}
				, #{year_term, jdbcType=VARCHAR}
				, #{rto_loan, jdbcType=VARCHAR}
				, #{no_bunch, jdbcType=VARCHAR}
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertApplyAgency">
		/* com.koscom.apply.dao.ApplyMapper.insertApplyAgency : */
<!-- 		<selectKey keyProperty="no_apply" resultType="string" order="BEFORE">
			(SELECT TO_CHAR(SYSDATE,'yyyyMMdd')||LPAD(NVL(MAX(SUBSTR(no_apply,9,10)),0)+1,7,'0') FROM apply_info)
		</selectKey> -->
		<selectKey keyProperty="no_apply" resultType="string" order="BEFORE">
			(SELECT TO_CHAR(SYSDATE,'yyyyMMdd')||LPAD(NVL(APPLY_SEQUENCE.NEXTVAL,0),7,'0') FROM DUAL)
		</selectKey>

		INSERT INTO apply_info
			(	  no_apply
				, no_prepare
				, no_person
				, no_agency_person
				, cd_apply_doc_box
				, cd_fc
				, cd_goods
				, amt_apply
				, memo_to_apply
				, etc_apply_path
				, cd_collect_path
				, cd_contact_path
				, cd_collect_method
				, etc_memo
				, nm_agency
				, nm_ceo_agency
				, url_homepage_agency
				, nm_writer
				, year_term
				, rto_loan
				, no_bunch
				, year_term
				, rto_loan
				, id_frt
				, dt_frt
				, id_lst
				, dt_lst
			) VALUES (
				  #{no_apply}
				, #{no_prepare, jdbcType=VARCHAR}
				, #{no_person, jdbcType=VARCHAR}
				, #{no_agency_person, jdbcType=VARCHAR}
				, #{cd_apply_doc_box, jdbcType=VARCHAR}
				, #{cd_fc, jdbcType=VARCHAR}
				, #{cd_goods, jdbcType=VARCHAR}
				, #{amt_apply, jdbcType=VARCHAR}
				, #{memo_to_apply, jdbcType=VARCHAR}
				, #{etc_apply_path, jdbcType=VARCHAR}
				, #{cd_collect_path, jdbcType=VARCHAR}
				, #{cd_contact_path, jdbcType=VARCHAR}
				, #{cd_collect_method, jdbcType=VARCHAR}
				, #{etc_memo, jdbcType=VARCHAR}
				, #{nm_agency, jdbcType=VARCHAR}
				, #{nm_ceo_agency, jdbcType=VARCHAR}
				, #{url_homepage_agency, jdbcType=VARCHAR}
				, #{nm_writer, jdbcType=VARCHAR}
				, #{year_term, jdbcType=VARCHAR}
				, #{rto_loan, jdbcType=VARCHAR}
				, #{no_bunch, jdbcType=VARCHAR}
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<select id="getApply" parameterType="com.koscom.apply.model.ApplyVO" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.getApply : */
		SELECT   NO_APPLY
				,NO_PREPARE
				,CD_APPLY_DOC_BOX
				,CD_APPLY_COMP
				,CD_GOODS
				,CD_ADVERTISEMENT
				,YMD_APPLY
				,AMT_APPLY
				,ID_APPLY
				,ETC_APPLY_PATH
				,AMT_APPROVAL
				,YMD_APPROVAL
				,YMD_LST_COMP
				,HIS_LST_COMP
				,ID_FRT
				,DT_FRT
				,ID_LST
				,DT_LST
				,NM_WRITER
				,CD_COLLECT_PATH
				,CD_CONTACT_PATH
				,CD_COLLECT_METHOD
				,ETC_MEMO
				,NM_AGENCY
				,NM_CEO_AGENCY
				,URL_HOMEPAGE_AGENCY
				,MEMO_TO_APPLY
				,MEMO_FROM_APPLY
				,NO_AGENCY_PERSON
				,DT_AGENCY_FRT
				,YMD_EARLY_REPAYMENT
				,YEAR_TERM
				,RTO_LOAN
				,CD_FC
				,NO_BUNCH
				,LOAN_NO_APPLY
				,NO_PERSON
		  FROM apply_info
		  <where>
		  	<if test='@com.koscom.util.MybatisUtil@isNotEmpty(no_apply)'>
		  		no_apply = #{no_apply}
		  	</if>
		  	<if test='@com.koscom.util.MybatisUtil@isNotEmpty(no_prepare)'>
		  		AND no_prepare = #{no_prepare}
		  	</if>
		  	<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_fc)'>
		  		AND cd_fc = #{cd_fc}
		  	</if>
		  </where>
	</select>

	<update id="modifyApplyDoc" parameterType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.modifyApplyDoc : */
		UPDATE apply_info
		   SET    cd_apply_doc_box = #{cd_apply_doc_box, jdbcType=VARCHAR}
				<choose>
		   			<when test="@com.koscom.util.MybatisUtil@isNotEmpty(ymd_lst_comp)">
		   				, ymd_lst_comp = #{ymd_lst_comp}
		   			</when>
		   			<otherwise>
		   				, ymd_lst_comp = TO_CHAR(SYSDATE,'yyyyMMdd')
		   			</otherwise>
		   		</choose>
		   		<choose>
		   			<when test="@com.koscom.util.MybatisUtil@isNotEmpty(his_lst_comp)">
		   				, his_lst_comp = #{his_lst_comp}
		   			</when>
		   			<otherwise>
		   				, his_lst_comp = TO_CHAR(SYSDATE,'hh24miss')
		   			</otherwise>
		   		</choose>
				, id_lst = #{id_lst, jdbcType=VARCHAR}
				, dt_lst = SYSDATE
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods)'>
				, cd_goods = #{cd_goods, jdbcType=VARCHAR}
			</if>
	   		<choose>
	   			<when test='cd_apply_doc_box == "01"'>
		   			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(amt_apply)'>
					, amt_apply = #{amt_apply}
					</if>
				, amt_approval = ''
				, ymd_approval = ''
	   			</when>
	   			<when test='cd_apply_doc_box == "10"'>
		   			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(amt_apply)'>
					, amt_apply = #{amt_apply}
					</if>
		   			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_apply)'>
					, id_apply = #{id_apply}
					</if>
		   			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(ymd_apply)'>
					, ymd_apply = #{ymd_apply}
					</if>
				, amt_approval = ''
				, ymd_approval = ''
	   			</when>
	   			<when test='cd_apply_doc_box == "50"'>
				, amt_approval = #{amt_approval, jdbcType=VARCHAR}
					<if test='@com.koscom.util.MybatisUtil@isNotEmpty(ymd_approval)'>
					, ymd_approval = #{ymd_approval, jdbcType=VARCHAR}
					</if>
					<if test='@com.koscom.util.MybatisUtil@isNotEmpty(rto_loan)'>
					, rto_loan = #{rto_loan, jdbcType=NUMERIC}
					</if>
					<if test='@com.koscom.util.MybatisUtil@isNotEmpty(year_term)'>
					, year_term = #{year_term, jdbcType=NUMERIC}
					</if>
	   			</when>
	   			<otherwise>
	   			, amt_approval = ''
	   			, ymd_approval = ''
	   			</otherwise>
	   		</choose>
		 WHERE no_apply = #{no_apply}
	</update>

	<select id="getCntApplyDoc" parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.getCntApplyDoc : */
		<foreach collection="doc_fields" item="codeInfo" separator="UNION ALL">
			SELECT <if test='"10".equals(codeInfo.code_value)'>'10'</if>
				   <if test='"50".equals(codeInfo.code_value)'>'50'</if>
                   <if test='"60".equals(codeInfo.code_value)'>'60'</if>
                   <if test='"20".equals(codeInfo.code_value)'>'20'</if>
                   <if test='"99".equals(codeInfo.code_value)'>'99'</if>
                   <if test='"70".equals(codeInfo.code_value)'>'70'</if>
                   AS cd_apply_doc_box,  COUNT(*) AS cnt
			  FROM apply_info AI
			 INNER JOIN prepare_info PR ON PR.no_prepare = AI.no_prepare
			 WHERE AI.cd_apply_doc_box <![CDATA[=]]>
			 	   <if test='"10".equals(codeInfo.code_value)'>'10'</if>
                   <if test='"50".equals(codeInfo.code_value)'>'50'</if>
                   <if test='"60".equals(codeInfo.code_value)'>'60'</if>
                   <if test='"20".equals(codeInfo.code_value)'>'20'</if>
                   <if test='"99".equals(codeInfo.code_value)'>'99'</if>
                   <if test='"70".equals(codeInfo.code_value)'>'70'</if>
			 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
			 	AND PR.id_prepare = #{id_prepare}
			 </if>
		</foreach>
	</select>

	<update id="modifyApplyMemo" parameterType="com.koscom.domain.ApplyInfo">
		/* com.koscom.apply.dao.ApplyMapper.modifyApplyMemo : */
		UPDATE apply_info
		   SET   memo_to_apply = #{memo_to_apply, jdbcType=VARCHAR}
		       , memo_from_apply = #{memo_from_apply, jdbcType=VARCHAR}
		   	   , id_lst = #{id_lst, jdbcType=VARCHAR}
			   , dt_lst = SYSDATE
		 WHERE no_apply = #{no_apply}
	</update>

	<update id="modifyApplyLegal" parameterType="com.koscom.domain.ApplyInfo">
		/* com.koscom.apply.dao.ApplyMapper.modifyApplyLegal : */
		UPDATE	apply_info
		   SET
		   	    nm_writer = #{nm_writer, jdbcType=VARCHAR}
		     ,  cd_collect_path = #{cd_collect_path, jdbcType=VARCHAR}
			 ,  cd_contact_path = #{cd_contact_path, jdbcType=VARCHAR}
             ,  cd_collect_method = #{cd_collect_method, jdbcType=VARCHAR}
             ,  etc_memo = #{etc_memo, jdbcType=VARCHAR}
             ,  nm_agency = #{nm_agency, jdbcType=VARCHAR}
             ,  nm_ceo_agency = #{nm_ceo_agency, jdbcType=VARCHAR}
             ,  url_homepage_agency = #{url_homepage_agency, jdbcType=VARCHAR}
		   	 ,  id_lst = #{id_lst, jdbcType=VARCHAR}
			 ,  dt_lst = SYSDATE
         WHERE no_apply = #{no_apply}
     </update>

     <update id="delApplyInfo" parameterType="com.koscom.domain.ApplyInfo">
 		/* com.koscom.apply.dao.ApplyMapper.delApplyInfo : */
    	UPDATE apply_Info
     		SET cd_apply_doc_box = '99'
		   	 ,  id_lst = #{id_lst, jdbcType=VARCHAR}
			 ,  dt_lst = SYSDATE
     	 WHERE no_apply = #{no_apply}
     </update>

	<select id="getNoApply" parameterType="String" resultType="String">
 		/* com.koscom.apply.dao.ApplyMapper.getNoApply : */
		SELECT no_apply
		  FROM apply_info
		  WHERE no_prepare = #{no_prepare}
		  AND cd_apply_doc_box <![CDATA[<]]> '99'
	</select>

	<!-- 접수리스트 엑셀 -->
	<select id="listApplyInfo_excel" parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.listApplyInfo_excel : */
		SELECT
            (SELECT nm_code FROM comm_cd WHERE code_group = 'cd_goods' AND code_value = AP.cd_goods) b_상품명
            ,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_apply_comp' AND code_value = AP.cd_apply_comp) c_금융사
            ,TO_CHAR(AP.dt_frt,'yyyyMMdd') d_신청일시
            ,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_job_class' AND code_value = PE.cd_job_class) e_직업구분
            ,PE.nm_person f_이름
            ,PE.bgn g_생년월일
            ,(SELECT nm_emp FROM worker_info WHERE id_emp = PR.id_prepare) j_담당자
            ,AP.amt_apply h_신청금액
            ,AP.amt_approval i_승인금액
			FROM apply_info AP
			INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
			INNER JOIN person_info PE ON PE.no_person = PR.no_person
			<include refid="listApplyInfo_WHERE"/>
			ORDER BY NVL(AP.dt_lst,AP.dt_frt) DESC
	</select>

	<select id="listApplyDestory" parameterType="int" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listApplyDestory : */
		SELECT no_apply
		  FROM apply_info
		  WHERE dt_frt + #{destroyTerm} <![CDATA[<=]]> SYSDATE
	</select>

	<select id="getCntApply" parameterType="com.koscom.apply.model.ApplyVO" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.getCntApply : */
		SELECT #{cd_apply_doc_box} AS cd_apply_doc_box,  COUNT(*) AS cnt
		  FROM apply_info AP
		  INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		 WHERE AP.cd_apply_doc_box <![CDATA[=]]> #{cd_apply_doc_box}
		 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
		 	AND PR.id_prepare = #{id_prepare}
		 </if>
	</select>

	<update id="updateApplyChk" parameterType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.updateApplyChk : */
		UPDATE apply_info
		   SET	no_person = #{no_person, jdbcType=VARCHAR}
		   	  , cd_apply_doc_box = #{cd_apply_doc_box, jdbcType=VARCHAR}
		   	  , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_apply = #{no_apply}
	</update>

	<select id="getCntMonthApply" parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.getCntMonthApply : */
		SELECT SUBSTR(AP.YMD_APPROVAL, 0, 6) YM_APPROVAL, COUNT(*) CNT
		FROM apply_info AP
		INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		WHERE AP.cd_apply_doc_box <![CDATA[=]]> #{cd_apply_doc_box}
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
			AND PR.id_prepare = #{id_prepare}
		</if>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency)'>
			AND PR.id_agency = #{id_agency}
		</if>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency_user)'>
			AND PR.id_agency_user = #{id_agency_user}
		</if>
		AND TO_CHAR(TO_DATE(AP.YMD_APPROVAL, 'yyyyMMdd'),'yyyyMM') <![CDATA[>=]]> TO_CHAR(add_months(sysdate,-5),'yyyyMM')
		GROUP BY SUBSTR(AP.YMD_APPROVAL, 0, 6)
	</select>

	<select id="getCntDayApply" parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.getCntDayApply : */
		SELECT AP.YMD_APPROVAL YMD_APPROVAL, COUNT(*) CNT
		FROM apply_info AP
		INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		WHERE AP.cd_apply_doc_box <![CDATA[=]]> #{cd_apply_doc_box}
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
			AND PR.id_prepare = #{id_prepare}
		</if>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency)'>
			AND PR.id_agency = #{id_agency}
		</if>
		<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency_user)'>
			AND PR.id_agency_user = #{id_agency_user}
		</if>
		AND AP.YMD_APPROVAL <![CDATA[>=]]> TO_CHAR(sysdate-7,'yyyyMMdd')
		GROUP BY YMD_APPROVAL
	</select>

	<select id="getCntSummaryApplyByAgency" parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.getCntSummaryApplyByAgency : */
		SELECT
			SUM(( CASE WHEN TO_CHAR(AI.DT_AGENCY_FRT,'yyyyMMdd') = TO_CHAR(SYSDATE-1,'yyyyMMdd') AND AI.cd_apply_doc_box <![CDATA[>=]]> 00 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  )) AS cnt_yesterday_frt
			,SUM( CASE WHEN TO_CHAR(AI.DT_AGENCY_FRT,'yyyyMMdd') = TO_CHAR(SYSDATE,'yyyyMMdd') AND AI.cd_apply_doc_box <![CDATA[>=]]> 00 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  ) AS cnt_today_frt
			,SUM( CASE WHEN TO_CHAR(AI.DT_AGENCY_FRT,'yyyyMM') = TO_CHAR(SYSDATE,'yyyyMM') AND AI.cd_apply_doc_box <![CDATA[>=]]> 00 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  ) AS cnt_thatMonth_frt
			,SUM( CASE WHEN TO_CHAR(AI.DT_AGENCY_FRT,'yyyyMM') = TO_CHAR(ADD_MONTHS(SYSDATE,-1),'yyyyMM') AND AI.cd_apply_doc_box <![CDATA[>=]]> 00 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  ) AS cnt_lastMonth_frt

			,SUM( CASE WHEN TO_CHAR(AI.DT_FRT,'yyyyMMdd') = TO_CHAR(SYSDATE-1,'yyyyMMdd') AND AI.cd_apply_doc_box <![CDATA[>=]]> 01 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  ) AS cnt_yesterday_apply
			,SUM( CASE WHEN TO_CHAR(AI.DT_FRT,'yyyyMMdd') = TO_CHAR(SYSDATE,'yyyyMMdd') AND AI.cd_apply_doc_box <![CDATA[>=]]> 01 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  ) AS cnt_today_apply
			,SUM( CASE WHEN TO_CHAR(AI.DT_FRT,'yyyyMM') = TO_CHAR(SYSDATE,'yyyyMM') AND AI.cd_apply_doc_box <![CDATA[>=]]> 01 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  ) AS cnt_thatMonth_apply
			,SUM( CASE WHEN TO_CHAR(AI.DT_FRT,'yyyyMM') = TO_CHAR(ADD_MONTHS(SYSDATE,-1),'yyyyMM') AND AI.cd_apply_doc_box <![CDATA[>=]]> 01 AND AI.cd_apply_doc_box <![CDATA[<]]> 90 THEN 1 ELSE 0 END  ) AS cnt_lastMonth_apply

			,SUM( CASE WHEN AI.YMD_APPROVAL = TO_CHAR(SYSDATE-1,'yyyyMMdd') AND AI.cd_apply_doc_box = 50 THEN 1 ELSE 0 END  ) AS cnt_yesterday_approval
			,SUM( CASE WHEN AI.YMD_APPROVAL = TO_CHAR(SYSDATE,'yyyyMMdd') AND AI.cd_apply_doc_box = 50 THEN 1 ELSE 0 END  ) AS cnt_today_approval
			,SUM( CASE WHEN TO_CHAR(TO_DATE(AI.YMD_APPROVAL, 'yyyyMMdd'),'yyyyMM') = TO_CHAR(SYSDATE,'yyyyMM') AND AI.cd_apply_doc_box = 50 THEN 1 ELSE 0 END  ) AS cnt_thatMonth_approval
			,SUM( CASE WHEN TO_CHAR(TO_DATE(AI.YMD_APPROVAL, 'yyyyMMdd'),'yyyyMM') = TO_CHAR(add_months(sysdate,-1),'yyyyMM') AND AI.cd_apply_doc_box = 50 THEN 1 ELSE 0 END  ) AS cnt_lastMonth_approval

			,SUM( CASE WHEN AI.YMD_APPROVAL = TO_CHAR(SYSDATE-1,'yyyyMMdd') AND AI.cd_apply_doc_box = 50 THEN TO_NUMBER(NVL(AI.amt_approval,0)) ELSE 0 END  ) AS sum_yesterday_approval
			,SUM( CASE WHEN AI.YMD_APPROVAL = TO_CHAR(SYSDATE,'yyyyMMdd') AND AI.cd_apply_doc_box = 50 THEN TO_NUMBER(NVL(AI.amt_approval,0)) ELSE 0 END  ) AS sum_today_approval
			,SUM( CASE WHEN TO_CHAR(TO_DATE(AI.YMD_APPROVAL, 'yyyyMMdd'),'yyyyMM') = TO_CHAR(SYSDATE,'yyyyMM') AND AI.cd_apply_doc_box = 50 THEN TO_NUMBER(NVL(AI.amt_approval,0)) ELSE 0 END  ) AS sum_thatMonth_approval
			,SUM( CASE WHEN TO_CHAR(TO_DATE(AI.YMD_APPROVAL, 'yyyyMMdd'),'yyyyMM') = TO_CHAR(add_months(sysdate,-1),'yyyyMM') AND AI.cd_apply_doc_box = 50 THEN TO_NUMBER(NVL(AI.amt_approval,0)) ELSE 0 END  ) AS sum_lastMonth_approval
		FROM apply_info AI
		INNER JOIN prepare_info PR ON PR.no_prepare = AI.no_prepare
		INNER JOIN agency_person_info PE ON PE.no_person = PR.no_agency_person
		<where>
		 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
		 	AND PR.id_prepare = #{id_prepare}
		 </if>
		 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency)'>
		 	AND PR.id_agency = #{id_agency}
		 </if>
		 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency_user)'>
		 	AND PR.id_agency_user = #{id_agency_user}
		 </if>
		</where>
	</select>

	<update id="procApplyPath" parameterType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.procApplyPath : */
		UPDATE apply_info
		   SET	etc_apply_path = #{etc_apply_path, jdbcType=VARCHAR}
		   	  , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_apply = #{no_apply}
	</update>

	<select id="getCntApplyTodayByInfo"  parameterType="com.koscom.apply.model.ApplyVO" resultType="int">
		/* com.koscom.apply.dao.ApplyMapper.getCntApplyTodayByInfo : */
		SELECT COUNT(*) FROM apply_info AI
			INNER JOIN person_info PI ON AI.no_person=PI.no_person
			INNER JOIN prepare_info PR ON AI.no_prepare=PR.no_prepare
		WHERE PI.nm_person = #{nm_person, jdbcType=VARCHAR}
			AND PI.hp = #{hp, jdbcType=VARCHAR}
			AND AI.cd_goods=#{cd_goods, jdbcType=VARCHAR} AND PR.id_agency=#{id_agency, jdbcType=VARCHAR}
			AND PR.cd_prepare_doc_box <![CDATA[<]]> 99
			AND TO_CHAR(AI.dt_frt,'yyyyMMdd')=TO_CHAR(SYSDATE,'yyyyMMdd')
	</select>

	<select id="getCntApplySummary"  parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.getCntApplySummary : */
		SELECT
			SUM((CASE WHEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -1),'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_apply AND TO_CHAR(last_day(ADD_MONTHS(SYSDATE, -1)),'YYYYMMDD') <![CDATA[>=]]> ymd_apply THEN 1 ELSE 0 END)) AS cnt_last_month_apply,
			SUM((CASE WHEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -1),'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_apply AND TO_CHAR(last_day(ADD_MONTHS(SYSDATE, -1)),'YYYYMMDD') <![CDATA[>=]]> ymd_apply THEN TO_NUMBER(amt_apply) ELSE 0 END)) AS amt_last_month_apply,
			SUM((CASE WHEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -1),'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_approval AND TO_CHAR(last_day(ADD_MONTHS(SYSDATE, -1)),'YYYYMMDD') <![CDATA[>=]]> ymd_approval AND cd_apply_doc_box ='50' AND amt_approval > 0 THEN 1 ELSE 0 END)) AS cnt_last_month_approval,
			SUM((CASE WHEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -1),'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_approval AND TO_CHAR(last_day(ADD_MONTHS(SYSDATE, -1)),'YYYYMMDD') <![CDATA[>=]]> ymd_approval AND cd_apply_doc_box ='50' AND amt_approval > 0 THEN TO_NUMBER(amt_approval) ELSE 0 END)) AS amt_last_month_approval,

			SUM((CASE WHEN TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_apply AND TO_CHAR(last_day(SYSDATE),'YYYYMMDD') <![CDATA[>=]]> ymd_apply THEN 1 ELSE 0 END)) AS cnt_month_apply,
			SUM((CASE WHEN TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_apply AND TO_CHAR(last_day(SYSDATE),'YYYYMMDD') <![CDATA[>=]]> ymd_apply THEN TO_NUMBER(amt_apply) ELSE 0 END)) AS amt_month_apply,
			SUM((CASE WHEN TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_approval AND TO_CHAR(last_day(SYSDATE),'YYYYMMDD') <![CDATA[>=]]> ymd_approval AND cd_apply_doc_box ='50' AND amt_approval > 0 THEN 1 ELSE 0 END)) AS cnt_month_approval,
			SUM((CASE WHEN TO_CHAR(TRUNC(SYSDATE,'MM'),'YYYYMMDD') <![CDATA[<=]]> ymd_approval AND TO_CHAR(last_day(SYSDATE),'YYYYMMDD') <![CDATA[>=]]> ymd_approval AND cd_apply_doc_box ='50' AND amt_approval > 0 THEN TO_NUMBER(amt_approval) ELSE 0 END)) AS amt_month_approval
		FROM apply_info
	</select>

	<!-- namik ADD start -->
	<select id="listPastInfoPg" parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listPastInfoPg : */
	   SELECT
	        	 NO_APPLY
	        	,NO_PREPARE
	        	,NO_PERSON
	        	,CD_APPLY_DOC_BOX
	        	,CD_FC
	        	,CD_GOODS
	        	,AMT_APPLY
	        	,YMD_APPLY
	        	,AMT_APPROVAL
	        	,YMD_APPROVAL
	        	,YMD_LST_COMP
	        	,HIS_LST_COMP
	        	,MEMO_FROM_APPLY
	        	,ID_FRT
	        	,DT_FRT
	        	,ID_LST
	        	,DT_LST
	        	,ID_PREPARE
	        	,CD_ADVERTISEMENT
	        	,CD_GOODS_TYPE
	        	,NM_PERSON
	        	,BGN
	        	,HP
	        	,RNUM
	    FROM
	        (SELECT
	            	 LST.NO_APPLY
	            	,LST.NO_PREPARE
	            	,LST.NO_PERSON
	            	,LST.CD_APPLY_DOC_BOX
	            	,LST.CD_FC
	            	,LST.CD_GOODS
	            	,LST.AMT_APPLY
	            	,LST.YMD_APPLY
	            	,LST.AMT_APPROVAL
	            	,LST.YMD_APPROVAL
	            	,LST.YMD_LST_COMP
	            	,LST.HIS_LST_COMP
	            	,LST.MEMO_FROM_APPLY
	            	,LST.ID_FRT
	            	,LST.DT_FRT
	            	,LST.ID_LST
	            	,LST.DT_LST
	            	,LST.ID_PREPARE
	            	,LST.CD_ADVERTISEMENT
	            	,LST.CD_GOODS_TYPE
	            	,LST.NM_PERSON
	            	,LST.BGN
	            	,LST.HP
	            	,ROWNUM RNUM
	         FROM
	            (SELECT
	                  AP.no_apply
					, AP.no_prepare
					, AP.no_person
					, AP.cd_apply_doc_box
					, AP.cd_fc
					, AP.cd_goods
					, AP.amt_apply
					, AP.ymd_apply
					, AP.amt_approval
					, AP.ymd_approval
					, AP.ymd_lst_comp
					, AP.his_lst_comp
					, AP.memo_from_apply
					, AP.id_frt
					, AP.dt_frt
					, AP.id_lst
					, AP.dt_lst
				 	, PR.id_prepare
					, PR.cd_advertisement
					, PR.cd_goods_type
					, PE.nm_person
					, PE.bgn
					, PE.hp
	             FROM apply_info AP
				 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
				 INNER JOIN person_info PE ON PE.no_person = PR.no_person
				 INNER JOIN GOODS_INFO A ON A.CD_GOODS = AP.CD_GOODS AND A.cd_fc = AP.cd_fc
				 <include refid="listPastInfoPg_WHERE"/>
				 ORDER BY NVL(AP.dt_frt, AP.dt_lst) DESC
	             ) LST
	        WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
	        )
	    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>
	<sql id="listPastInfoPg_WHERE">
		<where>
			<!-- 문서함구분 승인 50, 거절 60, 보류 70 -->
			1=1
			<!-- 상세검색 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)">
                <if test='"AP.no_person".equals(sel_detail)'>AND AP.no_person LIKE '%'||#{txt_detail}||'%'</if>
			</if>

			<!-- 일자구분 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_dt_kind)">
				<choose>
					<when test="@com.koscom.util.MybatisUtil@contains('dt_',sel_dt_kind)">
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
                            <if test='"DT_FRT".equals(sel_dt_kind)'>AND TO_CHAR(DT_FRT,'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}</if>
						</if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
                            <if test='"DT_FRT".equals(sel_dt_kind)'>AND TO_CHAR(DT_FRT,'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}</if>
						</if>
					</when>
					<otherwise>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
                            <if test='"DT_FRT".equals(sel_dt_kind)'>AND DT_FRT <![CDATA[>=]]> #{txt_dt_from}</if>
						</if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
                            <if test='"DT_FRT".equals(sel_dt_kind)'>AND DT_FRT <![CDATA[<=]]> #{txt_dt_from}</if>
						</if>
					</otherwise>
				</choose>
			</if>

			<!-- 기표값 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_doc_box1) and @com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_doc_box2) and @com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_doc_box3)">
				AND AP.cd_apply_doc_box IN (#{cd_apply_doc_box1, jdbcType=VARCHAR}, #{cd_apply_doc_box2, jdbcType=VARCHAR}, #{cd_apply_doc_box3, jdbcType=VARCHAR})
			</if>

			<!-- 광고매체 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_advertisement)'>
				AND PR.cd_advertisement = #{cd_advertisement}
			</if>

			<!-- 상품명 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods)'>
				AND AP.cd_goods = #{cd_goods}
			</if>

			<!-- 상품구분 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods_type)'>
				AND PR.cd_goods_type = #{cd_goods_type}
			</if>

			<!-- 금융사 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_fc)'>
				AND AP.cd_fc = #{cd_fc}
			</if>

			<!-- 담당자 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
				AND PR.id_prepare = #{id_prepare}
			</if>

			<!-- 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare_srch)'>
				AND PR.id_prepare = #{id_prepare_srch}
			</if>

			<!-- 매체사별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency)'>
				AND PR.id_agency = #{id_agency}
			</if>

			<!-- 대리점 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency_user)'>
				AND PR.id_agency_user = #{id_agency_user}
			</if>

			<!-- 대리점 유입경로별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_agency_path)'>
				AND PR.cd_agency_path = #{cd_agency_path}
			</if>

		</where>
	</sql>
	<select id="listPastPgCount"  parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.listPastPgCount : */
		SELECT
               COUNT(*) AS recordCount, SUM(TO_NUMBER(NVL(AP.amt_approval,0))) AS amtTotAppr, SUM(TO_NUMBER(NVL(AP.amt_apply,0))) AS amtTotApply
            FROM apply_info AP
		 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		 INNER JOIN person_info PE ON PE.no_person = PR.no_person
		 INNER JOIN GOODS_INFO A ON A.CD_GOODS = AP.CD_GOODS AND A.cd_fc = AP.cd_fc
		 <include refid="listPastInfoPg_WHERE"/>
	</select>

	<select id="listLookupInfoPg" parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listLookupInfoPg : */
		SELECT
			ROWNUM
			, NO_BUNCH
			, NO_PERSON
			, MIN_DT_FRT
			, CD_FC
			, CD_GOODS
			, NO_FC_REQ
			, ALL_YEAR_TERM
			, ALL_RTO_LOAN
			, ALL_AMT_LIMIT
		FROM (
			SELECT NO_BUNCH,NO_PERSON,CD_FC,CD_GOODS,NO_FC_REQ
			, MIN(TO_CHAR(DT_FRT, 'YYYY-MM-DD HH24:MI:SS')) MIN_DT_FRT
			, MIN(YEAR_TERM) || '~' || MAX(YEAR_TERM) ALL_YEAR_TERM
			, MIN(RTO_LOAN) || '~' || MAX(RTO_LOAN) ALL_RTO_LOAN
			, MIN(AMT_LIMIT) || '~' || MAX(AMT_LIMIT) ALL_AMT_LIMIT
			FROM TX_FC_RECEIVE
			WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			GROUP BY NO_BUNCH,NO_PERSON, CD_FC,CD_GOODS,NO_FC_REQ
			ORDER BY NO_BUNCH DESC,NO_PERSON, CD_FC,CD_GOODS,NO_FC_REQ
		)
		WHERE ROWNUM <![CDATA[<=]]> 20
	</select>

	<select id="listLookupPgCount"  parameterType="com.koscom.apply.model.ApplyForm" resultType="int">
		/* com.koscom.apply.dao.ApplyMapper.listLookupPgCount : */
		SELECT
               COUNT(*) AS recordCount,
            FROM tx_fc_receive
        where no_person = #{no_person, jdbcType=VARCHAR}
	</select>


	<!-- namik ADD end -->
	<select id="listStatusInfo" parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listStatusInfo : */
		SELECT
			  AP.no_apply
			, AP.no_prepare
			, AP.no_person
			, AP.cd_apply_doc_box
			, AP.cd_fc
			, AP.cd_goods
			, AP.amt_apply
			, AP.ymd_apply
			, AP.amt_approval
			, AP.ymd_approval
			, AP.ymd_lst_comp
			, AP.his_lst_comp
			, AP.memo_from_apply
			, AP.id_frt
			, AP.dt_frt
			, AP.id_lst
			, AP.dt_lst
			, AP.year_term
			, AP.rto_loan
			, PR.id_prepare
			, PR.cd_advertisement
			, PR.cd_goods_type
			, PE.nm_person
			, PE.bgn
			, PE.hp
			, A.CD_GOODS
			, A.CD_FC
			, A.NM_GOODS
			, A.YN_USE
			, A.CD_GOODS_CLASS_L
			, A.CD_GOODS_CLASS_M
			, A.CD_GOODS_CLASS_S
			, A.CD_GOODS_TYPE
			, A.CD_LOAN_TERM
			, A.CD_TYPE_INTEREST
			, A.RTO_INTEREST_FROM
			, A.RTO_INTEREST_TO
			, A.AMT_LIMIT
			, A.CD_TYPE_PAY
			, A.CD_EVENT
			, A.YN_ONLINE
			, A.YN_PROC_NOPAPERS
			, A.DESC_TRADE_CLAUSE
			, A.DESC_GOODS
			, A.DESC_LOAN
			, A.DESC_LIMIT
			, A.DESC_PAYMETHOD
			, A.DESC_PAPERS
			, A.AGE_LOAN_FROM
			, A.AGE_LOAN_TO
			, A.AMT_APPLY_FROM
			, A.AMT_APPLY_TO
			, A.NO_MONTH_APPLY_FROM
			, A.NO_MONTH_APPLY_TO
			, A.CD_TYPE_INCOME
			, A.CD_EMPLOY_TYPE
			, A.CD_LOAN_USE
			, A.AMT_YEAR_INCOME
			, A.OU_YEAR_INCOME
			, A.AMT_YEAR_SALE
			, A.OU_SALE_INCOME
			, A.YMD_START_COMP
			, A.NO_JOB_YEAR
			, A.CD_LIVE_TYPE
			, A.CD_HOUSE_TYPE
			, A.YN_PROOF_INCOME
			, A.YN_4INSU
			, A.YN_BAD_CREDIT
			, A.YN_DELAY_CURRENT
			, A.DAY_DELAY_6MONTH
			, A.DAY_DELAY_12MONTH
			, A.GRADE_KCB
			, A.GRADE_NICE
			, A.DTI_GRADE1
			, A.DTI_GRADE2
			, A.DTI_GRADE3
			, A.DTI_GRADE4
			, A.DTI_GRADE5
			, A.DTI_GRADE6
			, A.DTI_GRADE7
			, A.DTI_GRADE8
			, A.DTI_GRADE9
			, A.DTI_GRADE10
			, A.CHK_AGE_LOAN
			, A.CHK_AMT_APPLY
			, A.CHK_NO_MONTH_APPLY
			, A.CHK_CD_TYPE_INCOME
			, A.CHK_CD_EMPLOY_TYPE
			, A.CHK_CD_LOAN_USE
			, A.CHK_AMT_YEAR_INCOME
			, A.CHK_AMT_YEAR_SALE
			, A.CHK_YMD_START_COMP
			, A.CHK_NO_JOB_YEAR
			, A.CHK_CD_LIVE_TYPE
			, A.CHK_CD_HOUSE_TYPE
			, A.CHK_YN_PROOF_INCOME
			, A.CHK_YN_4INSU
			, A.CHK_YN_BAD_CREDIT
			, A.CHK_YN_DELAY_CURRENT
			, A.CHK_DAY_DELAY_6MONTH
			, A.CHK_DAY_DELAY_12MONTH
			, A.CHK_GRADE_KCB
			, A.CHK_GRADE_NICE
			, A.CHK_DTI_GRADE
			, A.CHK_GRADE_LTV
			, A.CHK_GRADE_DTI
			, A.GRADE_LTV
			, A.GRADE_DTI
			, A.CD_SEX
			, A.CD_OWNCAR_TYPE
			, A.CD_CAR_TYPE
			, A.CNT_CASH_SERVICE
			, A.AMT_CASH_SERVICE
			, A.AMT_CARPRICE_FROM
			, A.AMT_CARPRICE_TO
			, A.NO_CARYEAR_FROM
			, A.NO_CARYEAR_TO
			, A.CHK_CD_SEX
			, A.CHK_CASH_SERVICE
			, A.CHK_CD_OWNCAR_TYPE
			, A.CHK_CD_CAR_TYPE
			, A.CHK_AMT_CARPRICE
			, A.CHK_NO_CARYEAR
			, A.DESC_REPAYMETHOD
			, A.DESC_COMMISSION
			, A.DESC_INQUIRY
			, A.CONTENT_INTEREST
			, A.PREFER_INTEREST
			, A.CD_APPLY_TYPE
			, A.CD_TRADE_TYPE
			, A.CD_TIME_EXEC
			, A.YN_SEND_DOCU
			, A.YN_VISIT
			, A.YN_ERLY_RPAY_FEE
			, A.YN_SRCH_RATIO_LIMIT
			, A.CD_RATIO_TYPE
			, A.CD_CATEGORY_GOODS
			, A.CD_AREA
			, A.CD_DEFER
			, A.CD_OBJECT
			, A.YN_POST_RANKING
			, A.CD_COLLATERAL_HOUSE_TYPE
			, A.CD_COLLATERAL_LOAN_USE
			, A.DESC_FEATURE
		 FROM apply_info AP
		 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		 INNER JOIN person_info PE ON PE.no_person = PR.no_person
		 INNER JOIN GOODS_INFO A ON A.CD_GOODS = AP.CD_GOODS AND A.cd_fc = AP.cd_fc
		 <include refid="listStatusInfo_WHERE"/>
		 ORDER BY NVL(AP.dt_frt, AP.dt_lst) DESC
	</select>
	<select id="listStatusInfoPg" parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
	   /* com.koscom.apply.dao.ApplyMapper.listStatusInfoPg : */
	   SELECT
	        *
	    FROM
	        (SELECT
	            LST.*,
	            ROWNUM RNUM
	         FROM
	            (
	            SELECT
	                  AP.no_apply
					, AP.no_prepare
					, AP.no_person
					, AP.cd_apply_doc_box
					, AP.cd_fc
					, AP.cd_goods
					, AP.amt_apply
					, AP.ymd_apply
					, AP.amt_approval
					, AP.ymd_approval
					, AP.ymd_lst_comp
					, AP.his_lst_comp
					, AP.memo_from_apply
					, AP.id_frt
					, AP.dt_frt
					, AP.id_lst
					, AP.dt_lst
					, AP.year_term
					, AP.rto_loan
					, PR.id_prepare
					, PR.cd_advertisement
					, PR.cd_goods_type
					, PE.nm_person
					, PE.bgn
					, PE.hp
					, A.*
				 FROM apply_info AP
				 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
				 INNER JOIN person_info PE ON PE.no_person = PR.no_person
				 INNER JOIN GOODS_INFO A ON A.CD_GOODS = AP.CD_GOODS AND A.cd_fc = AP.cd_fc
				 <include refid="listStatusInfo_WHERE"/>
				 ORDER BY NVL(AP.dt_frt, AP.dt_lst) DESC
	             ) LST
	        WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
	        )
	    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>
	<sql id="listStatusInfo_WHERE">
		<where>
			<!-- 한달이내것만 -->
			TO_CHAR(AP.dt_frt,'yyyyMMdd') BETWEEN (SELECT TO_CHAR(ADD_MONTHS(SYSDATE,-6), 'yyyyMMdd') FROM DUAL) AND TO_CHAR(SYSDATE, 'yyyyMMdd')
			<!-- 문서함구분 승인  * 0 00 가접수	 * 0 01 접수대기	   1 10 접수       2 20 심사       4 40 가승인       5 50 승인-->
			<choose>
				<when test="@com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_doc_box)">
					AND AP.cd_apply_doc_box = #{cd_apply_doc_box}
				</when>
				<otherwise>
					AND AP.cd_apply_doc_box <![CDATA[<=]]> 40
				</otherwise>
			</choose>
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_doc_box)">
			</if>
			<!-- 상세검색 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)">
                <if test='"AP.no_person" .equals(sel_detail)'>AND AP.no_person LIKE '%'||#{txt_detail}||'%'</if>
			</if>
			<!-- 일자구분 -->
            <if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_dt_kind)">
                <choose>
                    <when test="@com.koscom.util.MybatisUtil@contains('dt_',sel_dt_kind)">
                        <if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
                            <if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_frt      ),'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_lst      ),'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND TO_CHAR(AP.ymd_approval),'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}</if>
                        </if>
                        <if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
                            <if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_frt      ),'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND TO_CHAR(AP.dt_lst      ),'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND TO_CHAR(AP.ymd_approval),'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}</if>
                        </if>
                    </when>
                    <otherwise>
                        <if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
                            <if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND AP.dt_frt       <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND AP.dt_lst       <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND AP.ymd_approval <![CDATA[>=]]> #{txt_dt_from}</if>
                        </if>
                        <if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
                            <if test='"AP.dt_frt"      .equals(sel_dt_kind)'>AND AP.dt_frt       <![CDATA[>=]]> #{txt_dt_to}</if>
                            <if test='"AP.dt_lst"      .equals(sel_dt_kind)'>AND AP.dt_lst       <![CDATA[>=]]> #{txt_dt_to}</if>
                            <if test='"AP.ymd_approval".equals(sel_dt_kind)'>AND AP.ymd_approval <![CDATA[>=]]> #{txt_dt_to}</if>
                        </if>
                    </otherwise>
                </choose>
            </if>
			<!-- 광고매체 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_advertisement)'>
				AND PR.cd_advertisement = #{cd_advertisement}
			</if>
			<!-- 상품명 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods)'>
				AND AP.cd_goods = #{cd_goods}
			</if>
			<!-- 상품구분 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods_type)'>
				AND PR.cd_goods_type = #{cd_goods_type}
			</if>
			<!-- 금융사 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_fc)'>
				AND AP.cd_fc = #{cd_fc}
			</if>
			<!-- 담당자 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
				AND PR.id_prepare = #{id_prepare}
			</if>
			<!-- 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare_srch)'>
				AND PR.id_prepare = #{id_prepare_srch}
			</if>
			<!-- 매체사별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency)'>
				AND PR.id_agency = #{id_agency}
			</if>
			<!-- 대리점 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency_user)'>
				AND PR.id_agency_user = #{id_agency_user}
			</if>
			<!-- 대리점 유입경로별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_agency_path)'>
				AND PR.cd_agency_path = #{cd_agency_path}
			</if>
		</where>
	</sql>
	<select id="listStatusCount"  parameterType="com.koscom.apply.model.ApplyForm" resultType="hashmap">
		/* com.koscom.apply.dao.ApplyMapper.listStatusCount : */
		SELECT
               COUNT(*) AS recordCount, SUM(TO_NUMBER(NVL(AP.amt_approval,0))) AS amtTotAppr, SUM(TO_NUMBER(NVL(AP.amt_apply,0))) AS amtTotApply
            FROM apply_info AP
		 INNER JOIN prepare_info PR ON PR.no_prepare = AP.no_prepare
		 INNER JOIN person_info PE ON PE.no_person = PR.no_person
		 INNER JOIN GOODS_INFO A ON A.CD_GOODS = AP.CD_GOODS AND A.cd_fc = AP.cd_fc
		 <include refid="listStatusInfo_WHERE"/>
	</select>

	<!-- 최신 1건의 대출신청진행상황 -->
	<select id="getLoanProgSts"  parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.getLoanProgSts : */
		SELECT A.*
		  FROM (
			    SELECT AI.NO_APPLY
			    	 , AI.NO_PREPARE
				     , AI.NO_PERSON
				     , AI.CD_APPLY_DOC_BOX
				     , AI.CD_APPLY_COMP
    			     , AI.CD_GOODS
				     , AI.CD_ADVERTISEMENT
				     , AI.YMD_APPLY
				     , AI.AMT_APPLY
				     , AI.ID_APPLY
				     , AI.ETC_APPLY_PATH
				     , AI.AMT_APPROVAL
				     , AI.YMD_APPROVAL
				     , AI.YMD_LST_COMP
				     , AI.HIS_LST_COMP
				     , AI.NM_WRITER
				     , AI.CD_COLLECT_PATH
				     , AI.CD_CONTACT_PATH
				     , AI.CD_COLLECT_METHOD
				     , AI.ETC_MEMO
				     , AI.NM_AGENCY
				     , AI.NM_CEO_AGENCY
				     , AI.URL_HOMEPAGE_AGENCY
				     , AI.MEMO_TO_APPLY
				     , AI.MEMO_FROM_APPLY
				     , AI.NO_AGENCY_PERSON
				     , AI.DT_AGENCY_FRT
				     , AI.YMD_EARLY_REPAYMENT
				     , AI.YEAR_TERM
				     , AI.RTO_LOAN
				     , AI.CD_FC
				     , AI.NO_BUNCH
					 , AI.ID_FRT
					 , TO_CHAR(AI.DT_FRT, 'YYYYMMDD') AS DT_FRT
 					 , AI.ID_LST
					 , TO_CHAR(AI.DT_LST, 'YYYYMMDD') AS DT_LST
				     , ROW_NUMBER() OVER (PARTITION BY AI.NO_PERSON ORDER BY NVL(AI.DT_FRT, AI.DT_LST) DESC) RN
			      FROM APPLY_INFO AI
			     WHERE AI.NO_PERSON = #{no_person, jdbcType=VARCHAR}
		    ) A
		    WHERE A.RN = 1
	</select>

	<!-- 대출신청진행상황 조회 : apply_doc_box : 50 -->
	<select id="listLoanProgSts"  parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listLoanProgSts*/
		SELECT A.*
		  FROM (
			    SELECT AI.NO_APPLY
			    	 , AI.NO_PREPARE
				     , AI.NO_PERSON
				     , AI.CD_APPLY_DOC_BOX
				     , AI.CD_APPLY_COMP
    			     , AI.CD_GOODS
				     , AI.CD_ADVERTISEMENT
				     , AI.YMD_APPLY
				     , AI.AMT_APPLY
				     , AI.ID_APPLY
				     , AI.ETC_APPLY_PATH
				     , AI.AMT_APPROVAL
				     , AI.YMD_APPROVAL
				     , AI.YMD_LST_COMP
				     , AI.HIS_LST_COMP
				     , AI.NM_WRITER
				     , AI.CD_COLLECT_PATH
				     , AI.CD_CONTACT_PATH
				     , AI.CD_COLLECT_METHOD
				     , AI.ETC_MEMO
				     , AI.NM_AGENCY
				     , AI.NM_CEO_AGENCY
				     , AI.URL_HOMEPAGE_AGENCY
				     , AI.MEMO_TO_APPLY
				     , AI.MEMO_FROM_APPLY
				     , AI.NO_AGENCY_PERSON
				     , AI.DT_AGENCY_FRT
				     , AI.YMD_EARLY_REPAYMENT
				     , AI.YEAR_TERM
				     , AI.RTO_LOAN
				     , AI.CD_FC
				     , AI.NO_BUNCH
					 , AI.ID_FRT
					 , TO_CHAR(AI.DT_FRT, 'YYYYMMDD') AS DT_FRT
 					 , AI.ID_LST
					 , TO_CHAR(AI.DT_LST, 'YYYYMMDD') AS DT_LST
				     , ROW_NUMBER() OVER (PARTITION BY AI.NO_PERSON ORDER BY NVL(AI.DT_FRT, AI.DT_LST) DESC) RN
			      FROM APPLY_INFO AI
			     WHERE AI.NO_PERSON = #{no_person, jdbcType=VARCHAR}
			     <if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_doc_box)'>
					AND AI.cd_apply_doc_box = #{cd_apply_doc_box, jdbcType=VARCHAR}
				</if>
		    ) A
	</select>

	<select id="listPastLoanHistory"  parameterType="com.koscom.apply.model.ApplyForm" resultType="com.koscom.apply.model.ApplyVO">
		/* com.koscom.apply.dao.ApplyMapper.listPastLoanHistory : */
			SELECT NO_APPLY
				  ,NO_PREPARE
				  ,NO_PERSON
				  ,CD_APPLY_DOC_BOX
				  ,CD_APPLY_COMP
				  ,CD_GOODS
				  ,CD_ADVERTISEMENT
				  ,YMD_APPLY
				  ,AMT_APPLY
				  ,ID_APPLY
				  ,ETC_APPLY_PATH
				  ,AMT_APPROVAL
				  ,YMD_APPROVAL
				  ,YMD_LST_COMP
				  ,HIS_LST_COMP
				  ,NM_WRITER
				  ,CD_COLLECT_PATH
				  ,CD_CONTACT_PATH
				  ,CD_COLLECT_METHOD
				  ,ETC_MEMO,NM_AGENCY
				  ,NM_CEO_AGENCY
				  ,URL_HOMEPAGE_AGENCY
				  ,MEMO_TO_APPLY
				  ,MEMO_FROM_APPLY
				  ,NO_AGENCY_PERSON
				  ,DT_AGENCY_FRT
				  ,YMD_EARLY_REPAYMENT
				  ,YEAR_TERM
				  ,RTO_LOAN
				  ,CD_FC
				  ,NO_BUNCH
				  ,DENY_DESC
				  ,NO_FC_REQ
				  ,PATH_FILE1
				  ,NM_GOODS
				  ,CD_LOAN_TERM
				  ,CD_TYPE_PAY
				  ,CD_TYPE_INTEREST
				  ,FC_TELNO
				  ,RN
				  ,RNUM
		      FROM (
		            SELECT LST.NO_APPLY
						  ,LST.NO_PREPARE
						  ,LST.NO_PERSON
						  ,LST.CD_APPLY_DOC_BOX
						  ,LST.CD_APPLY_COMP
						  ,LST.CD_GOODS
						  ,LST.CD_ADVERTISEMENT
						  ,LST.YMD_APPLY
						  ,LST.AMT_APPLY
						  ,LST.ID_APPLY
						  ,LST.ETC_APPLY_PATH
						  ,LST.AMT_APPROVAL
						  ,LST.YMD_APPROVAL
						  ,LST.YMD_LST_COMP
						  ,LST.HIS_LST_COMP
						  ,LST.NM_WRITER
						  ,LST.CD_COLLECT_PATH
						  ,LST.CD_CONTACT_PATH
						  ,LST.CD_COLLECT_METHOD
						  ,LST.ETC_MEMO,NM_AGENCY
						  ,LST.NM_CEO_AGENCY
						  ,LST.URL_HOMEPAGE_AGENCY
						  ,LST.MEMO_TO_APPLY
						  ,LST.MEMO_FROM_APPLY
						  ,LST.NO_AGENCY_PERSON
						  ,LST.DT_AGENCY_FRT
						  ,LST.YMD_EARLY_REPAYMENT
						  ,LST.YEAR_TERM
						  ,LST.RTO_LOAN
						  ,LST.CD_FC
						  ,LST.NO_BUNCH
						  ,LST.DENY_DESC
						  ,LST.NO_FC_REQ
						  ,LST.PATH_FILE1
						  ,LST.NM_GOODS
						  ,LST.CD_LOAN_TERM
						  ,LST.CD_TYPE_PAY
						  ,LST.CD_TYPE_INTEREST
						  ,LST.FC_TELNO
						  ,LST.RN
		                 , ROWNUM RNUM
		              FROM (
		                    SELECT A.NO_APPLY
								  ,A.NO_PREPARE
								  ,A.NO_PERSON
								  ,A.CD_APPLY_DOC_BOX
								  ,A.CD_APPLY_COMP
								  ,A.CD_GOODS
								  ,A.CD_ADVERTISEMENT
								  ,A.YMD_APPLY
								  ,A.AMT_APPLY
								  ,A.ID_APPLY
								  ,A.ETC_APPLY_PATH
								  ,A.AMT_APPROVAL
								  ,A.YMD_APPROVAL
								  ,A.YMD_LST_COMP
								  ,A.HIS_LST_COMP
								  ,A.NM_WRITER
								  ,A.CD_COLLECT_PATH
								  ,A.CD_CONTACT_PATH
								  ,A.CD_COLLECT_METHOD
								  ,A.ETC_MEMO,NM_AGENCY
								  ,A.NM_CEO_AGENCY
								  ,A.URL_HOMEPAGE_AGENCY
								  ,A.MEMO_TO_APPLY
								  ,A.MEMO_FROM_APPLY
								  ,A.NO_AGENCY_PERSON
								  ,A.DT_AGENCY_FRT
								  ,A.YMD_EARLY_REPAYMENT
								  ,A.YEAR_TERM
								  ,A.RTO_LOAN
								  ,A.CD_FC
								  ,A.NO_BUNCH
								  ,A.DENY_DESC
								  ,A.NO_FC_REQ
								  ,A.PATH_FILE1
								  ,A.NM_GOODS
								  ,A.CD_LOAN_TERM
								  ,A.CD_TYPE_PAY
								  ,A.CD_TYPE_INTEREST
								  ,A.FC_TELNO
								  ,A.RN
		                      FROM (
		                            SELECT AI.NO_APPLY
		                                 , AI.NO_PREPARE
		                                 , AI.NO_PERSON
		                                 , AI.CD_APPLY_DOC_BOX
		                                 , AI.CD_APPLY_COMP
		                                 , AI.CD_GOODS
		                                 , AI.CD_ADVERTISEMENT
		                                 , AI.YMD_APPLY
		                                 , AI.AMT_APPLY
		                                 , AI.ID_APPLY
		                                 , AI.ETC_APPLY_PATH
		                                 , AI.AMT_APPROVAL
		                                 , AI.YMD_APPROVAL
		                                 , AI.YMD_LST_COMP
		                                 , AI.HIS_LST_COMP
		                                 , AI.NM_WRITER
		                                 , AI.CD_COLLECT_PATH
		                                 , AI.CD_CONTACT_PATH
		                                 , AI.CD_COLLECT_METHOD
		                                 , AI.ETC_MEMO
		                                 , AI.NM_AGENCY
		                                 , AI.NM_CEO_AGENCY
		                                 , AI.URL_HOMEPAGE_AGENCY
		                                 , AI.MEMO_TO_APPLY
		                                 , AI.MEMO_FROM_APPLY
		                                 , AI.NO_AGENCY_PERSON
		                                 , AI.DT_AGENCY_FRT
		                                 , AI.YMD_EARLY_REPAYMENT
		                                 , TFR.YEAR_TERM --, AI.YEAR_TERM
		                                 , TFR.RTO_LOAN --, AI.RTO_LOAN
		                                 , AI.CD_FC
		                                 , AI.NO_BUNCH
		                                 , AI.ID_FRT
		                                 , TO_CHAR(AI.DT_FRT, 'YYYYMMDD') AS DT_FRT
		                                 , AI.ID_LST
		                                 , TO_CHAR(AI.DT_LST, 'YYYYMMDD') AS DT_LST
										 , DI.DENY_DESC
										 , TFR.NO_FC_REQ
										 , FI.PATH_FILE AS PATH_FILE1
										 , GI.NM_GOODS
										 , GI.CD_LOAN_TERM
										 , GI.CD_TYPE_PAY
										 , GI.CD_TYPE_INTEREST
										 , FI.TEL AS FC_TELNO
		                                 , ROW_NUMBER() OVER (PARTITION BY AI.NO_PERSON ORDER BY NVL(AI.DT_FRT, AI.DT_LST) DESC) RN
		                              FROM APPLY_INFO AI LEFT OUTER JOIN TX_FC_RECEIVE TFR ON AI.NO_BUNCH = TFR.NO_BUNCH AND AI.CD_GOODS = TFR.CD_GOODS AND AI.CD_FC = TFR.CD_FC
									                     LEFT OUTER JOIN DENY_INFO DI ON DI.NO_PERSON = AI.NO_PERSON AND DI.NO_PREPARE = AI.NO_PREPARE AND DI.CD_FC = AI.CD_FC AND DI.CD_GOODS = AI.CD_GOODS AND AI.CD_APPLY_DOC_BOX = '70'
									                     LEFT OUTER JOIN FC_INFO FI ON FI.CD_FC = AI.CD_FC
									                     LEFT OUTER JOIN GOODS_INFO GI ON GI.CD_FC = AI.CD_FC AND GI.CD_GOODS = AI.CD_GOODS
		                             WHERE AI.NO_PERSON = #{no_person, jdbcType=VARCHAR}
		                             ORDER BY TFR.NO_FC_REQ DESC
		                           ) A
		                   ) LST
		             WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
		        )
		    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>

	<select id="listPastLoanHistoryCount"  parameterType="com.koscom.apply.model.ApplyForm" resultType="int">
		/* com.koscom.apply.dao.ApplyMapper.listPastLoanHistoryCount : */
		SELECT COUNT(*) AS recordCount, SUM(TO_NUMBER(NVL(A.amt_approval,0))) AS amtTotAppr, SUM(TO_NUMBER(NVL(A.amt_apply,0))) AS amtTotApply
		  FROM (
			    SELECT AI.NO_APPLY
			         , AI.NO_PREPARE
			         , AI.NO_PERSON
			         , AI.CD_APPLY_DOC_BOX
			         , AI.CD_APPLY_COMP
    			     , AI.CD_GOODS
				     , AI.CD_ADVERTISEMENT
				     , AI.YMD_APPLY
				     , AI.AMT_APPLY
				     , AI.ID_APPLY
				     , AI.ETC_APPLY_PATH
				     , AI.AMT_APPROVAL
				     , AI.YMD_APPROVAL
                	 , AI.YMD_LST_COMP
				     , AI.HIS_LST_COMP
				     , AI.NM_WRITER
				     , AI.CD_COLLECT_PATH
				     , AI.CD_CONTACT_PATH
				     , AI.CD_COLLECT_METHOD
				     , AI.ETC_MEMO
				     , AI.NM_AGENCY
				     , AI.NM_CEO_AGENCY
				     , AI.URL_HOMEPAGE_AGENCY
				     , AI.MEMO_TO_APPLY
				     , AI.MEMO_FROM_APPLY
				     , AI.NO_AGENCY_PERSON
				     , AI.DT_AGENCY_FRT
				     , AI.YMD_EARLY_REPAYMENT
				     , AI.YEAR_TERM
				     , AI.RTO_LOAN
				     , AI.CD_FC
				     , AI.NO_BUNCH
 					 , AI.ID_FRT
					 , TO_CHAR(AI.DT_FRT, 'YYYYMMDD') AS DT_FRT
 					 , AI.ID_LST
					 , TO_CHAR(AI.DT_LST, 'YYYYMMDD') AS DT_LST
				     , ROW_NUMBER() OVER (PARTITION BY AI.NO_PERSON ORDER BY NVL(AI.DT_FRT, AI.DT_LST) DESC) RN
			      FROM APPLY_INFO AI
			     WHERE AI.NO_PERSON = #{no_person, jdbcType=VARCHAR}
		        ) A
	</select>
	
	
	<select id="ListApplyResult" parameterType="com.koscom.apply.model.ApplyResultForm" resultType="com.koscom.apply.model.ApplyResultVO">
		/* com.koscom.apply.dao.ApplyMapper.ListApplyResult : */
		SELECT
				LST.RNUM					/* 순번 */
				, LST.CD_FC					/* 금융기관코드 */
				, LST.CD_GOODS				/* 상품코드 */
				, LST.NM_GOODS				/* 상품명 */
				, LST.NO_BUNCH				/* TX_FC_RECEIVE 순번 */
				, LST.DT_RECEIVE			/* 전문수신시간 */
				, LST.NM_PERSON				/* 회원명 */
				, LST.RTO_LOAN				/* 예상금리 */
				, LST.AMT_LIMIT				/* 대출가능한도금액 */
				, LST.YN_LOAN				/* 대출가능여부 */
				, LST.CD_APPLY_DOC_BOX		/* 기표값 */
				, LST.NO_APPLY				/* 접수번호 */
				, LST.APPLY_CNT				/* 유무 확인 */
				, LST.YN_RECEIVE			
				FROM 
				(SELECT 
						ROWNUM AS RNUM
						, TFR.CD_FC
						, TFR.CD_GOODS
						, TFR.NM_GOODS
						, TFR.NO_BUNCH
						, TFR.DT_RECEIVE
						, TFR.NM_PERSON
						, TFR.RTO_LOAN
						, TFR.AMT_LIMIT
						, TFR.YN_LOAN
						, TFR.CD_APPLY_DOC_BOX
						, TFR.NO_APPLY
						, TFR.APPLY_CNT
						, TFR.YN_RECEIVE
						FROM
						(SELECT 
								TFR.CD_FC
								,AI.CD_GOODS
								,(SELECT NM_GOODS FROM GOODS_INFO WHERE CD_GOODS = AI.CD_GOODS) AS NM_GOODS
								,TFR.NO_BUNCH
								,TFR.DT_RECEIVE
							    ,(SELECT NM_PERSON FROM PERSON_INFO WHERE NO_PERSON = TFR.NO_PERSON) AS NM_PERSON
							    ,TFR.RTO_LOAN
							    ,(TFR.AMT_LIMIT/10000) AS  AMT_LIMIT
							    ,TFR.YN_LOAN
							    ,AI.CD_APPLY_DOC_BOX
							    ,AI.NO_APPLY
							    ,( SELECT COUNT(AI.NO_BUNCH)
							    	  FROM APPLY_INFO AI
							    	  WHERE AI.NO_BUNCH = TFR.NO_BUNCH
						    	  ) AS APPLY_CNT
						    	,TFR.YN_RECEIVE
								FROM
								TX_FC_RECEIVE TFR LEFT OUTER JOIN APPLY_INFO AI ON TFR.NO_BUNCH = AI.NO_BUNCH
								WHERE
								1=1
									<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
										AND TO_CHAR(TFR.DT_LST,'YYYYMMDD')       <![CDATA[<=]]> #{txt_dt_from}
									</if>
									<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
			                            AND TO_CHAR(TFR.DT_FRT,'YYYYMMDD')       <![CDATA[>=]]> #{txt_dt_to}
									</if>
								ORDER BY NO_BUNCH ASC
						) TFR
						WHERE
						1=1
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)">
			                 AND ${sel_detail} LIKE '%'||#{txt_detail, jdbcType=VARCHAR}||'%'
			            </if>
			            <if test="@com.koscom.util.MybatisUtil@isNotEmpty(cd_fc)">
			                AND CD_FC = #{cd_fc, jdbcType=VARCHAR}
			            </if>
				) LST
				WHERE LST.RNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
				AND LST.RNUM <![CDATA[>=]]> #{startPosition, jdbcType=NUMERIC}
	</select>
	
	<select id="ListApplyResultCount" parameterType="com.koscom.apply.model.ApplyResultForm" resultType="int">
		/* com.koscom.apply.dao.ApplyMapper.ListApplyResultCount : */
		SELECT
				COUNT(LST.RNUM)
				FROM 
				(SELECT 
						ROWNUM AS RNUM				/* 순번 */
						, TFR.CD_FC					/* 금융기관코드 */
						, TFR.CD_GOODS				/* 상품코드 */
						, TFR.NO_BUNCH				/* tx 순번 */
						, TFR.DT_RECEIVE			/* 전문수신시간 */
						, TFR.NM_PERSON				/* 회원명 */ 
						, TFR.RTO_LOAN				/* 예상금리 */
						, TFR.AMT_LIMIT				/* 대출가능한도금액 */
						, TFR.YN_LOAN				/* 대출가능여부 */ 
						, TFR.CD_APPLY_DOC_BOX		/* 기표값 */
						, TFR.NO_APPLY				/* 접수번호 */
						FROM
						(SELECT 
								TFR.CD_FC
								,AI.CD_GOODS
								,(SELECT NM_GOODS FROM GOODS_INFO WHERE CD_GOODS = AI.CD_GOODS) AS NM_GOODS
								,TFR.NO_BUNCH
								,TFR.DT_RECEIVE
							    ,(SELECT NM_PERSON FROM PERSON_INFO WHERE NO_PERSON = TFR.NO_PERSON) AS NM_PERSON
							    ,TFR.RTO_LOAN
							    ,(TFR.AMT_LIMIT/10000) AS  AMT_LIMIT
							    ,TFR.YN_LOAN
							    ,AI.CD_APPLY_DOC_BOX
							    ,AI.NO_APPLY
								FROM
								TX_FC_RECEIVE TFR LEFT OUTER JOIN APPLY_INFO AI ON TFR.NO_BUNCH = AI.NO_BUNCH
								ORDER BY NO_BUNCH ASC
						) TFR
						WHERE
						1=1
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)">
			                 AND ${sel_detail} LIKE '%'||#{txt_detail}||'%'
			            </if>
			            <if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_fc)'>
			                AND CD_FC = #{cd_fc, jdbcType=VARCHAR}
			            </if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
							<if test='"TFR.dt_frt"      .equals(sel_dt_kind)'>AND TFR.dt_frt       <![CDATA[>=]]> #{txt_dt_from}</if>
                            <if test='"TFR.dt_lst"      .equals(sel_dt_kind)'>AND TFR.dt_lst       <![CDATA[>=]]> #{txt_dt_from}</if>
						</if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
                            <if test='"TFR.dt_frt"      .equals(sel_dt_kind)'>AND TFR.dt_frt       <![CDATA[>=]]> #{txt_dt_to}</if>
                            <if test='"TFR.dt_lst"      .equals(sel_dt_kind)'>AND TFR.dt_lst       <![CDATA[>=]]> #{txt_dt_to}</if>
						</if>
				) LST
	</select>
	
</mapper>
