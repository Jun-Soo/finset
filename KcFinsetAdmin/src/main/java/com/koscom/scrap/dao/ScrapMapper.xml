<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.scrap.dao.ScrapMapper">

	<insert id="insertScrRsltScrap" parameterType="com.koscom.scrap.model.ScrRsltScrapVO">
		<selectKey keyProperty="seq_scraping_result" resultType="integer" order="BEFORE">
		    SELECT SEQ_SCRAPING_RESULT.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO SCR_RSLT_SCRAP
			(
			  	 NO_PERSON
			  	, SEQ_SCRAPING_RESULT
			  	, CD_SCRAP
				, RSLT_SCRAPING
				, NO_BIZ_COMP
				, DT_FRT
			) VALUES (
				  #{no_person, jdbcType=VARCHAR}
				  , #{seq_scraping_result, jdbcType=NUMERIC}
				  , #{cd_scrap, jdbcType=NUMERIC}
				  , #{rslt_scraping, jdbcType=NUMERIC}
				  , #{no_biz_comp, jdbcType=NUMERIC}
				  , SYSDATE
			)
	</insert>
	
	<update id="updateScrRsltScrap" parameterType="com.koscom.scrap.model.ScrRsltScrapVO">
		UPDATE SCR_RSLT_SCRAP
			SET RSLT_SCRAPING = #{rslt_scraping, jdbcType=VARCHAR}
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND SEQ_SCRAPING_RESULT = #{seq_scraping_result, jdbcType=NUMERIC}
	</update>
	
	<select id="getFcLinkInfo" parameterType="com.koscom.scrap.model.FcLinkInfoVO" resultType="com.koscom.scrap.model.FcLinkInfoVO">
		SELECT NO_PERSON
			, CD_AGENCY
			, CD_FC
			, TYPE_LOGIN
			, CN
			, BIZ_LICENCE
			, CD_LINK_STAT
			, YN_LINK
			, LINK_DATE
		FROM FC_LINK_INFO
		WHERE NO_PERSON = #{NO_PERSON, jdbcType=VARCHAR}
			AND CD_AGENCY= #{CD_AGENCY, jdbcType=VARCHAR} 
			AND YN_LINK = 'Y'
	</select>
	
	
	<select id="getScrReqBank" parameterType="com.koscom.scrap.model.ScrReqBankVO" resultType="com.koscom.scrap.model.ScrReqBankVO">
		SELECT NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_FC
			, CD_ACCOUNT
			, NO_ACCOUNT
			, YMD_STT
			, YMD_END
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		FROM SCR_REQ_BANK
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND CD_FC= #{cd_fc, jdbcType=VARCHAR}
	</select>
	
	<insert id="createScrReqBank" parameterType="com.koscom.scrap.model.ScrReqBankVO">
		MERGE INTO SCR_REQ_BANK
		USING DUAL
		ON ( NO_PERSON		= #{no_person	,jdbcType=VARCHAR}
			AND CD_FC		= #{cd_fc		,jdbcType=VARCHAR} 
			AND CD_ACCOUNT	= #{cd_account	,jdbcType=VARCHAR} 
			AND NO_ACCOUNT	= #{no_account	,jdbcType=VARCHAR} )
		WHEN MATCHED THEN
		UPDATE
		 SET
		  	SEQ_SCRAPING_RESULT	= #{seq_scraping_result	,jdbcType=VARCHAR}
		    ,YMD_STT			= #{ymd_stt				,jdbcType=VARCHAR}
		 	,YMD_END			= #{ymd_end				,jdbcType=VARCHAR}
		 	,ERROR_CD			= #{error_cd			,jdbcType=VARCHAR}
			,ERROR_MSG			= #{error_msg			,jdbcType=VARCHAR}
			,DT_FRT				= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,SEQ_SCRAPING_RESULT
			,CD_FC
			,CD_ACCOUNT
			,NO_ACCOUNT
			,YMD_STT
			,YMD_END
			,ERROR_CD
			,ERROR_MSG
			,DT_FRT
		) VALUES (
			 #{no_person			,jdbcType=VARCHAR}
			,#{seq_scraping_result	,jdbcType=VARCHAR}
			,#{cd_fc				,jdbcType=VARCHAR}
			,#{cd_account			,jdbcType=VARCHAR}
			,#{no_account			,jdbcType=VARCHAR}
			,#{ymd_stt				,jdbcType=VARCHAR}
			,#{ymd_end				,jdbcType=VARCHAR}
			,#{error_cd				,jdbcType=VARCHAR}
			,#{error_msg			,jdbcType=VARCHAR}
			,SYSDATE
		)
	</insert>
	
	<insert id="insertScrReqBankHist" parameterType="com.koscom.scrap.model.ScrReqBankVO">
		INSERT INTO SCR_REQ_BANK_HIST
        (
			 NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_FC
			, CD_ACCOUNT
			, NO_ACCOUNT
			, YMD_STT
			, YMD_END
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		)
		SELECT NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_FC
			, CD_ACCOUNT
			, NO_ACCOUNT
			, YMD_STT
			, YMD_END
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		FROM SCR_REQ_BANK
		WHERE NO_PERSON		= #{no_person	,jdbcType=VARCHAR}
			AND CD_FC		= #{cd_fc		,jdbcType=VARCHAR}
			AND CD_ACCOUNT	= #{cd_account	,jdbcType=VARCHAR}
	</insert>
	
	<select id="getScrReqCard" parameterType="com.koscom.scrap.model.ScrReqCardVO" resultType="com.koscom.scrap.model.ScrReqCardVO">
		SELECT NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_FC
			, YMD_STT
			, YMD_END
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		FROM SCR_REQ_CARD
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND CD_FC= #{cd_fc, jdbcType=VARCHAR}
	</select>
	
	<insert id="createScrReqCard" parameterType="com.koscom.scrap.model.ScrReqCardVO">
		MERGE INTO SCR_REQ_CARD
		USING DUAL
		ON ( NO_PERSON		= #{no_person	,jdbcType=VARCHAR}
			AND CD_FC		= #{cd_fc		,jdbcType=VARCHAR} )
		WHEN MATCHED THEN
		UPDATE
		 SET
		  	SEQ_SCRAPING_RESULT	= #{seq_scraping_result	,jdbcType=VARCHAR}
		    ,YMD_STT			= #{ymd_stt				,jdbcType=VARCHAR}
		 	,YMD_END			= #{ymd_end				,jdbcType=VARCHAR}
		 	,ERROR_CD			= #{error_cd			,jdbcType=VARCHAR}
			,ERROR_MSG			= #{error_msg			,jdbcType=VARCHAR}
			,DT_FRT				= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,SEQ_SCRAPING_RESULT
			,CD_FC
			,YMD_STT
			,YMD_END
			,ERROR_CD
			,ERROR_MSG
			,DT_FRT
		) VALUES (
			 #{no_person			,jdbcType=VARCHAR}
			,#{seq_scraping_result	,jdbcType=VARCHAR}
			,#{cd_fc				,jdbcType=VARCHAR}
			,#{ymd_stt				,jdbcType=VARCHAR}
			,#{ymd_end				,jdbcType=VARCHAR}
			,#{error_cd				,jdbcType=VARCHAR}
			,#{error_msg			,jdbcType=VARCHAR}
			,SYSDATE
		)
	</insert>
	
	<insert id="insertScrReqCardHist" parameterType="com.koscom.scrap.model.ScrReqCardVO">
		INSERT INTO SCR_REQ_CARD_HIST
        (
			 NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_FC
			, YMD_STT
			, YMD_END
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		)
		SELECT NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_FC
			, YMD_STT
			, YMD_END
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		FROM SCR_REQ_CARD
		WHERE NO_PERSON		= #{no_person	,jdbcType=VARCHAR}
			AND CD_FC		= #{cd_fc		,jdbcType=VARCHAR}
	</insert>
	
	<select id="getScrReqHealth" parameterType="com.koscom.scrap.model.ScrReqHealthVO" resultType="com.koscom.scrap.model.ScrReqHealthVO">
		SELECT NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_CONFIRM
			, INQUIRY_START_YEARMONTH
			, INQUIRY_END_YEARMONTH
			, NO_PBLS
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		FROM SCR_REQ_HEALTH
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
	</select>
	
	<insert id="createScrReqHealth" parameterType="com.koscom.scrap.model.ScrReqHealthVO">
		MERGE INTO SCR_REQ_HEALTH
		USING DUAL
		ON ( NO_PERSON		= #{no_person	,jdbcType=VARCHAR} )
		WHEN MATCHED THEN
		UPDATE
		 SET
		  	SEQ_SCRAPING_RESULT		= #{seq_scraping_result		,jdbcType=VARCHAR}
		  	,CD_CONFIRM				= #{cd_confirm				,jdbcType=VARCHAR}
		    ,INQUIRY_START_YEARMONTH= #{inquiry_start_yearmonth	,jdbcType=VARCHAR}
		 	,INQUIRY_END_YEARMONTH	= #{inquiry_end_yearmonth	,jdbcType=VARCHAR}
		 	,NO_PBLS				= #{no_pbls					,jdbcType=VARCHAR}
		 	,ERROR_CD				= #{error_cd				,jdbcType=VARCHAR}
			,ERROR_MSG				= #{error_msg				,jdbcType=VARCHAR}
			,DT_FRT					= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,SEQ_SCRAPING_RESULT
			,CD_CONFIRM
			,INQUIRY_START_YEARMONTH
			,INQUIRY_END_YEARMONTH
			,NO_PBLS
			,ERROR_CD
			,ERROR_MSG
			,DT_FRT
		) VALUES (
			 #{no_person				,jdbcType=VARCHAR}
			,#{seq_scraping_result		,jdbcType=VARCHAR}
			,#{cd_confirm				,jdbcType=VARCHAR}
			,#{inquiry_start_yearmonth	,jdbcType=VARCHAR}
			,#{inquiry_end_yearmonth	,jdbcType=VARCHAR}
			,#{no_pbls					,jdbcType=VARCHAR}
			,#{error_cd					,jdbcType=VARCHAR}
			,#{error_msg				,jdbcType=VARCHAR}
			,SYSDATE
		)
	</insert>
	
	<select id="getScrReqPension" parameterType="com.koscom.scrap.model.ScrReqPensionVO" resultType="com.koscom.scrap.model.ScrReqPensionVO">
		SELECT NO_PERSON
			, SEQ_SCRAPING_RESULT
			, CD_CONFIRM
			, INQUIRY_START_YEARMONTH
			, INQUIRY_END_YEARMONTH
			, ERROR_CD
			, ERROR_MSG
			, DT_FRT
		FROM SCR_REQ_PENSION
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
	</select>
	
	<insert id="createScrReqPension" parameterType="com.koscom.scrap.model.ScrReqPensionVO">
		MERGE INTO SCR_REQ_PENSION
		USING DUAL
		ON ( NO_PERSON		= #{no_person	,jdbcType=VARCHAR} )
		WHEN MATCHED THEN
		UPDATE
		 SET
		  	SEQ_SCRAPING_RESULT		= #{seq_scraping_result		,jdbcType=VARCHAR}
		  	,CD_CONFIRM				= #{cd_confirm				,jdbcType=VARCHAR}
		    ,INQUIRY_START_YEARMONTH= #{inquiry_start_yearmonth	,jdbcType=VARCHAR}
		 	,INQUIRY_END_YEARMONTH	= #{inquiry_end_yearmonth	,jdbcType=VARCHAR}
		 	,ERROR_CD				= #{error_cd				,jdbcType=VARCHAR}
			,ERROR_MSG				= #{error_msg				,jdbcType=VARCHAR}
			,DT_FRT					= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,SEQ_SCRAPING_RESULT
			,CD_CONFIRM
			,INQUIRY_START_YEARMONTH
			,INQUIRY_END_YEARMONTH
			,ERROR_CD
			,ERROR_MSG
			,DT_FRT
		) VALUES (
			 #{no_person				,jdbcType=VARCHAR}
			,#{seq_scraping_result		,jdbcType=VARCHAR}
			,#{cd_confirm				,jdbcType=VARCHAR}
			,#{inquiry_start_yearmonth	,jdbcType=VARCHAR}
			,#{inquiry_end_yearmonth	,jdbcType=VARCHAR}
			,#{error_cd					,jdbcType=VARCHAR}
			,#{error_msg				,jdbcType=VARCHAR}
			,SYSDATE
		)
	</insert>
	
	<insert id="createFcLinkInfo" parameterType="com.koscom.scrap.model.FcLinkInfoVO">
		MERGE INTO FC_LINK_INFO
		USING DUAL
		ON ( NO_PERSON = #{NO_PERSON, jdbcType=VARCHAR}
			AND CD_FC = #{CD_FC, jdbcType=VARCHAR} )
		WHEN MATCHED THEN
		UPDATE
		 SET
		  	CN					= #{CN            ,jdbcType=VARCHAR}
		    ,CD_LINK_STAT		= #{CD_LINK_STAT  ,jdbcType=VARCHAR}
		 	,YN_LINK			= #{YN_LINK       ,jdbcType=VARCHAR}
		 	,TYPE_LOGIN			= #{TYPE_LOGIN    ,jdbcType=VARCHAR}
			,LINK_DATE			= TO_CHAR(SYSDATE , 'YYYYMMDD')
			,RSN_LINK_MESSAGE	= #{RSN_LINK_MESSAGE    ,jdbcType=VARCHAR}
			,ID_LST				= #{ID_LST        ,jdbcType=VARCHAR}
			,DT_LST				= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,CD_FC
			,CD_AGENCY
			,CN
			,CD_LINK_STAT
			,YN_LINK
			,TYPE_LOGIN
			,LINK_DATE
			,RSN_LINK_MESSAGE
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		) VALUES (
			 #{NO_PERSON	,jdbcType=VARCHAR}
			,#{CD_FC		,jdbcType=VARCHAR}
			,#{CD_AGENCY	,jdbcType=VARCHAR}
			,#{CN			,jdbcType=VARCHAR}
			,#{CD_LINK_STAT	,jdbcType=VARCHAR}
			,#{YN_LINK		,jdbcType=VARCHAR}
			,#{TYPE_LOGIN	,jdbcType=VARCHAR}
			,TO_CHAR(SYSDATE, 'YYYYMMDD')
			,#{RSN_LINK_MESSAGE	,jdbcType=VARCHAR}
			,#{ID_FRT		,jdbcType=VARCHAR}
			,SYSDATE
			,#{ID_LST		,jdbcType=VARCHAR}
			,SYSDATE
		)
	</insert>
	
	<update id="updateFcLinkInfo" parameterType="com.koscom.scrap.model.FcLinkInfoVO">
		UPDATE FC_LINK_INFO
		SET
			CD_LINK_STAT = #{CD_LINK_STAT, jdbcType=VARCHAR}
			, RSN_LINK_MESSAGE = #{RSN_LINK_MESSAGE, jdbcType=VARCHAR}
		WHERE NO_PERSON = #{NO_PERSON, jdbcType=VARCHAR}
			AND CD_FC = #{CD_FC, jdbcType=NUMERIC}
	</update>
	
	<select id="getLinkedFcCount" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(1)
		FROM FC_LINK_INFO
		WHERE NO_PERSON = #{NO_PERSON, jdbcType=VARCHAR}
			AND YN_LINK = 'Y'
	</select>
	
	<select id="getLinkedFcInfo" parameterType="com.koscom.scrap.model.LinkedFcInfoVO" resultType="com.koscom.scrap.model.LinkedFcInfoVO">
		SELECT LK.NO_PERSON
			, LK.CD_AGENCY
			, LK.CD_FC
			, LK.CN
			, FC.NM_FC
			, FC.CD_FIN
			, CD.NM_CODE
			, LK.CD_LINK_STAT
			, LK.YN_LINK
			, LK.TYPE_LOGIN
		FROM FC_LINK_INFO LK, FC_INFO FC, COMM_CD CD
		WHERE NO_PERSON = #{NO_PERSON, jdbcType=VARCHAR} 
			AND CN = #{CN, jdbcType=VARCHAR}
			AND LK.YN_LINK = 'Y'  AND LK.CD_FC = FC.CD_FC AND CD.CODE_GROUP = 'cd_fin' AND CD.CODE_VALUE = FC.CD_FIN
		ORDER BY CD_FIN, NM_FC
	</select>
	
	<select id="getLinkFcInfo" parameterType="com.koscom.scrap.model.LinkedFcInfoVO" resultType="com.koscom.scrap.model.LinkedFcInfoVO">
		SELECT LK.NO_PERSON
			, LK.CN
			, LK.CD_AGENCY
			, FC.CD_FC
			, FC.NM_FC
			, (SELECT NM_CODE FROM COMM_CD WHERE CODE_GROUP = 'cd_fin' AND CODE_VALUE = FC.CD_FIN) NM_CODE
			, CD.NM_CODE CD_COOCON
			, NVL(LK.YN_LINK, 'N') YN_LINK
			, LK.CD_LINK_STAT
			, LK.RSN_LINK_MESSAGE
			, (SELECT NM_CODE FROM COMM_CD WHERE CODE_GROUP = 'type_login' AND CODE_VALUE = LK.TYPE_LOGIN) TYPE_LOGIN
		FROM FC_INFO 
			FC LEFT OUTER JOIN
			(SELECT * FROM FC_LINK_INFO WHERE NO_PERSON = #{NO_PERSON, jdbcType=VARCHAR}) LK  
			ON LK.CD_FC = FC.CD_FC
			, COMM_CD CD
		WHERE FC.YN_SCRAP = 'Y'
			AND CD.CODE_GROUP = 'cd_coocon_fc'
			AND CD.CODE_VALUE = FC.CD_FC
		ORDER BY CD_FIN, YN_LINK DESC, NM_FC
	</select>
	
	<insert id="createFcLinkInfoHist" parameterType="com.koscom.scrap.model.FcLinkInfoVO">
		INSERT INTO FC_LINK_HIST
        (
			 NO_PERSON
			,CD_AGENCY
			,CD_FC
			,CN
			,CD_LINK_STAT
			,YN_LINK
			,TYPE_LOGIN
			,LINK_DATE
			,RSN_LINK_MESSAGE
			,ID_FRT
			,DT_FRT
		)
		SELECT
		  	NO_PERSON
		  	,CD_AGENCY
			,CD_FC
			,CN
			,CD_LINK_STAT
			,YN_LINK
			,TYPE_LOGIN
			,LINK_DATE
			,RSN_LINK_MESSAGE
			,ID_LST
			,SYSDATE
		FROM FC_LINK_INFO
		WHERE NO_PERSON = #{NO_PERSON, jdbcType=VARCHAR} 
			AND CN = #{CN, jdbcType=VARCHAR}
		<if test="@com.koscom.util.MybatisUtil@isNotEmpty(CD_FC)">
			AND CD_FC = #{CD_FC, jdbcType=VARCHAR}
		</if>
	</insert>
	
	<delete id="delBankApiLoanAnInfo" parameterType="java.lang.String">
		DELETE FROM BANK_API_LOAN_AN_INFO WHERE NO_PERSON = #{no_person}
	</delete>
	
	<insert id="createBankApiLoanAnInfo" parameterType="com.koscom.domain.BankApiLoanAnInfo">
		INSERT INTO BANK_API_LOAN_AN_INFO(
			 NO_PERSON
			,AN
			,TYPE
			,LOAN_BALANCE
			,LOAN_CEILING
			,NEW_DATE
			,LAST_DATE
			,LENDING_RATE
			,FEW_DAYS
			,INTEREST_DATE
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		) VALUES (
			 #{no_person , jdbcType=VARCHAR}
			,XX1.ENC_VARCHAR2_INS(#{an, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'BANK_API_LOAN_AN_INFO', 'AN')
			,#{type, jdbcType=VARCHAR}
			,#{loan_balance  , jdbcType=VARCHAR}
			,#{loan_ceiling  , jdbcType=VARCHAR}
			,#{new_date  , jdbcType=VARCHAR}
			,#{last_date, jdbcType=VARCHAR}
			,#{lending_rate, jdbcType=VARCHAR}
			,#{few_days , jdbcType=VARCHAR}
			,#{interest_date , jdbcType=VARCHAR}
			, #{id_frt, jdbcType=VARCHAR}
			, SYSDATE
			, #{id_frt, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<insert id="createScrBankApiAnInfo" parameterType="com.koscom.scrap.model.ScrBankApiAnInfoVO">
		MERGE INTO SCR_BANK_API_AN_INFO
		USING DUAL
		ON (no_person = #{no_person, jdbcType=VARCHAR}
			AND an = XX1.ENC_VARCHAR2_INS(#{an, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'SCR_BANK_API_AN_INFO', 'AN'))
		WHEN MATCHED THEN
		UPDATE
		 SET
		    TYPE_AN		    = #{type_an        ,jdbcType=VARCHAR}
		    ,NM_AN 			= #{nm_an          ,jdbcType=VARCHAR}
		    ,CD_CURRENCY	= #{cd_currency    ,jdbcType=VARCHAR}
		 	,PRINCIPAL		= #{principal      ,jdbcType=VARCHAR}
		 	,AMT_AVAILABLE	= #{amt_available  ,jdbcType=VARCHAR}
		 	,CURRENT_BALANCE= #{current_balance,jdbcType=VARCHAR}
			,LOAN_BALANCE	= #{loan_balance   ,jdbcType=VARCHAR}
			,LOAN_CEILING	= #{loan_ceiling   ,jdbcType=VARCHAR}
			,DT_NEW 		= #{dt_new         ,jdbcType=VARCHAR}
			,DT_END 		= #{dt_end         ,jdbcType=VARCHAR}
			,INTEREST_RATE	= #{interest_rate  ,jdbcType=VARCHAR}
			,PROFIT_RATE	= #{profit_rate    ,jdbcType=VARCHAR}
			,FEW_DAYS		= #{few_days       ,jdbcType=VARCHAR}
			,INTEREST_DATE	= #{interest_date  ,jdbcType=VARCHAR}
			,YN_USE			= #{yn_use         ,jdbcType=VARCHAR}
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,AN
			,CD_FC
			,TYPE_AN
			,NM_AN
			,CD_CURRENCY
			,PRINCIPAL
			,AMT_AVAILABLE
			,CURRENT_BALANCE
			,LOAN_BALANCE
			,LOAN_CEILING
			,DT_NEW
			,DT_END
			,INTEREST_RATE
			,PROFIT_RATE
			,FEW_DAYS
			,INTEREST_DATE
			,YN_USE
			,DT_FRT
		) VALUES (
			 #{no_person , jdbcType=VARCHAR}
			,XX1.ENC_VARCHAR2_INS(#{an, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'SCR_BANK_API_AN_INFOZ ', 'AN')
			,#{cd_fc		  ,jdbcType=VARCHAR}
			,#{type_an		  ,jdbcType=VARCHAR}
			,#{nm_an		  ,jdbcType=VARCHAR}
			,#{cd_currency	  ,jdbcType=VARCHAR}
			,#{principal	  ,jdbcType=VARCHAR}
			,#{amt_available  ,jdbcType=VARCHAR}
			,#{current_balance,jdbcType=VARCHAR}
			,#{loan_balance	  ,jdbcType=VARCHAR}
			,#{loan_ceiling	  ,jdbcType=VARCHAR}
			,#{dt_new		  ,jdbcType=VARCHAR}
			,#{dt_end		  ,jdbcType=VARCHAR}
			,#{interest_rate  ,jdbcType=VARCHAR}
			,#{profit_rate    ,jdbcType=VARCHAR}
			,#{few_days		  ,jdbcType=VARCHAR}
			,#{interest_date  ,jdbcType=VARCHAR}
			,#{yn_use		  ,jdbcType=VARCHAR}
			,SYSDATE
		)
	</insert>
	
	<insert id="createScrCardInfo" parameterType="com.koscom.scrap.model.ScrCardInfoVO">
		MERGE INTO SCR_CARD_INFO
		USING DUAL
		ON (no_person = #{no_person, jdbcType=VARCHAR}
			AND no_card = #{no_card, jdbcType=VARCHAR} )
		WHEN MATCHED THEN
		UPDATE
		 SET
		    NM_CARD		    = #{nm_card        ,jdbcType=VARCHAR}
		    ,DT_PAYMENT 	= #{dt_payment     ,jdbcType=VARCHAR}
		    ,AMT_PAYMENT	= #{amt_payment    ,jdbcType=VARCHAR}
		 	,FC_MEMBER		= #{fc_member      ,jdbcType=VARCHAR}
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,CD_FC
			,NO_CARD
			,NM_CARD
			,DT_PAYMENT
			,AMT_PAYMENT
			,FC_MEMBER
		) VALUES (
			 #{no_person      ,jdbcType=VARCHAR}
			,#{cd_fc		  ,jdbcType=VARCHAR}
			,#{no_card		  ,jdbcType=VARCHAR}
			,#{nm_card		  ,jdbcType=VARCHAR}
			,#{dt_payment	  ,jdbcType=VARCHAR}
			,#{amt_payment	  ,jdbcType=VARCHAR}
			,#{fc_member      ,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="createScrCardApprovalInfo" parameterType="com.koscom.scrap.model.ScrCardApprovalInfoVO">
		INSERT INTO SCR_CARD_APPROVAL_INFO(
			 NO_PERSON
			,CD_FC
			,DT_APPROVAL
			,TM_APPROVAL
			,NO_APPROVAL
			,TYPE_CARD
			,NO_CARD
			,NM_MEMBER
			,TYPE_SALES
			,PERIOD_INSTALLMENT
			,AMT_APPROVAL
			,YMD_CANCEL
			,DT_PAYMENT_DUE
			,NO_BIZ_MEMBER
			,CD_BIZ_MEMBER
			,TYPE_BIZ_MEMBER
			,CD_CURRENCY
			,CD_IN_OUT
			,DT_FRT

		) VALUES (
			 #{no_person         ,jdbcType=VARCHAR}
			,#{cd_fc             ,jdbcType=VARCHAR}
			,#{dt_approval       ,jdbcType=VARCHAR}
			,#{tm_approval       ,jdbcType=VARCHAR}
			,#{no_approval       ,jdbcType=VARCHAR}
			,#{type_card         ,jdbcType=VARCHAR}
			,#{no_card           ,jdbcType=VARCHAR}
			,#{nm_member         ,jdbcType=VARCHAR}
			,#{type_sales        ,jdbcType=VARCHAR}
			,#{period_installment,jdbcType=VARCHAR}
			,#{amt_approval      ,jdbcType=VARCHAR}
			,#{ymd_cancel        ,jdbcType=VARCHAR}
			,TRIM(#{dt_payment_due    ,jdbcType=VARCHAR})
			,#{no_biz_member     ,jdbcType=VARCHAR}
			,#{cd_biz_member     ,jdbcType=VARCHAR}
			,#{type_biz_member   ,jdbcType=VARCHAR}
			,#{cd_currency       ,jdbcType=VARCHAR}
			,#{cd_in_out         ,jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getMaxDateScrCardApprovalInfo" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT MAX(DT_APPROVAL||TM_APPROVAL) MAX_DT_TRD FROM SCR_CARD_APPROVAL_INFO
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND CD_FC = #{cd_fc, jdbcType=VARCHAR}
		GROUP BY NO_PERSON, CD_FC
	</select >
	
	<insert id="createScrReqCertification" parameterType="com.koscom.scrap.model.ScrReqCertificationVO">
		INSERT INTO SCR_REQ_CERTIFICATION(
			 NO_PERSON
			,SEQ_SCRAPING_RESULT
			,CD_TYPE
			,BIZ_LICENCE
			,HP
			,RCPT_START_MONTH
			,RCPT_END_MONTH
			,TAXATION_START_MONTH
			,TAXATION_END_MONTH
			,TAXATION_YEAR
			,CD_INCOME
			,CERT_DIVISION
			,YMD_HOPE_OPEN
			,CD_OPEN_YN
			,NO_RECEPTION
			,NO_PBLS
			,NM_ISSUED_AGENCY
			,DEPARTMENT
			,MANAGER
			,TEL_MANAGER
			,ERROR_CD
			,ERROR_MSG
			,DT_FRT
		) VALUES (
			 #{no_person , jdbcType=VARCHAR}
			,#{seq_scraping_result, jdbcType=NUMERIC}
			,#{cd_type, jdbcType=VARCHAR}
			,#{biz_licence, jdbcType=VARCHAR}
			,#{hp, jdbcType=VARCHAR}
			,#{rcpt_start_month, jdbcType=VARCHAR}
			,#{rcpt_end_month, jdbcType=VARCHAR}
			,#{taxation_start_month, jdbcType=VARCHAR}
			,#{taxation_end_month, jdbcType=VARCHAR}
			,#{taxation_year, jdbcType=VARCHAR}
			,#{cd_income, jdbcType=VARCHAR}
			,#{cert_division  , jdbcType=VARCHAR}
			,#{ymd_hope_open  , jdbcType=VARCHAR}
			,#{cd_open_yn  , jdbcType=VARCHAR}
			,#{no_reception, jdbcType=VARCHAR}
			,#{no_pbls, jdbcType=VARCHAR}
			,#{nm_issued_agency , jdbcType=VARCHAR}
			,#{department , jdbcType=VARCHAR}
			,#{manager , jdbcType=VARCHAR}
			,#{tel_manager , jdbcType=VARCHAR}
			,#{error_cd , jdbcType=VARCHAR}
			,#{error_msg , jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getScrReqCertification" parameterType="com.koscom.scrap.model.ScrReqCertificationVO" resultType="com.koscom.scrap.model.ScrReqCertificationVO">
		SELECT NO_PERSON
			,SEQ_SCRAPING_RESULT
			,CD_TYPE
			,BIZ_LICENCE
			,HP
			,RCPT_START_MONTH
			,RCPT_END_MONTH
			,TAXATION_START_MONTH
			,TAXATION_END_MONTH
			,TAXATION_YEAR
			,CD_INCOME
			,CERT_DIVISION
			,YMD_HOPE_OPEN
			,CD_OPEN_YN
			,NO_RECEPTION
			,NO_PBLS
			,NM_ISSUED_AGENCY
			,DEPARTMENT
			,MANAGER
			,TEL_MANAGER
			,ERROR_CD
			,ERROR_MSG
			,DT_FRT
		FROM SCR_REQ_CERTIFICATION A, (SELECT MAX(SEQ_SCRAPING_RESULT) MAX_SEQ FROM SCR_REQ_CERTIFICATION
			WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}) B
		WHERE A.SEQ_SCRAPING_RESULT = B.MAX_SEQ
	</select>
	
	<insert id="createScrRespCashReceipt" parameterType="com.koscom.scrap.model.ScrRespCashReceiptVO">
		INSERT INTO SCR_RESP_CASH_RECEIPT(
			 NO_PERSON
			,YMD_DEAL
			,TIME_DEAL
			,NM_AFFILIATE
			,AMT_USE
			,NO_APPROVAL
			,TYPE_ID_CHECK
			,TYPE_DEAL
			,YN_DEDUCTION
			,TYPE_ISSUE
			,DT_FRT
		) VALUES (
			 #{no_person , jdbcType=VARCHAR}
			,#{ymd_deal, jdbcType=VARCHAR}
			,#{time_deal, jdbcType=VARCHAR}
			,#{nm_affiliate, jdbcType=VARCHAR}
			,#{amt_use, jdbcType=VARCHAR}
			,#{no_approval, jdbcType=VARCHAR}
			,#{type_id_check, jdbcType=VARCHAR}
			,#{type_deal, jdbcType=VARCHAR}
			,#{yn_deduction, jdbcType=VARCHAR}
			,#{type_issue, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getMaxDateScrRespCashReceipt" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT MAX(YMD_DEAL||TIME_DEAL) MAX_DT_TRD FROM SCR_RESP_CASH_RECEIPT
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
		GROUP BY NO_PERSON
	</select >
	
	<insert id="createBankApiAnInfo" parameterType="com.koscom.scrap.model.BankApiAnInfo">
		MERGE INTO BANK_API_AN_INFO
		USING DUAL
		ON (no_person = #{no_person, jdbcType=VARCHAR}
			AND an = XX1.ENC_VARCHAR2_INS(#{an, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'BANK_API_AN_INFO', 'AN'))
		WHEN MATCHED THEN
		UPDATE
		 SET
		    TYPE		    = #{type          ,jdbcType=VARCHAR}
		 	,PRINCIPAL		= #{principal     ,jdbcType=VARCHAR}
		 	,BALANCE		= #{balance       ,jdbcType=VARCHAR}
		 	,AMT_AVAILABE	= #{amt_available ,jdbcType=VARCHAR}
			,LOAN_BALANCE	= #{loan_balance  ,jdbcType=VARCHAR}
			,LOAN_CEILING	= #{loan_ceiling  ,jdbcType=VARCHAR}
			,DT_NEW 		= #{new_date      ,jdbcType=VARCHAR}
			,DT_END 		= #{last_date     ,jdbcType=VARCHAR}
			,INTEREST_RATE	= #{interest_rate ,jdbcType=VARCHAR}
			,PROFIT_RATE	= #{profit_rate   ,jdbcType=VARCHAR}
			,FEW_DAYS		= #{few_days      ,jdbcType=VARCHAR}
			,INTEREST_DATE	= #{interest_date ,jdbcType=VARCHAR}
			,YN_USE			= #{yn_use        ,jdbcType=VARCHAR}
			,ID_LST			= #{id_lst        ,jdbcType=VARCHAR}
			,DT_LST			= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			 NO_PERSON
			,AN
			,CD_FC
			,TYPE_LOGIN
			,TYPE
			,NM_AN
			,PRINCIPAL
			,BALANCE
			,AMT_AVAILABE
			,LOAN_BALANCE
			,LOAN_CEILING
			,DT_NEW
			,DT_END
			,INTEREST_RATE
			,PROFIT_RATE
			,FEW_DAYS
			,INTEREST_DATE
			,YN_USE
			,ID_FRT
			,DT_FRT
			,ID_LST
			,DT_LST
		) VALUES (
			 #{no_person , jdbcType=VARCHAR}
			,XX1.ENC_VARCHAR2_INS(#{an, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'BANK_API_AN_INFO', 'AN')
			,#{cd_fc		,jdbcType=VARCHAR}
			,#{type_login	,jdbcType=VARCHAR}
			,#{type			,jdbcType=VARCHAR}
			,#{nm_an		,jdbcType=VARCHAR}
			,#{principal	,jdbcType=VARCHAR}
			,#{balance		,jdbcType=VARCHAR}
			,#{amt_available,jdbcType=VARCHAR}
			,#{loan_balance	,jdbcType=VARCHAR}
			,#{loan_ceiling	,jdbcType=VARCHAR}
			,#{new_date		,jdbcType=VARCHAR}
			,#{last_date	,jdbcType=VARCHAR}
			,#{interest_rate,jdbcType=VARCHAR}
			,#{profit_rate	,jdbcType=VARCHAR}
			,#{few_days		,jdbcType=VARCHAR}
			,#{interest_date,jdbcType=VARCHAR}
			,#{yn_use		,jdbcType=VARCHAR}
			,#{id_frt		,jdbcType=VARCHAR}
			,SYSDATE
			,#{id_frt		,jdbcType=VARCHAR}
			,SYSDATE
		)
	</insert>
	
	<select id="getMaxDateSrcTransactionDetail" parameterType="com.koscom.scrap.model.ScrBankApiAnInfoVO" resultType="java.lang.String">
		SELECT MAX(DT_TRD||TM_TRD) MAX_DT_TRD FROM SCR_TRANSACTION_DETAIL
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND AN = #{an, jdbcType=VARCHAR}
		GROUP BY NO_PERSON, AN
	</select >
	
	<select id="getMaxDateBankApiAnAllHistInfo" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT MAX(DT_TRD||TM_TRD) MAX_DT_TRD FROM BANK_API_DEPWDRL_DTL
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
		GROUP BY NO_PERSON
	</select >
	
	<insert id="createScrTransactionDetail" parameterType="com.koscom.scrap.model.sub.AnAllListHistoryVO">
		INSERT INTO SCR_TRANSACTION_DETAIL
		(
			  NO_PERSON
			, AN
			, DT_TRD
			, TM_TRD
			, CD_CRNCY
			, AMT_WDRL
			, AMT_DEP
			, BALANCE
			, DOC1
			, DOC2
			, DEALWAY1
			, DEALWAY2
			, DT_FRT
		) VALUES (
			#{NO_PERSON, jdbcType=VARCHAR}
			, XX1.ENC_VARCHAR2_INS(#{AN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'BANK_API_DEPWDRL_DTL', 'AN')
			, #{DATE, jdbcType=VARCHAR}
			, #{TIME, jdbcType=VARCHAR}
			, #{CODE, jdbcType=VARCHAR}
			, #{OUT_PAYMENT, jdbcType=VARCHAR}
			, #{IN_PAYMENT, jdbcType=VARCHAR}
			, #{BALANCE, jdbcType=VARCHAR}
			, #{DOC1, jdbcType=VARCHAR}
			, #{DOC2, jdbcType=VARCHAR}
			, #{DEALWAY1, jdbcType=VARCHAR}
			, #{DEALWAY2, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<insert id="createBankApiAnAllHistInfo" parameterType="com.koscom.scrap.model.sub.AnAllListHistoryVO">
		INSERT INTO BANK_API_DEPWDRL_DTL
		(
			  NO_PERSON
			, AN
			, DT_TRD
			, TM_TRD
			, CD_CRNCY
			, AMT_WDRL
			, AMT_DEP
			, BALANCE
			, DOC1
			, DOC2
			, DEALWAY1
			, DEALWAY2
			, ID_FRT
			, DT_FRT
		) VALUES (
			#{NO_PERSON, jdbcType=VARCHAR}
			, XX1.ENC_VARCHAR2_INS(#{AN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'BANK_API_DEPWDRL_DTL', 'AN')
			, #{DATE, jdbcType=VARCHAR}
			, #{TIME, jdbcType=VARCHAR}
			, #{CODE, jdbcType=VARCHAR}
			, #{OUT_PAYMENT, jdbcType=VARCHAR}
			, #{IN_PAYMENT, jdbcType=VARCHAR}
			, #{BALANCE, jdbcType=VARCHAR}
			, #{DOC1, jdbcType=VARCHAR}
			, #{DOC2, jdbcType=VARCHAR}
			, #{DEALWAY1, jdbcType=VARCHAR}
			, #{DEALWAY2, jdbcType=VARCHAR}
			, #{ID_FRT, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>

	<select id="getMaxDateScrSvngSvninDetail" parameterType="com.koscom.scrap.model.ScrBankApiAnInfoVO" resultType="java.lang.String">
		SELECT MAX(DT_TRD||TM_TRD) MAX_DT_TRD FROM SCR_SVNG_SVNIN_DETAIL
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND AN = #{an, jdbcType=VARCHAR}
		GROUP BY NO_PERSON, AN
	</select >
		
	<select id="getMaxDateBankApiDepositAnHistInfo" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT MAX(DT_TRD||TM_TRD) MAX_DT_TRD FROM BANK_API_SVNGSVNIN_DTL
		WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
		GROUP BY NO_PERSON
	</select >
	
	<insert id="createScrSvngSvninDetail" parameterType="com.koscom.scrap.model.sub.DepositAnListHistoryVO">
		INSERT INTO SCR_SVNG_SVNIN_DETAIL
		(
			  NO_PERSON
			, AN
			, DT_TRD
			, TM_TRD
			, RND_TRD
			, AMT_TRD_MTH
			, AMT_DEP
			, AMT_WDRL
			, BALANCE
			, ABSTRACT
			, BRN_DEAL
			, DT_FRT
		) VALUES (
			#{NO_PERSON		, jdbcType=VARCHAR}
			, XX1.ENC_VARCHAR2_INS(#{AN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'BANK_API_DEPWDRL_DTL', 'AN')
			, #{DATE		, jdbcType=VARCHAR}
			, #{TIME		, jdbcType=VARCHAR}
			, #{BATCH		, jdbcType=VARCHAR}
			, #{MONTH		, jdbcType=VARCHAR}
			, #{IN_PAYMENT	, jdbcType=VARCHAR}
			, #{OUT_PAYMENT	, jdbcType=VARCHAR}
			, #{BALANCE		, jdbcType=VARCHAR}
			, #{DESCRIPTION	, jdbcType=VARCHAR}
			, #{DISTRIBUTOR	, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<insert id="createScrRespHealthPayment" parameterType="com.koscom.scrap.model.ScrRespHealthPaymentVO">
		MERGE INTO SCR_RESP_HEALTH_PAYMENT
		USING DUAL
		ON (NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND NO_PAYER = #{no_payer, jdbcType=VARCHAR})
		WHEN MATCHED THEN
		UPDATE
		 SET
		    NO_PBLS		    = #{no_pbls          ,jdbcType=VARCHAR}
		 	,MEMBER_DIVISION= #{member_division  ,jdbcType=VARCHAR}
		 	,NM_COMP		= #{nm_comp          ,jdbcType=VARCHAR}
		 	,YMD_GAIN		= #{ymd_gain         ,jdbcType=VARCHAR}
			,YMD_LOSS		= #{ymd_loss         ,jdbcType=VARCHAR}
			,BELONG_BRANCH	= #{belong_branch    ,jdbcType=VARCHAR}
			,NM_MEMBER 		= #{nm_member        ,jdbcType=VARCHAR}
			,BGN 			= #{bgn              ,jdbcType=VARCHAR}
			,DT_FRT			= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			  NO_PERSON
			, NO_PAYER
			, NO_PBLS
			, MEMBER_DIVISION
			, NM_COMP
			, YMD_GAIN
			, YMD_LOSS
			, BELONG_BRANCH
			, NM_MEMBER
			, BGN
			, DT_FRT
		) VALUES (
			 #{no_person		, jdbcType=VARCHAR}
			, #{no_payer		, jdbcType=VARCHAR}
			, #{no_pbls			, jdbcType=VARCHAR}
			, #{member_division	, jdbcType=VARCHAR}
			, #{nm_comp			, jdbcType=VARCHAR}
			, #{ymd_gain		, jdbcType=VARCHAR}
			, #{ymd_loss		, jdbcType=VARCHAR}
			, #{belong_branch	, jdbcType=VARCHAR}
			, #{nm_member		, jdbcType=VARCHAR}
			, #{bgn				, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<insert id="createScrRespHealthPaymentdtl" parameterType="com.koscom.scrap.model.ScrRespHealthPaymentdtlVO">
		INSERT INTO SCR_RESP_HEALTH_PAYMENTDTL
		(
			  NO_PERSON
			, NO_PAYER
			, PAY_YYYYMM
			, AMT_NT_HEALTH_INSU
			, AMT_NT_LNGTRM_CR_INS
			, AMT_PAY_HEALTH_INSU
			, AMT_PAY_LONGTERM_CARE_INSU
			, AMT_ICNT_HEALTH_INSU
			, AMT_ICNT_LNGTRM_CR_INS
			, AMT_ICPAY_HEALTH_INSU
			, AMT_ICPAY_LONGTERM_CARE_INSU
			, DT_FRT
		) VALUES (
			#{no_person							, jdbcType=VARCHAR}
			, #{no_payer						, jdbcType=VARCHAR}
			, #{pay_yyyymm						, jdbcType=VARCHAR}
			, #{amt_nt_health_insu				, jdbcType=VARCHAR}
			, #{amt_nt_lngtrm_cr_ins			, jdbcType=VARCHAR}
			, #{amt_pay_health_insu				, jdbcType=VARCHAR}
			, #{amt_pay_longterm_care_insu		, jdbcType=VARCHAR}
			, #{amt_icnt_health_insu			, jdbcType=VARCHAR}
			, #{amt_icnt_lngtrm_cr_ins			, jdbcType=VARCHAR}
			, #{amt_icpay_health_insu			, jdbcType=VARCHAR}
			, #{amt_icpay_longterm_care_insu	, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getScrRespHealthPaymentdtl" parameterType="com.koscom.scrap.model.ScrRespHealthPaymentdtlVO" resultType="com.koscom.scrap.model.ScrRespHealthPaymentdtlVO">
		SELECT NO_PERSON
			, NO_PAYER
			, PAY_YYYYMM
			, AMT_NT_HEALTH_INSU
			, AMT_NT_LNGTRM_CR_INS
			, AMT_PAY_HEALTH_INSU
			, AMT_PAY_LONGTERM_CARE_INSU
			, AMT_ICNT_HEALTH_INSU
			, AMT_ICNT_LNGTRM_CR_INS
			, AMT_ICPAY_HEALTH_INSU
			, AMT_ICPAY_LONGTERM_CARE_INSU
			, DT_FRT 
		FROM SCR_RESP_HEALTH_PAYMENTDTL
		WHERE  NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND PAY_YYYYMM >= #{pay_yyyymm, jdbcType=VARCHAR}
		ORDER BY PAY_YYYYMM DESC
	</select>
	
	<insert id="createScrRespIncomeDtl" parameterType="com.koscom.scrap.model.ScrRespIncomeDtlVO">
		MERGE INTO SCR_RESP_INCOME_DTL
		USING DUAL
		ON (NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND CERT_DIVISION = #{cert_division, jdbcType=VARCHAR}
			AND REVERSION_YEAR = #{reversion_year, jdbcType=VARCHAR})
		WHEN MATCHED THEN
		UPDATE
		 SET
		    NO_PBLS		    		= #{no_pbls               ,jdbcType=VARCHAR}
		 	,BIZ_LICENCE			= #{biz_licence           ,jdbcType=VARCHAR}
		 	,INCOME_DIVISION		= #{income_division       ,jdbcType=VARCHAR}
		 	,CORP_NM				= #{corp_nm               ,jdbcType=VARCHAR}
			,AMT_INCOME				= #{amt_income            ,jdbcType=VARCHAR}
			,AMT_TOTAL_DECISION_TAX	= #{amt_total_decision_tax,jdbcType=VARCHAR}
			,DT_FRT					= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			  NO_PERSON
			, CERT_DIVISION
			, NO_PBLS
			, REVERSION_YEAR
			, BIZ_LICENCE
			, INCOME_DIVISION
			, CORP_NM
			, AMT_INCOME
			, AMT_TOTAL_DECISION_TAX
			, DT_FRT
		) VALUES (
			 #{no_person				, jdbcType=VARCHAR}
			, #{cert_division			, jdbcType=VARCHAR}
			, #{no_pbls					, jdbcType=VARCHAR}
			, #{reversion_year			, jdbcType=VARCHAR}
			, #{biz_licence				, jdbcType=VARCHAR}
			, #{income_division			, jdbcType=VARCHAR}
			, #{corp_nm					, jdbcType=VARCHAR}
			, #{amt_income				, jdbcType=VARCHAR}
			, #{amt_total_decision_tax	, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getScrRespIncomeDtl" parameterType="com.koscom.scrap.model.ScrRespIncomeDtlVO" resultType="com.koscom.scrap.model.ScrRespIncomeDtlVO">
		SELECT NO_PERSON
			, CERT_DIVISION
			, NO_PBLS
			, REVERSION_YEAR
			, BIZ_LICENCE
			, INCOME_DIVISION
			, CORP_NM
			, AMT_INCOME
			, AMT_TOTAL_DECISION_TAX
			, DT_FRT
		FROM SCR_RESP_INCOME_DTL A, (SELECT TAXATION_YEAR YEAR FROM SCR_REQ_CERTIFICATION
									WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
									AND CD_TYPE = '02' /* 소득금액증명 */
									AND ROWNUM = 1
									ORDER BY SEQ_SCRAPING_RESULT DESC) B
		WHERE  NO_PERSON = #{no_person, jdbcType=VARCHAR}
		AND A.REVERSION_YEAR = B.YEAR
	</select>
	
	<insert id="createScrRespPensionPayment" parameterType="com.koscom.scrap.model.ScrRespPensionPaymentVO">
		MERGE INTO SCR_RESP_PENSION_PAYMENT
		USING DUAL
		ON (NO_PERSON = #{no_person, jdbcType=VARCHAR})
		WHEN MATCHED THEN
		UPDATE
		 SET
		    CNT_MONTH_PAY   		= #{cnt_month_pay        ,jdbcType=VARCHAR}
		 	,AMT_PAY				= #{amt_pay              ,jdbcType=VARCHAR}
		 	,CNT_MONTH_NOT_PAY		= #{cnt_month_not_pay    ,jdbcType=VARCHAR}
		 	,AMT_NOT_PAY			= #{amt_not_pay          ,jdbcType=VARCHAR}
			,CNT_MONTH_CANNOT_PAY	= #{cnt_month_cannot_pay ,jdbcType=VARCHAR}
			,AMT_CANNOT_PAY			= #{amt_cannot_pay       ,jdbcType=VARCHAR}
			,AMT_PAY_RETURN 		= #{amt_pay_return       ,jdbcType=VARCHAR}
			,AMT_PAY_PRIMIUM 		= #{amt_pay_primium      ,jdbcType=VARCHAR}
			,AMT_EST_PNS_MONTH 		= #{amt_est_pns_month    ,jdbcType=VARCHAR}
			,AMT_EST_PNS_YEAR 		= #{amt_est_pns_year     ,jdbcType=VARCHAR}
			,START_RECEIPT_YYYYMM 	= #{start_receipt_yyyymm ,jdbcType=VARCHAR}
			,EST_START_MBR_YYYYMM 	= #{est_start_mbr_yyyymm ,jdbcType=VARCHAR}
			,EST_END_MBR_YYYYMM 	= #{est_end_mbr_yyyymm   ,jdbcType=VARCHAR}
			,CNT_MONTH_EST_MBR 		= #{cnt_month_est_mbr    ,jdbcType=VARCHAR}
			,AMT_EST_PNS_PAY 		= #{amt_est_pns_pay      ,jdbcType=VARCHAR}
			,DT_FRT					= SYSDATE
		WHEN NOT MATCHED THEN
        INSERT
        (
			  NO_PERSON
			, CNT_MONTH_PAY
			, AMT_PAY
			, CNT_MONTH_NOT_PAY
			, AMT_NOT_PAY
			, CNT_MONTH_CANNOT_PAY
			, AMT_CANNOT_PAY
			, AMT_PAY_RETURN
			, AMT_PAY_PRIMIUM
			, AMT_EST_PNS_MONTH
			, AMT_EST_PNS_YEAR
			, START_RECEIPT_YYYYMM
			, EST_START_MBR_YYYYMM
			, EST_END_MBR_YYYYMM
			, CNT_MONTH_EST_MBR
			, AMT_EST_PNS_PAY
			, DT_FRT
		) VALUES (
			 #{no_person		, jdbcType=VARCHAR}
			, #{cnt_month_pay        ,jdbcType=VARCHAR}
		 	, #{amt_pay              ,jdbcType=VARCHAR}
		 	, #{cnt_month_not_pay    ,jdbcType=VARCHAR}
		 	, #{amt_not_pay          ,jdbcType=VARCHAR}
			, #{cnt_month_cannot_pay ,jdbcType=VARCHAR}
			, #{amt_cannot_pay       ,jdbcType=VARCHAR}
			, #{amt_pay_return       ,jdbcType=VARCHAR}
			, #{amt_pay_primium      ,jdbcType=VARCHAR}
			, #{amt_est_pns_month    ,jdbcType=VARCHAR}
			, #{amt_est_pns_year     ,jdbcType=VARCHAR}
			, #{start_receipt_yyyymm ,jdbcType=VARCHAR}
			, #{est_start_mbr_yyyymm ,jdbcType=VARCHAR}
			, #{est_end_mbr_yyyymm   ,jdbcType=VARCHAR}
			, #{cnt_month_est_mbr    ,jdbcType=VARCHAR}
			, #{amt_est_pns_pay      ,jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getScrRespPensionPayment" parameterType="com.koscom.scrap.model.ScrRespPensionPaymentVO" resultType="com.koscom.scrap.model.ScrRespPensionPaymentVO">
		SELECT NO_PERSON
			, CNT_MONTH_PAY
			, AMT_PAY
			, CNT_MONTH_NOT_PAY
			, AMT_NOT_PAY
			, CNT_MONTH_CANNOT_PAY
			, AMT_CANNOT_PAY
			, AMT_PAY_RETURN
			, AMT_PAY_PRIMIUM
			, AMT_EST_PNS_MONTH
			, AMT_EST_PNS_YEAR
			, START_RECEIPT_YYYYMM
			, EST_START_MBR_YYYYMM
			, EST_END_MBR_YYYYMM
			, CNT_MONTH_EST_MBR
			, AMT_EST_PNS_PAY
			, DT_FRT
		FROM SCR_RESP_PENSION_PAYMENT
		WHERE  NO_PERSON = #{no_person, jdbcType=VARCHAR}
	</select>
	
	<insert id="createScrRespPensionPaymentdtl" parameterType="com.koscom.scrap.model.ScrRespPensionPaymentdtlVO">
		INSERT INTO SCR_RESP_PENSION_PAYMENTDTL
		(
			  NO_PERSON
			, START_YYYYMM
			, END_YYYYMM
			, AMT_BASE_INCOME_MONTH
			, CNT_MONTH_PAY
			, AMT_PAY
			, CNT_MONTH_NOT_PAY
			, AMT_NOT_PAY
			, TYPE
			, ETC
			, DT_FRT
		) VALUES (
			#{no_person					, jdbcType=VARCHAR}
			, #{start_yyyymm			, jdbcType=VARCHAR}
			, #{end_yyyymm				, jdbcType=VARCHAR}
			, #{amt_base_income_month	, jdbcType=VARCHAR}
			, #{cnt_month_pay			, jdbcType=VARCHAR}
			, #{amt_pay					, jdbcType=VARCHAR}
			, #{cnt_month_not_pay		, jdbcType=VARCHAR}
			, #{amt_not_pay				, jdbcType=VARCHAR}
			, #{type					, jdbcType=VARCHAR}
			, #{etc						, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getScrRespPensionPaymentdtl" parameterType="com.koscom.scrap.model.ScrRespPensionPaymentdtlVO" resultType="com.koscom.scrap.model.ScrRespPensionPaymentdtlVO">
		SELECT NO_PERSON
			, START_YYYYMM
			, END_YYYYMM
			, AMT_BASE_INCOME_MONTH
			, CNT_MONTH_PAY
			, AMT_PAY
			, CNT_MONTH_NOT_PAY
			, AMT_NOT_PAY
			, TYPE
			, ETC
			, DT_FRT
		FROM SCR_RESP_PENSION_PAYMENTDTL
		WHERE  NO_PERSON = #{no_person, jdbcType=VARCHAR}
			AND START_YYYYMM >= #{start_yyyymm, jdbcType=VARCHAR}
			AND END_YYYYMM <![CDATA[<=]]>  #{end_yyyymm, jdbcType=VARCHAR}
		ORDER BY START_YYYYMM DESC
	</select>
	
	<insert id="createKcbReqNonfiInfo" parameterType="com.koscom.kcb.model.KcbReqNonfiInfoVO">
	
		<selectKey keyProperty="seq_kcb_reg" resultType="integer" order="BEFORE">
		    SELECT SEQ_KCB_REG.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO KCB_REQ_NONFI_INFO
		(
			  SEQ_KCB_REG
			, CD_REQ
			, NO_PERSON
			, SEQ_SCRAPING_RESULT
			, STATUS
			, DT_REG
			, DT_REQ
			, DT_SEND
			, CD_ERR
			, BIT_ERR
			, ID_FRT
			, DT_FRT
		) VALUES (
			#{seq_kcb_reg			, jdbcType=NUMERIC}
			, #{cd_req				, jdbcType=VARCHAR}
			, #{no_person			, jdbcType=VARCHAR}
			, #{seq_scraping_result	, jdbcType=NUMERIC}
			, #{status				, jdbcType=VARCHAR}
			, #{dt_reg				, jdbcType=VARCHAR}
			, #{dt_req				, jdbcType=VARCHAR}
			, #{dt_send				, jdbcType=VARCHAR}
			, #{cd_err				, jdbcType=VARCHAR}
			, #{bit_err				, jdbcType=VARCHAR}
			, #{id_frt				, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>
	
	<select id="getKcbReqNonfiInfo" parameterType="com.koscom.kcb.model.KcbReqNonfiInfoVO" resultType="com.koscom.kcb.model.KcbReqNonfiInfoVO">
		SELECT SEQ_KCB_REG
			, CD_REQ
			, NO_PERSON
			, SEQ_SCRAPING_RESULT
			, STATUS
			, DT_REG
			, DT_REQ
			, DT_SEND
			, CD_ERR
			, BIT_ERR
			, ID_FRT
			, DT_FRT 
		FROM KCB_REQ_NONFI_INFO A,
			(SELECT MAX(SEQ_KCB_REG) MAXSEQ 
			FROM KCB_REQ_NONFI_INFO 
			WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
			GROUP BY CD_REQ) B 
		WHERE  A.SEQ_KCB_REG = B.MAXSEQ
	</select>
	
	<update id="updateKcbReqNonfiInfo" parameterType="com.koscom.kcb.model.KcbReqNonfiInfoVO">
		UPDATE KCB_REQ_NONFI_INFO
		   SET STATUS = #{status, jdbcType=VARCHAR}
		   <if test="@com.koscom.util.MybatisUtil@isNotEmpty(dt_req)">
		      ,DT_REQ = #{dt_req, jdbcType=VARCHAR}
		   </if>
		   <if test="@com.koscom.util.MybatisUtil@isNotEmpty(dt_send)">
		      ,DT_SEND = #{dt_send, jdbcType=VARCHAR}
		   </if>
		      ,ID_LST = #{no_person, jdbcType=VARCHAR}
		      ,DT_LST = SYSDATE
		 WHERE SEQ_KCB_REG = (SELECT MAX(SEQ_KCB_REG) MAXSEQ 
								FROM KCB_REQ_NONFI_INFO 
								WHERE NO_PERSON = #{no_person, jdbcType=VARCHAR}
								AND CD_REQ = #{cd_req, jdbcType=VARCHAR})
	</update>
	
	<insert id="createBankApiDepositAnHistInfo" parameterType="com.koscom.scrap.model.sub.DepositAnListHistoryVO">
		INSERT INTO BANK_API_SVNGSVNIN_DTL
		(
			  NO_PERSON
			, AN
			, DT_TRD
			, TM_TRD
			, RND_TRD
			, AMT_TRD_MTH
			, AMT_DEP
			, AMT_WDRL
			, BALANCE
			, ABSTRACT
			, BRN_DEAL
			, ID_FRT
			, DT_FRT
		) VALUES (
			#{NO_PERSON, jdbcType=VARCHAR}
			, XX1.ENC_VARCHAR2_INS(#{AN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'BANK_API_DEPWDRL_DTL', 'AN')
			, #{DATE, jdbcType=VARCHAR}
			, #{TIME, jdbcType=VARCHAR}
			, #{BATCH, jdbcType=VARCHAR}
			, #{MONTH, jdbcType=VARCHAR}
			, #{IN_PAYMENT, jdbcType=VARCHAR}
			, #{OUT_PAYMENT, jdbcType=VARCHAR}
			, #{BALANCE, jdbcType=VARCHAR}
			, #{DESCRIPTION, jdbcType=VARCHAR}
			, #{DISTRIBUTOR, jdbcType=VARCHAR}
			, #{ID_FRT, jdbcType=VARCHAR}
			, SYSDATE
		)
	</insert>

	<update id="updateBankInterestByLoanAnInfo" parameterType="com.koscom.scrap.model.BankApiAnInfo">
		/* 은행금리 수정 */
		UPDATE DEBT_PERSONAL_REPAY_LIST R
		   SET R.BANK_INTEREST = #{interest_rate, jdbcType=VARCHAR} /* 은행금리 : 대출금리 */
		      ,ID_LST = #{no_person, jdbcType=VARCHAR}
		      ,DT_LST = SYSDATE
		 WHERE R.NO_MANAGE_INFO = (SELECT I.NO_MANAGE_INFO
									 FROM DEBT_PERSONAL_INFO I
									WHERE I.NO_PERSON    = #{no_person   , jdbcType=VARCHAR}  /* 회원번호 */
									  AND I.YMD_LOAN     = #{new_date    , jdbcType=VARCHAR}  /* 신규일자 */
									  AND I.YMD_LOANEND  = #{last_date   , jdbcType=VARCHAR}  /* 만기일자 */
									  AND I.AMT_CONTRACT = #{loan_ceiling, jdbcType=VARCHAR}) /* 대출한도액 */
		  AND R.REQ_YYYYMM = TO_CHAR(SYSDATE, 'yyyyMMdd')
	</update>
	
	<insert id="createBankScrap" parameterType="com.koscom.scrap.model.AppBankInfo">

		<selectKey keyProperty="SEQ_SCRAPING_RESULT" resultType="integer" order="BEFORE">
		    SELECT SEQ_SCRAPING_RESULT.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO TBL_RSLT_SCRAP
			(SEQ_SCRAPING_RESULT
			  	, INQUIRY_PATH
			  	, TERMS_AGREE
			  	, NO_PERSON
				, NO_BIZ_COMP
				, GOODS_CD
				, HP
				, NTNLTXSRVC_RESULT
				, HEALTH_INSU_RESULT
				, REGISTER_DT

			) VALUES (
				  #{SEQ_SCRAPING_RESULT, jdbcType=NUMERIC}
				  , #{INQUIRY_PATH, jdbcType=NUMERIC}
				  , #{TERMS_AGREE, jdbcType=NUMERIC}
				  , #{NO_PERSON, jdbcType=NUMERIC}
				  , #{NO_BIZ_COMP, jdbcType=NUMERIC}
				  , #{GOODS_CD, jdbcType=NUMERIC}
				  , #{HP, jdbcType=NUMERIC}
				  , '000'
				  , '000'
				  , SYSDATE
			)
	</insert>
	
	<insert id="createScrap" parameterType="com.koscom.scrap.model.Scrap">

		<selectKey keyProperty="SEQ_SCRAPING_RESULT" resultType="integer" order="BEFORE">
		    SELECT SEQ_SCRAPING_RESULT.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO TBL_RSLT_SCRAP
			(SEQ_SCRAPING_RESULT
			  	, INQUIRY_PATH
			  	, TERMS_AGREE
			  	, NO_PERSON
				, NO_BIZ_COMP
				, GOODS_CD
				, HP
				, NTNLTXSRVC_RESULT
				, HEALTH_INSU_RESULT
				, REGISTER_DT

			) VALUES (
				  #{SEQ_SCRAPING_RESULT, jdbcType=NUMERIC}
				  , #{INQUIRY_PATH, jdbcType=NUMERIC}
				  , #{TERMS_AGREE, jdbcType=NUMERIC}
				  , #{NO_PERSON, jdbcType=NUMERIC}
				  , #{NO_BIZ_COMP, jdbcType=NUMERIC}
				  , #{GOODS_CD, jdbcType=NUMERIC}
				  , #{HP, jdbcType=NUMERIC}
				  , '000'
				  , '000'
				  , SYSDATE
			)
	</insert>
	
	<update id="updateNhisScrapResult" parameterType="com.koscom.scrap.model.Scrap">
		UPDATE TBL_RSLT_SCRAP
			SET HEALTH_INSU_RESULT = #{HEALTH_INSU_RESULT, jdbcType=VARCHAR}
		WHERE SEQ_SCRAPING_RESULT = #{SEQ_SCRAPING_RESULT, jdbcType=NUMERIC}
	</update>
	
	<update id="updateNTSScrapResult" parameterType="com.koscom.scrap.model.Scrap">
		UPDATE TBL_RSLT_SCRAP
			SET NTNLTXSRVC_RESULT = #{NTNLTXSRVC_RESULT, jdbcType=VARCHAR}
		WHERE SEQ_SCRAPING_RESULT = #{SEQ_SCRAPING_RESULT, jdbcType=NUMERIC}
	</update>
	
	<insert id="insertReqHealth" parameterType="com.koscom.scrap.model.NHISInfo">

   	    <selectKey keyProperty="SEQ_HEALTH_INSU" resultType="integer" order="BEFORE">
		    SELECT SEQ_HEALTH_INSU.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO TBL_REQ_HEALTH
			(SEQ_HEALTH_INSU
				, SEQ_SCRAPING_RESULT
				, INQUIRY_START_YEARMONTH
				, INQUIRY_END_YEARMONTH
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_HEALTH_INSU, jdbcType=NUMERIC}
				, #{SEQ_SCRAPING_RESULT, jdbcType=VARCHAR}
				, #{INQUIRY_START_YEARMONTH, jdbcType=VARCHAR}
				, #{INQUIRY_END_YEARMONTH, jdbcType=VARCHAR}
				, #{ErrorCode, jdbcType=VARCHAR}
				, #{ErrorMessage, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertRespHealthPayment" parameterType="com.koscom.scrap.model.sub.NHISPaymentResultDetail">

		INSERT INTO TBL_RESP_HEALTH_PAYMENT
			(SEQ_HEALTH_INSU
				, ORDER_PAY_CONFIRM
				, PBLS_NO
				, PAYER_NO
				, MEMBER_DIVISION
				, COMP_NM
				, GAIN_YMD
				, LOSS_DD
				, BELONG_BRANCH
				, MEMBER_NAME
				, BGN
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_HEALTH_INSU, jdbcType=NUMERIC}
				, #{ORDER_PAY_CONFIRM, jdbcType=NUMERIC}
				, #{PBLS_NO, jdbcType=VARCHAR}
				, #{PAYER_NO, jdbcType=VARCHAR}
				, #{MEMBER_DIVISION, jdbcType=VARCHAR}
				, #{COMP_NM, jdbcType=VARCHAR}
				, #{GAIN_YMD, jdbcType=VARCHAR}
				, #{LOSS_DD, jdbcType=VARCHAR}
				, #{BELONG_BRANCH, jdbcType=VARCHAR}
				, #{MEMBER_NAME, jdbcType=VARCHAR}
				, #{BGN, jdbcType=VARCHAR}
				, #{ErrorCode, jdbcType=VARCHAR}
				, #{ErrorMessage, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertRespHealthPaymentDtl" parameterType="com.koscom.scrap.model.sub.NHISPaymentResultDetailSub">

		INSERT INTO TBL_RESP_HEALTH_PAYMENTDTL
			(SEQ_HEALTH_INSU
				, ORDER_PAY_CONFIRM
				, ORDER_PAY_DETAIL
				, PAY_YEARMONTH
				, NOTICE_AMT_HEALTH_INSU_AMT
				, NTC_AMT_LNGTRM_CR_INS_AMT
				, PAY_AMT_HEALTH_INSU_AMT
				, PAY_AMT_LONGTERM_CARE_INSU_AMT
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_HEALTH_INSU, jdbcType=NUMERIC}
				, #{ORDER_PAY_CONFIRM, jdbcType=NUMERIC}
				, #{ORDER_PAY_DETAIL, jdbcType=NUMERIC}
				, #{PAY_YEARMONTH, jdbcType=VARCHAR}
				, #{NOTICE_AMT_HEALTH_INSU_AMT, jdbcType=NUMERIC}
				, #{NTC_AMT_LNGTRM_CR_INS_AMT, jdbcType=NUMERIC}
				, #{PAY_AMT_HEALTH_INSU_AMT, jdbcType=NUMERIC}
				, #{PAY_AMT_LONGTERM_CARE_INSU_AMT, jdbcType=NUMERIC}
				, SYSDATE
			)
	</insert>

	<insert id="insertRespQlfcti" parameterType="com.koscom.scrap.model.sub.NHISQlfctngainlosResult">

		INSERT INTO TBL_RESP_HEALTH_QLFCTN
			(SEQ_HEALTH_INSU
				, NOTICE_NO
				, RECEIVE_INSTITUTION_NM
				, QUALIFICATION_CONFIRM_REQ_YMD
				, CARD_NO
				, COMP_MANAGEMENT_NO
				, MEMBER_NAME
				, MEMBER_SSN
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_HEALTH_INSU, jdbcType=NUMERIC}
				, #{NOTICE_NO, jdbcType=VARCHAR}
				, #{RECEIVE_INSTITUTION_NM, jdbcType=VARCHAR}
				, #{QUALIFICATION_CONFIRM_REQ_YMD, jdbcType=VARCHAR}
				, #{CARD_NO, jdbcType=VARCHAR}
				, #{COMP_MANAGEMENT_NO, jdbcType=VARCHAR}
				, #{MEMBER_NAME, jdbcType=VARCHAR}
				, XX1.ENC_VARCHAR2_INS(#{MEMBER_SSN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'TBL_RESP_HEALTH_QLFCTN', 'MEMBER_SSN')
				, #{ErrorCode, jdbcType=VARCHAR}
				, #{ErrorMessage, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertRespQlfctndt" parameterType="com.koscom.scrap.model.sub.NHISQlfctngainlosResultDetail">
		INSERT INTO TBL_RESP_HEALTH_QLFCTNDTL
			(SEQ_HEALTH_INSU
				, ORDER_QUALIFICATION_CONFIRM
				, QLFCTN_CNFRM_QLFCTN_GN_D
				, QLFCTN_CNFRM_QLFCTN_LS_D
				, QLFCTN_CNFRM_SLR_STP_CS_TRM
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_HEALTH_INSU, jdbcType=NUMERIC}
				, #{ORDER_QUALIFICATION_CONFIRM, jdbcType=VARCHAR}
				, #{QLFCTN_CNFRM_QLFCTN_GN_D, jdbcType=VARCHAR}
				, #{QLFCTN_CNFRM_QLFCTN_LS_D, jdbcType=VARCHAR}
				, #{QLFCTN_CNFRM_SLR_STP_CS_TRM, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertRespQlfctngainlos" parameterType="com.koscom.scrap.model.sub.NHISQlfctiResultDetail">

		INSERT INTO TBL_RESP_HEALTH_QLFCTNGAINLOSS
			(SEQ_QUALIFICATION_GAINSNLOSSES
				, SEQ_HEALTH_INSU
				, MEMBER_DIVISION
				, BIZ_NM
				, GAIN_YMD
				, LOSS_YMD
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_QUALIFICATION_GAINSNLOSSES, jdbcType=NUMERIC}
				, #{SEQ_HEALTH_INSU, jdbcType=NUMERIC}
				, #{MEMBER_DIVISION, jdbcType=VARCHAR}
				, #{BIZ_NM, jdbcType=VARCHAR}
				, #{GAIN_YMD, jdbcType=VARCHAR}
				, #{LOSS_YMD, jdbcType=VARCHAR}
				, #{ErrorCode, jdbcType=VARCHAR}
				, #{ErrorMessage, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertBizStatus" parameterType="com.koscom.scrap.model.sub.NTSBizStatusResult">

		INSERT INTO TBL_RESP_BIZSTATUS
			( SEQ_REQ
				, INQUIRY_TARGET_BIZ_NO
				, CLOSE_DD
				, SITE_MSG_CD
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{INQUIRY_TARGET_BIZ_NO, jdbcType=VARCHAR}
				, #{CLOSE_DD, jdbcType=VARCHAR}
				, #{SITE_MSG_CD, jdbcType=VARCHAR}
				, #{ErrorCode, jdbcType=VARCHAR}
				, #{ErrorMessage, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertTaxPayment" parameterType="com.koscom.scrap.model.sub.NTSTaxPaymentResult">

		INSERT INTO TBL_RESP_CERT_TAXPAYMENT
			( SEQ_REQ
				, PBLS_NO
				, CORP_NM
				, BIZ_LICENCE
				, CEO
				, SSN
				, ADDR1
				, ADDR2
				, CERT_PBLS_TARGET_RCPT_TERM
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{PBLS_NO, jdbcType=VARCHAR}
				, #{CORP_NM, jdbcType=VARCHAR}
				, #{BIZ_LICENCE, jdbcType=VARCHAR}
				, #{CEO, jdbcType=VARCHAR}
				, XX1.ENC_VARCHAR2_INS(#{SSN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'TBL_RESP_CERT_TAXPAYMENT', 'SSN')
				, #{ADDR1, jdbcType=VARCHAR}
				, #{ADDR2, jdbcType=VARCHAR}
				, #{CERT_PBLS_TARGET_RCPT_TERM, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertTaxPaymentDtl" parameterType="com.koscom.scrap.model.sub.NTSTaxPaymentDtl">

		INSERT INTO TBL_RESP_CERT_TAXPAYPMNTDTL
			( SEQ_REQ
				, ORDER_TAXPMNT_CERT_DETAIL
				, REVERSION_YEAR
				, ITEMS
				, PAY_DD
				, SUM
				, INLAND_TAX
				, FRMNGNFSNG_SPECIAL_TAX
				, EDUCATION_DEFENSE_TAX
				, ADDED_AMT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{ORDER_TAXPMNT_CERT_DETAIL, jdbcType=NUMERIC}
				, #{REVERSION_YEAR, jdbcType=VARCHAR}
				, #{ITEMS, jdbcType=VARCHAR}
				, #{PAY_DD, jdbcType=VARCHAR}
				, #{SUM, jdbcType=VARCHAR}
				, #{INLAND_TAX, jdbcType=VARCHAR}
				, #{FRMNGNFSNG_SPECIAL_TAX, jdbcType=VARCHAR}
				, #{EDUCATION_DEFENSE_TAX, jdbcType=VARCHAR}
				, #{ADDED_AMT, jdbcType=VARCHAR}
			)
	</insert>

	<insert id="insertCertFinStat" parameterType="com.koscom.scrap.model.sub.NTSFinanceResult">

		INSERT INTO TBL_RESP_CERT_FINANCESTAT
			(SEQ_REQ
				, PBLS_NO
				, CORP_NM
				, BIZ_LICENCE
				, CEO
				, SSN
				, COMP_ADDR1
				, BIZTYPE
				, ITEMS
				, REVERSION_YEAR
				, PBLS_INSTITUTION_NM
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{PBLS_NO, jdbcType=VARCHAR}
				, #{CORP_NM, jdbcType=VARCHAR}
				, #{BIZ_LICENCE, jdbcType=VARCHAR}
				, #{CEO, jdbcType=VARCHAR}
				, XX1.ENC_VARCHAR2_INS(#{SSN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'TBL_RESP_CERT_FINANCESTAT', 'SSN')
				, #{COMP_ADDR1, jdbcType=VARCHAR}
				, #{BIZTYPE, jdbcType=VARCHAR}
				, #{ITEMS, jdbcType=VARCHAR}
				, #{REVERSION_YEAR, jdbcType=VARCHAR}
				, #{PBLS_INSTITUTION_NM, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertCertFinStatDtl" parameterType="com.koscom.scrap.model.sub.NTSFinanceStatusDtl">

		INSERT INTO TBL_RESP_CERT_FINANCESTATDTL
			(SEQ_REQ
				, ORDER_FINANCIALSTAT
				, ASSETS_TOTAL_AMT
				, DEBT_TOTAL_AMT
				, CAPITAL_AMT
				, THISTERM_NETINCOME
				, CAPITAL_TOTAL_AMT
				, DEBT_CAPITAL_TOTAL_SUM
				, REGISTER_DT
				, REVERSION_YEAR
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{ORDER_FINANCIALSTAT, jdbcType=NUMERIC}
				, #{ASSETS_TOTAL_AMT, jdbcType=NUMERIC}
				, #{DEBT_TOTAL_AMT, jdbcType=NUMERIC}
				, #{CAPITAL_AMT, jdbcType=NUMERIC}
				, #{THISTERM_NETINCOME, jdbcType=NUMERIC}
				, #{CAPITAL_TOTAL_AMT, jdbcType=NUMERIC}
				, #{DEBT_CAPITAL_TOTAL_SUM, jdbcType=NUMERIC}
				, SYSDATE
				, #{REVERSION_YEAR, jdbcType=VARCHAR}
			)
	</insert>

	<insert id="insertReqCertification" parameterType="com.koscom.scrap.model.NTSInfo">

      	<selectKey resultType="integer" keyProperty="SEQ_REQ" order="BEFORE">
		    SELECT SEQ_REQ.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO TBL_REQ_CERTIFICATION
			(SEQ_REQ
				, RCPT_START_MONTH
				, RCPT_END_MONTH
				, TAXATION_START_MONTH
				, TAXATION_END_MONTH
				, TAXATION_YEAR
				, CERT_DIVISION
				, OPEN_YN_CD
				, ERROR_CD
				, ERROR_MSG
				, SEQ_SCRAPING_RESULT
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{RCPT_START_MONTH, jdbcType=VARCHAR}
				, #{RCPT_END_MONTH, jdbcType=VARCHAR}
				, #{TAXATION_START_MONTH, jdbcType=VARCHAR}
				, #{TAXATION_END_MONTH, jdbcType=VARCHAR}
				, #{TAXATION_YEAR, jdbcType=VARCHAR}
				, #{CERT_DIVISION, jdbcType=VARCHAR}
				, #{OPEN_YN_CD, jdbcType=VARCHAR}
				, #{ErrorCode, jdbcType=VARCHAR}
				, #{ErrorMessage, jdbcType=VARCHAR}
				, #{SEQ_SCRAPING_RESULT, jdbcType=NUMERIC}
				, SYSDATE
			)
	</insert>

	<insert id="insertCertVat" parameterType="com.koscom.scrap.model.sub.NTSVatResult">

		INSERT INTO TBL_RESP_CERT_VAT
			(SEQ_REQ
				, PBLS_NO
				, CORP_NM
				, BIZ_LICENCE
				, CEO
				, SSN
				, COMP_ADDR1
				, BIZTYPE
				, ITEMS
				, PBLS_INSTITUTION_NM
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{PBLS_NO, jdbcType=VARCHAR}
				, #{CORP_NM, jdbcType=VARCHAR}
				, #{BIZ_LICENCE, jdbcType=VARCHAR}
				, #{CEO, jdbcType=VARCHAR}
				, XX1.ENC_VARCHAR2_INS(#{SSN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'TBL_RESP_CERT_VAT', 'SSN')
				, #{COMP_ADDR1, jdbcType=VARCHAR}
				, #{BIZTYPE, jdbcType=VARCHAR}
				, #{ITEMS, jdbcType=VARCHAR}
				, #{PBLS_INSTITUTION_NM, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertCertVatDtl" parameterType="com.koscom.scrap.model.sub.NTSVatResultDtl">

		INSERT INTO TBL_RESP_CERT_VATDTL
			(SEQ_REQ
				, ORDER_VAT
				, TAXATION_START_DD
				, TAXATION_END_DD
				, SALES_TAXATION_STANDARD_SUM
				, SALES_TXTN_STNDRD_TXTN_AMT
				, SLS_TXTN_STNDRD_EXMPTN_AMT
				, PAY_TAX_AMT
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{ORDER_VAT, jdbcType=NUMERIC}
				, #{TAXATION_START_DD, jdbcType=VARCHAR}
				, #{TAXATION_END_DD, jdbcType=VARCHAR}
				, #{SALES_TAXATION_STANDARD_SUM, jdbcType=VARCHAR}
				, #{SALES_TXTN_STNDRD_TXTN_AMT, jdbcType=VARCHAR}
				, #{SLS_TXTN_STNDRD_EXMPTN_AMT, jdbcType=VARCHAR}
				, #{PAY_TAX_AMT, jdbcType=NUMERIC}
				, SYSDATE
			)
	</insert>

	<insert id="insertBizCert" parameterType="com.koscom.scrap.model.sub.NTSBizCertResult">

		INSERT INTO TBL_RESP_CERT_BIZCERT
			(SEQ_REQ
				, PBLS_NO
				, CORP_NM
				, BIZ_LICENCE
				, CEO_NAME
				, SSN
				, COMP_ADDR1
				, OPEN_DD
				, BIZ_REGISTER_DD
				, PBLS_INSTITUTION_NM
				, RCPT_NO
				, RESPONSIBILITY_DEPT
				, CONTACT_PH
				, PBLS_YMD
				, TAXATION_TYPE
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{PBLS_NO, jdbcType=VARCHAR}
				, #{CORP_NM, jdbcType=VARCHAR}
				, #{BIZ_LICENCE, jdbcType=VARCHAR}
				, #{CEO_NAME, jdbcType=VARCHAR}
				, XX1.ENC_VARCHAR2_INS(#{SSN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'TBL_RESP_CERT_BIZCERT', 'SSN')
				, #{COMP_ADDR1, jdbcType=VARCHAR}
				, #{OPEN_DD, jdbcType=VARCHAR}
				, #{BIZ_REGISTER_DD, jdbcType=VARCHAR}
				, #{PBLS_INSTITUTION_NM, jdbcType=VARCHAR}
				, #{RCPT_NO, jdbcType=VARCHAR}
				, #{RESPONSIBILITY_DEPT, jdbcType=VARCHAR}
				, #{CONTACT_PH, jdbcType=VARCHAR}
				, #{PBLS_YMD, jdbcType=VARCHAR}
				, #{TAXATION_TYPE, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertRespIncome" parameterType="com.koscom.scrap.model.sub.NTSIncomeResult">

		INSERT INTO TBL_RESP_INCOME
			(SEQ_REQ
				, PBLS_NO
				, ADDR
				, NAME
				, SSN
				, PBLS_INSTITUTION_NM
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{PBLS_NO, jdbcType=VARCHAR}
				, #{ADDR1, jdbcType=VARCHAR}
				, #{NAME, jdbcType=VARCHAR}
				, XX1.ENC_VARCHAR2_INS(#{SSN, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'TBL_RESP_INCOME', 'SSN')
				, #{PBLS_INSTITUTION_NM, jdbcType=VARCHAR}
				, #{ErrorCode, jdbcType=VARCHAR}
				, #{ErrorMessage, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<insert id="insertRespIncomeDtl" parameterType="com.koscom.scrap.model.sub.NTSIncomeResultDetail">

		INSERT INTO TBL_RESP_INCOME_DTL
			(SEQ_REQ
				, ORDER_INCOME_CERT_DETAIL
				, INCOME_DIVISION
				, CORP_NM
				, REVERSION_YEAR
				, BIZ_LICENCE
				, INCOME_AMT
				, TOTAL_DECISION_TAX_AMT
				, REGISTER_DT
			)
		VALUES
			(#{SEQ_REQ, jdbcType=NUMERIC}
				, #{ORDER_INCOME_CERT_DETAIL, jdbcType=NUMERIC}
				, #{INCOME_DIVISION, jdbcType=VARCHAR}
				, #{CORP_NM, jdbcType=VARCHAR}
				, #{REVERSION_YEAR, jdbcType=VARCHAR}
				, #{BIZ_LICENCE, jdbcType=VARCHAR}
				, #{INCOME_AMT, jdbcType=VARCHAR}
				, #{TOTAL_DECISION_TAX_AMT, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>
	<select id="getRespCertFinancestat" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespCertFinancestatVO">
		SELECT seq_req
             , reversion_year
             , inquiry_result
             , pbls_no
             , corp_nm
             , biz_licence
             , ceo
             , comp_addr1
             , comp_addr2
             , biztype
             , items
             , pbls_institution_nm
             , error_cd
             , error_msg
             , register_dt
          FROM TBL_RESP_CERT_FINANCESTAT
         WHERE SEQ_REQ = FN_CERT_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespCertFinancestatdtl" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespCertFinancestatdtlVO">
		SELECT seq_req
             , reversion_year
             , order_financialstat
             , result_division
             , assets_total_amt
             , debt_total_amt
             , capital_amt
             , thisterm_netincome
             , capital_total_amt
             , debt_capital_total_sum
             , register_dt
          FROM TBL_RESP_CERT_FINANCESTATDTL
         WHERE SEQ_REQ = FN_CERT_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespCertVat" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespCertVatVO">
		SELECT seq_req
             , inquiry_result
             , pbls_no
             , corp_nm
             , biz_licence
             , ceo
             , XX1.DEC_VARCHAR2_SEL(ssn, '10', 'FS_ARIA', 'TBL_RESP_CERT_VAT', 'SSN') AS ssn
             , comp_addr1
             , comp_addr2
             , biztype
             , items
             , pbls_institution_nm
             , error_cd
             , error_msg
             , register_dt
          FROM TBL_RESP_CERT_VAT
         WHERE SEQ_REQ = FN_CERT_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespCertVatdtl" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespCertVatdtlVO">
		SELECT seq_req
             , order_vat
             , taxation_start_dd
             , taxation_end_dd
             , sales_taxation_standard_sum
             , sales_txtn_stndrd_txtn_amt
             , sls_txtn_stndrd_exmptn_amt
             , pay_tax_amt
             , register_dt
          FROM TBL_RESP_CERT_VATDTL
         WHERE SEQ_REQ = FN_CERT_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespIncome" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespIncomeVO">
		SELECT seq_req
             , pbls_no
             , addr
             , name
             , XX1.DEC_VARCHAR2_SEL(ssn, '10', 'FS_ARIA', 'TBL_RESP_INCOME', 'SSN') AS ssn
             , cert_pbls_target_rcpt_term
             , pbls_institution_nm
             , pbls_ymd
             , error_cd
             , error_msg
             , register_dt
          FROM TBL_RESP_INCOME
         WHERE SEQ_REQ = FN_CERT_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespIncomedtl" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespIncomeDtlVO">
		SELECT seq_req
             , order_income_cert_detail
             , income_division
             , corp_nm
             , reversion_year
             , biz_licence
             , income_amt
             , total_decision_tax_amt
             , register_dt
          FROM TBL_RESP_INCOME_DTL
         WHERE SEQ_REQ = FN_CERT_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespHealthPayment" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespHealthPaymentVO">
		SELECT seq_health_insu
             , order_pay_confirm
             , inquiry_result
             , pbls_no
             , payer_no
             , member_division
             , comp_nm
             , gain_ymd
             , loss_dd
             , belong_branch
             , member_name
             , bgn
             , error_cd
             , error_msg
             , register_dt
          FROM TBL_RESP_HEALTH_PAYMENT
         WHERE SEQ_HEALTH_INSU = FN_HEALTH_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespHealthPaymentdtl" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespHealthPaymentdtlVO">
		SELECT seq_health_insu
             , order_pay_confirm
             , order_pay_detail
             , pay_yearmonth
             , notice_amt_health_insu_amt
             , ntc_amt_lngtrm_cr_ins_amt
             , pay_amt_health_insu_amt
             , pay_amt_longterm_care_insu_amt
             , register_dt
          FROM TBL_RESP_HEALTH_PAYMENTDTL
         WHERE SEQ_HEALTH_INSU = FN_HEALTH_KEY(#{no_person, jdbcType=VARCHAR})
		 ORDER BY PAY_YEARMONTH DESC
	</select>
	<select id="getRespHealthQlfctn" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespHealthQlfctnVO">
		SELECT seq_health_insu
             , inquiry_result
             , notice_no
             , receive_institution_nm
             , qualification_confirm_req_ymd
             , card_no
             , comp_management_no
             , member_name
             , XX1.DEC_VARCHAR2_SEL(member_ssn, '10', 'PINSET1', 'TBL_RESP_HEALTH_QLFCTN', 'MEMBER_SSN')
             , error_cd
             , error_msg
             , register_dt
          FROM TBL_RESP_HEALTH_QLFCTN
         WHERE SEQ_HEALTH_INSU = FN_HEALTH_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespHealthQlfctndtl" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespHealthQlfctndtlVO">
		SELECT seq_health_insu
             , order_qualification_confirm
             , qlfctn_cnfrm_qlfctn_gn_d
             , qlfctn_cnfrm_qlfctn_ls_d
             , qlfctn_cnfrm_slr_stp_cs_trm
             , register_dt
          FROM TBL_RESP_HEALTH_QLFCTNDTL
         WHERE SEQ_HEALTH_INSU = FN_HEALTH_KEY(#{no_person, jdbcType=VARCHAR})
	</select>
	<select id="getRespHealthQlfctngainloss" parameterType="java.lang.String" resultType="com.koscom.scrap.model.RespHealthQlfctngainlossVO">
		SELECT seq_health_insu
             , seq_qualification_gainsnlosses
             , inquiry_result
             , biz_nm
             , member_division
             , gain_ymd
             , loss_ymd
             , error_cd
             , error_msg
             , register_dt
          FROM TBL_RESP_HEALTH_QLFCTNGAINLOSS
         WHERE SEQ_HEALTH_INSU = FN_HEALTH_KEY(#{no_person, jdbcType=VARCHAR})
	</select>

	<insert id="insertReqCarInfo" parameterType="com.koscom.scrap.model.ReqCarInfo">

		<selectKey keyProperty="seq_car_register" resultType="integer" order="BEFORE">
		    SELECT SEQ_CAR_REGISTER.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO TBL_REQ_CAR_REGISTER
			(
			  	 NO_PERSON
			  	, SEQ_CAR_REGISTER
			  	, SEQ_SCRAPING_RESULT
				, WORKTYPE
				, CAR_NUM
				, OWNER_NAME
				, VIEW_YN_SECURIITY
				, VIEW_YN_ADDRESS
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT

			) VALUES (
				  #{no_person, jdbcType=NUMERIC}
				  , #{seq_car_register, jdbcType=NUMERIC}
				  , SEQ_SCRAPING_RESULT.NEXTVAL
				  , #{worktype, jdbcType=NUMERIC}
				  , XX1.ENC_VARCHAR2_INS(#{car_num, jdbcType=NUMERIC}, '11', 'FS_ARIA', 'TBL_REQ_CAR_REGISTER', 'CAR_NUM')
				  , #{owner_name, jdbcType=NUMERIC}
				  , #{view_yn_securiity, jdbcType=NUMERIC}
				  , #{view_yn_address, jdbcType=NUMERIC}
				  , #{error_cd, jdbcType=NUMERIC}
				  , #{error_msg, jdbcType=NUMERIC}
				  , SYSDATE
			)
	</insert>
	<insert id="insertRespCarInfo" parameterType="com.koscom.scrap.model.RespCarInfo">

		INSERT INTO TBL_RESP_CAR_REGISTER
			(
			  	 SEQ_CAR_REGISTER
			  	, BOND_VALUE
			  	, DEBTOR_NAME
				, OWNER_NAME
				, EXPIRY_DATE
				, WORKTYPE
				, RECEIPT_DATE
				, SECURITY_NO
				, MORTGAGE_NAME
				, RESULT_CD
				, CAR_VINARY_NO
				, ORG_PHONE
				, CAR_NUM
				, RESULT_MG
				, ORG_NAME
				, FILENAME
				, MORTGAGEE_NAME
				, MORTGAGE_DATE
				, RECEIPT_NO
				, MORTGAGE_NO
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT

			) VALUES (
				  #{SEQ_CAR_REGISTER, jdbcType=NUMERIC}
				  , #{BOND_VALUE, jdbcType=NUMERIC}
				  , #{DEBTOR_NAME, jdbcType=NUMERIC}
				  , #{OWNER_NAME, jdbcType=NUMERIC}
				  , #{EXPIRY_DATE, jdbcType=NUMERIC}
				  , #{WORKTYPE, jdbcType=NUMERIC}
				  , #{RECEIPT_DATE, jdbcType=NUMERIC}
				  , #{SECURITY_NO, jdbcType=NUMERIC}
				  , #{MORTGAGE_NAME, jdbcType=NUMERIC}
				  , #{RESULT_CD, jdbcType=NUMERIC}
				  , #{CAR_VINARY_NO, jdbcType=NUMERIC}
				  , #{ORG_PHONE, jdbcType=NUMERIC}
				  , XX1.ENC_VARCHAR2_INS(#{CAR_NUM, jdbcType=NUMERIC}, '11', 'FS_ARIA', 'TBL_RESP_CAR_REGISTER', 'CAR_NUM')
				  , #{RESULT_MG, jdbcType=NUMERIC}
				  , #{ORG_NAME, jdbcType=NUMERIC}
				  , #{FILENAME, jdbcType=NUMERIC}
				  , #{MORTGAGEE_NAME, jdbcType=NUMERIC}
				  , #{MORTGAGE_DATE, jdbcType=NUMERIC}
				  , #{RECEIPT_NO, jdbcType=NUMERIC}
				  , #{MORTGAGE_NO, jdbcType=NUMERIC}
				  , #{ERROR_CD, jdbcType=NUMERIC}
				  , #{ERROR_MSG, jdbcType=NUMERIC}
				  , SYSDATE
			)
	</insert>

	<insert id="insertReqRealEstateInfo" parameterType="com.koscom.scrap.model.ReqRealEstateInfo">

		<selectKey keyProperty="seq_realstate_register" resultType="integer" order="BEFORE">
		    SELECT SEQ_REALSTATE_REGISTER.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO TBL_REQ_REALSTATE_REGISTER
			(
			  	 NO_PERSON
			  	, SEQ_REALSTATE_REGISTER
			  	, SEQ_SCRAPING_RESULT
				, SEARCH_GUBUN
				, REAL_ESTATE_GUBUN
				, REGION_1
				, REGION_2
				, REGION_3
				, BUILDING_NAME
				, BUILDING_NO
				, ROOM_NO
				, STREET_REGION
				, STREET_NAME
				, STREET_NO
				, REAL_ESTATE_NO
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT

			) VALUES (
				  #{no_person, jdbcType=NUMERIC}
				  , #{seq_realstate_register, jdbcType=NUMERIC}
				  , SEQ_SCRAPING_RESULT.NEXTVAL
				  , #{search_gubun, jdbcType=NUMERIC}
				  , #{real_estate_gubun, jdbcType=NUMERIC}
				  , #{region_1, jdbcType=NUMERIC}
				  , #{region_2, jdbcType=NUMERIC}
				  , #{region_3, jdbcType=NUMERIC}
				  , #{building_name, jdbcType=NUMERIC}
				  , #{building_no, jdbcType=NUMERIC}
				  , #{room_no, jdbcType=NUMERIC}
				  , #{street_region, jdbcType=NUMERIC}
				  , #{street_name, jdbcType=NUMERIC}
				  , #{street_no, jdbcType=NUMERIC}
				  , #{real_estate_no, jdbcType=NUMERIC}
				  , #{error_cd, jdbcType=NUMERIC}
				  , #{error_msg, jdbcType=NUMERIC}
				  , SYSDATE
			)
	</insert>
	<insert id="insertRespRealEstateInfo" parameterType="com.koscom.scrap.model.RespRealEstateInfo">

		INSERT INTO TBL_RESP_REALSTATE_REGISTER
			(
			  	 SEQ_REALSTATE_REGISTER
			  	, REAL_ESTATE_OWNER
			  	, REAL_ESTATE_ADDRESS
				, REAL_ESTATE_STATE
				, REAL_ESTATE_NO
				, ERROR_CD
				, ERROR_MSG
				, REGISTER_DT

			) VALUES (
				  #{SEQ_REALSTATE_REGISTER, jdbcType=NUMERIC}
				  , #{REAL_ESTATE_OWNER, jdbcType=NUMERIC}
				  , #{REAL_ESTATE_ADDRESS, jdbcType=NUMERIC}
				  , #{REAL_ESTATE_STATE, jdbcType=NUMERIC}
				  , #{REAL_ESTATE_NO, jdbcType=NUMERIC}
				  , #{ERRCODE, jdbcType=NUMERIC}
				  , #{ERRMSG, jdbcType=NUMERIC}
				  , SYSDATE
			)
	</insert>
</mapper>
