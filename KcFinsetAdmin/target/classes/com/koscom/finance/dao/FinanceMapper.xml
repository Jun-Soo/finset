<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.finance.dao.FinanceMapper">

	<select id="getSeqEdocNo" parameterType="java.lang.String" resultType="java.lang.Integer">
		/* com.koscom.finance.dao.FinanceMapper.getSeqEdocNo : */
		SELECT SEQ_EDOC_NO.nextval AS SEQ FROM DUAL
		/*SELECT LPAD(SEQ_EDOC_NO.nextval, 10,'0') AS SEQ FROM DUAL*/
<!-- 		SELECT LPAD(tibero.SEQ_EDOC_NO.nextval, 10,'0') AS SEQ FROM DUAL -->
	</select>
	
	<select id="getNoApplyFromFcReq" parameterType="com.koscom.finance.model.TxFcReceiveVO" resultType="java.lang.String">	
		/* com.koscom.finance.dao.FinanceMapper.getNoApplyFromFcReq : */
		select
			apply_info.no_apply 
		from  apply_info, tx_fc_transmit  
		where 
			apply_info.no_bunch = tx_fc_transmit.no_bunch and 
			tx_fc_transmit.no_fc_req = #{no_fc_req , jdbcType=VARCHAR}
	</select>
	

	<insert id="insertTxFcTransmit">
		/* com.koscom.finance.dao.FinanceMapper.insertTxFcTransmit : */
		<selectKey keyProperty="no_bunch" resultType="string" order="BEFORE">
			(SELECT LPAD(NVL(TX_FC_TRANSMIT_SEQUENCE.NEXTVAL,0),20,'0') FROM DUAL)
		</selectKey>
		INSERT INTO tx_fc_transmit
			(	      no_bunch
					, TX_CD_FC
					, TX_NO_EDOC
					, TX_TYPE_EDOC
					, HD_TID
					, HD_LENGTH
					, HD_CD_SERVICE
					, HD_CD_IF
					, HD_CD_RESULT
					, HD_MSG_ERROR
					, HD_DT_SEND
					, HD_FILLER
					, CD_ONOFF
					, SSN_PERSON
					, NM_PERSON
					, CD_GOODS
					, CD_USED_AMT
					, AMT_WANTED
					, CD_SEX
					, EMAIL
					, PH1_HOME
					, PH2_HOME
					, PH3_HOME
					, CD_LIVE_AREA
					, POST_HOME
					, ADDR1_HOME
					, ADDR2_HOME
					, NO_MANAGE_HOME
					, HP1
					, HP2
					, HP3
					, CD_MARRY
					, YMD_BIRTH
					, YN_DUALWORK
					, YMD_HOUSE_HOME
					, CNT_HOUSE_HOME
					, CD_HOUSE_TYPE
					, CD_LIVE_TYPE_HOME
					, AMT_RENT_MONTHLY_HOME
					, AMT_YEAR_INCOME
					, CD_JOB
					, NM_COMP
					, YMD_START_COMP
					, JOB_TERM_MONTH
					, CD_JOB_COMP
					, CD_EMPLOYEE_TYPE
					, CD_JOB_PROOF
					, CD_INCOME_PROOF
					, CD_HP_CO
					, CD_ARMY
					, CD_JOB_CLASS
					, NO_BIZ_COMP
					, NO_COMP_SEQ
					, KCB_DI
					, CD_CERTIFY_PERSON
					, NO_FC_REQ
					, PH1_COMP
					, PH2_COMP
					, PH3_COMP
					, ETC_FIELD1
					, ID_FRT
					, DT_FRT
					, ID_LST
					, DT_LST
			) VALUES (
				      #{no_bunch             , jdbcType=VARCHAR}
					, #{tx_cd_fc              , jdbcType=VARCHAR}
					, #{tx_no_edoc            , jdbcType=VARCHAR}
					, #{tx_type_edoc          , jdbcType=VARCHAR}
					, #{hd_tid                , jdbcType=VARCHAR}
					, #{hd_length             , jdbcType=VARCHAR}
					, #{hd_cd_service         , jdbcType=VARCHAR}
					, #{hd_cd_if              , jdbcType=VARCHAR}
					, #{hd_cd_result          , jdbcType=VARCHAR}
					, #{hd_msg_error          , jdbcType=VARCHAR}
					, #{hd_dt_send            , jdbcType=VARCHAR}
					, #{hd_filler             , jdbcType=VARCHAR}
					, #{cd_onoff              , jdbcType=VARCHAR}
					, XX1.ENC_VARCHAR2_INS(#{ssn_person, jdbcType=VARCHAR}, '11', 'FS_ARIA', 'TX_FC_TRANSMIT', 'SSN_PERSON')
					, #{nm_person             , jdbcType=VARCHAR}
					, #{cd_goods              , jdbcType=VARCHAR}
					, #{cd_used_amt           , jdbcType=VARCHAR}
					, #{amt_wanted            , jdbcType=VARCHAR}
					, #{cd_sex                , jdbcType=VARCHAR}
					, #{email                 , jdbcType=VARCHAR}
					, #{ph1_home              , jdbcType=VARCHAR}
					, #{ph2_home              , jdbcType=VARCHAR}
					, #{ph3_home              , jdbcType=VARCHAR}
					, #{cd_live_area          , jdbcType=VARCHAR}
					, #{post_home             , jdbcType=VARCHAR}
					, #{addr1_home            , jdbcType=VARCHAR}
					, #{addr2_home            , jdbcType=VARCHAR}
					, #{no_manage_home        , jdbcType=VARCHAR}
					, #{hp1                   , jdbcType=VARCHAR}
					, #{hp2                   , jdbcType=VARCHAR}
					, #{hp3                   , jdbcType=VARCHAR}
					, #{cd_marry              , jdbcType=VARCHAR}
					, #{ymd_birth             , jdbcType=VARCHAR}
					, #{yn_dualwork           , jdbcType=VARCHAR}
					, #{ymd_house_home        , jdbcType=VARCHAR}
					, #{cnt_house_home        , jdbcType=VARCHAR}
					, #{cd_house_type         , jdbcType=VARCHAR}
					, #{cd_live_type_home     , jdbcType=VARCHAR}
					, #{amt_rent_monthly_home , jdbcType=VARCHAR}
					, #{amt_year_income       , jdbcType=VARCHAR}
					, #{cd_job                , jdbcType=VARCHAR}
					, #{nm_comp               , jdbcType=VARCHAR}
					, #{ymd_start_comp        , jdbcType=VARCHAR}
					, #{job_term_month        , jdbcType=VARCHAR}
					, #{cd_job_comp           , jdbcType=VARCHAR}
					, #{cd_employee_type      , jdbcType=VARCHAR}
					, #{cd_job_proof          , jdbcType=VARCHAR}
					, #{cd_income_proof       , jdbcType=VARCHAR}
					, #{cd_hp_co              , jdbcType=VARCHAR}
					, #{cd_army               , jdbcType=VARCHAR}
					, #{cd_job_class          , jdbcType=VARCHAR}
					, #{no_biz_comp           , jdbcType=VARCHAR}
					, #{no_comp_seq           , jdbcType=VARCHAR}
					, #{kcb_di                , jdbcType=VARCHAR}
					, #{cd_certify_person     , jdbcType=VARCHAR}
					, #{no_fc_req             , jdbcType=VARCHAR}
					, #{ph1_comp              , jdbcType=VARCHAR}
					, #{ph2_comp              , jdbcType=VARCHAR}
					, #{ph3_comp              , jdbcType=VARCHAR}
					, #{etc_field1            , jdbcType=VARCHAR}
					, #{id_frt,    	  	jdbcType=VARCHAR}
					, SYSDATE
					, #{id_frt,    	  	jdbcType=VARCHAR}
					, SYSDATE
			)
	</insert>
	<insert id="insertTxFcGoods">
      /* com.koscom.finance.dao.FinanceMapper.insertTxFcGoods : */
      INSERT INTO TX_FC_GOODS /* 신청 상품정보 */
                  (
                       NO_BUNCH /* 순번           */
                      ,CD_GOODS /* 상품코드       */
                      ,ID_FRT   /* 최초입력아이디 */
                      ,DT_FRT   /* 최초입력시간   */
                  )
                  VALUES
                  (
                       #{no_bunch,    	  	jdbcType=VARCHAR}/* 순번           */
                      ,#{cd_goods,    	  	jdbcType=VARCHAR}/* 상품코드       */
                      ,#{id_frt,    	  	jdbcType=VARCHAR}/* 등록자ID      */
                      ,SYSDATE      /* 등록일시       */
                  )
	</insert>

	<update id="updateTxFcRecvFor2Step" parameterType="com.koscom.fccode.model.FcCodeInfo">
		/* com.koscom.finance.dao.FinanceMapper.updateTxFcRecvFor2Step : */
		UPDATE TX_FC_RECEIVE
		SET    yn_receive = #{yn_receive, jdbcType=VARCHAR}
		     , ID_LST = #{id_lst, jdbcType=VARCHAR}
		     , DT_LST = SYSDATE
		WHERE no_bunch  = #{no_bunch    , jdbcType=VARCHAR}
	    AND no_person = #{no_person , jdbcType=VARCHAR}
	    AND cd_fc     = #{cd_fc     , jdbcType=VARCHAR}
	    AND no_fc_req = #{no_fc_req    , jdbcType=VARCHAR}
	</update>

	<update id="updateTxFcRecvFor3Step" parameterType="com.koscom.fccode.model.FcCodeInfo">
		/* com.koscom.finance.dao.FinanceMapper.updateTxFcRecvFor3Step : */
		UPDATE TX_FC_RECEIVE SET
			  loan_sts      = #{loan_sts     , jdbcType=VARCHAR}
			, loan_amt      = #{loan_amt     , jdbcType=VARCHAR}
			, loan_rate     = #{loan_rate    , jdbcType=VARCHAR}
			, loan_pay_date = #{loan_pay_date, jdbcType=VARCHAR}
		    , ID_LST        = #{id_lst, jdbcType=VARCHAR}
		    , DT_LST        = SYSDATE
		WHERE no_bunch  = #{no_bunch       , jdbcType=VARCHAR}
	    AND no_person = #{no_person    , jdbcType=VARCHAR}
	    AND cd_fc     = #{cd_fc        , jdbcType=VARCHAR}
	    AND no_fc_req = #{no_fc_req    , jdbcType=VARCHAR}
	</update>

	<insert id="insertTxFcReceive">
		/* com.koscom.finance.dao.FinanceMapper.insertTxFcReceive : */
		<selectKey keyProperty="no_bunch" resultType="string" order="BEFORE">
			(SELECT NVL(MAX(cast(no_bunch As Int)),0) + 1 FROM TX_FC_RECEIVE)
		</selectKey>
		INSERT INTO TX_FC_RECEIVE
			( no_bunch, NO_PERSON, NO_PREPARE, CD_FC, NO_FC_REQ, NO_EDOC
			,CD_GOODS, YN_LOAN, YEAR_TERM, RTO_LOAN, AMT_LIMIT, ETC_FIELD
			,DT_RECEIVE, YN_RECEIVE, HD_CD_PARTNER_CODE, REASON
			,ID_FRT,DT_FRT,ID_LST,DT_LST
			) VALUES (
				  #{no_bunch 				, jdbcType=VARCHAR}
				, #{no_person 		    , jdbcType=VARCHAR}
				, #{no_prepare 		    , jdbcType=VARCHAR}
				, #{cd_fc 			    , jdbcType=VARCHAR}
				, #{no_fc_req 		    , jdbcType=VARCHAR}
				, #{no_edoc 			, jdbcType=VARCHAR}

				, #{cd_goods 			, jdbcType=VARCHAR}
				, #{yn_loan 			, jdbcType=VARCHAR}
				, #{year_term 		    , jdbcType=VARCHAR}
				, #{rto_loan 			, jdbcType=VARCHAR}
				, #{amt_limit 		    , jdbcType=VARCHAR}
				, #{etc_field 		    , jdbcType=VARCHAR}

				, #{dt_receive 		    , jdbcType=VARCHAR}
				, #{yn_receive 		    , jdbcType=VARCHAR}
				, #{hd_cd_partner_code  , jdbcType=VARCHAR}
				, #{reason 		        , jdbcType=VARCHAR}

				, #{id_frt 			    , jdbcType=VARCHAR}
				, SYSDATE
				, #{id_frt 			    , jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>


	<select id="getFcWorkPosition" parameterType="com.koscom.finance.model.FcWorkPositionForm" resultType="com.koscom.finance.model.FcWorkPositionVO">
		/* com.koscom.finance.dao.FinanceMapper.getFcWorkPosition : */
		SELECT CD_FC
		     , CD_JOB
		     , CD_WORK_POSITION
		     , COMPANY_SEG
		     , YN_USE
		     , ID_FRT
		     , DT_FRT
		     , ID_LST
		     , DT_LST
		  FROM WORK_POSITION_CD
		<where>
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_fc)'>
				AND cd_fc = #{cd_fc , jdbcType=VARCHAR}
			</if>
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_job)'>
				AND cd_job = #{cd_job , jdbcType=VARCHAR}
			</if>
		</where>
	</select>

</mapper>