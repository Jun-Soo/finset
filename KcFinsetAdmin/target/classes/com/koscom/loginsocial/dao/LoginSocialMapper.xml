<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.loginsocial.dao.LoginSocialMapper">
	<update id="procLoginSocial" parameterType="com.koscom.loginsocial.model.LoginSocialVO">
		MERGE INTO PERSON_INFO
		USING DUAL
		ON (comp_social = #{comp_social} AND id_social = #{id_social})
		WHEN MATCHED THEN
		UPDATE 
		 SET 
		 	 nm_social         			= #{nm_social,   jdbcType=VARCHAR}
			,token_social               = #{token_social,jdbcType=VARCHAR}
			,ID_LST                     = #{id_lst, jdbcType=VARCHAR}
			,DT_LST = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT 
		(
			 no_person		
			,comp_social		
			,id_social		
			,nm_social		
			,token_social		
			,dt_agree_social		
			,id_frt		
			,dt_frt
			,id_lst
			,dt_lst
		)
		VALUES( 
			 #{no_person                  ,jdbcType=VARCHAR}
			,#{comp_social                ,jdbcType=VARCHAR}
			,#{id_social                  ,jdbcType=VARCHAR}
			,#{nm_social                  ,jdbcType=VARCHAR}
			,#{token_social               ,jdbcType=VARCHAR}
			,SYSDATE
			,#{id_frt		              ,jdbcType=VARCHAR}
			,SYSDATE
			,#{id_frt		              ,jdbcType=VARCHAR}
			,SYSDATE
		)
	</update>
	<select id="getMaxNoPerson" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT 'P'||LPAD(NVL(SUBSTR(max(no_person),2,10),0)+1,9,'0') FROM person_info
	</select>
	<select id="getPersonSocial" parameterType="com.koscom.loginsocial.model.LoginSocialVO" resultType="com.koscom.loginsocial.model.LoginSocialVO">
		SELECT * FROM PERSON_INFO
		WHERE COMP_SOCIAL = #{comp_social}
		AND ID_SOCIAL = #{id_social}
	</select>
	<insert id="insertPersonLoginHist" parameterType="com.koscom.domain.PersonLoginHist">
		INSERT INTO person_login_hist
			(	  cd_system
			    , no_person
				, user_agent
				, ip_client
				, dt_frt
				, id_frt
				, id_lst
				, dt_lst )
		VALUES(   #{cd_system, jdbcType=VARCHAR}
				, #{no_person, jdbcType=VARCHAR}
				, #{user_agent, jdbcType=VARCHAR}
				, #{ip_client, jdbcType=VARCHAR}
				, SYSDATE
				, #{no_person, jdbcType=VARCHAR}
				, #{no_person, jdbcType=VARCHAR}
				, SYSDATE )
	</insert>
	<select id="listPersonLoginHist" parameterType="com.koscom.loginsocial.model.LoginSocialForm" resultType="com.koscom.domain.PersonLoginHist">
		SELECT
	        * 
	    FROM
	        (SELECT
	            LST.*,
	            ROWNUM RNUM
	         FROM
	            (SELECT
	                   PLH.CD_SYSTEM
					,  PLH.IP_CLIENT
					,  PLH.DT_FRT
					,  PLH.USER_AGENT
					,PI.NM_PERSON,PI.NO_PERSON
	             FROM person_login_hist PLH, person_info PI
				 <include refid="listPersonLoginHist_WHERE"/>
				 ORDER BY dt_frt DESC
	             ) LST
	        WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
	        ) 
	    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>
	<sql id="listPersonLoginHist_WHERE">
		<where>
		<!-- 상세검색 -->
		<if test="@com.koscom.util.MybatisUtil@isNotEmpty(cd_system)">
			AND PLH.CD_SYSTEM = #{cd_system}
		</if>
		<if test="@com.koscom.util.MybatisUtil@isNotEmpty(ip_client)">
			 AND PLH.IP_CLIENT = #{ip_client}
		</if>
		<if test="@com.koscom.util.MybatisUtil@isNotEmpty(dt_frt)">
			 AND TO_CHAR(PLH.DT_FRT,'YYYYMMDD') = #{dt_frt}
		</if>
		<if test="@com.koscom.util.MybatisUtil@isNotEmpty(user_agent)">
			 AND PLH.USER_AGENT = #{user_agent}
		</if>
		</where>
	</sql>
	<select id="listPersonLoginHistCount" parameterType="com.koscom.loginsocial.model.LoginSocialForm" resultType="int">
		SELECT
				COUNT(*) AS recordCount
			FROM person_login_hist PLH, person_info PI
			<include refid="listPersonLoginHist_WHERE"/>
	</select>	
</mapper>