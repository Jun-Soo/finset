<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koscom.prepare.dao.PrepareMapper">

	<sql id="listPrepareInfo_WHERE">
		<where>
			<!-- 문서함구분 -->
			<choose>
				<when test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_prepare_doc)'>
					PR.cd_prepare_doc_box = #{cd_prepare_doc}
				</when>
				<otherwise>
					AND PR.cd_prepare_doc_box <![CDATA[<=]]> 90
				</otherwise>
			</choose>

			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_prepare_class)'>
				AND PR.cd_prepare_class = #{cd_prepare_class}
			</if>

			<!-- 상세검색 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_detail)">
				<if test="sel_detail.equals('PE.nm_person')">
				   AND PE.NM_PERSON LIKE '%'||#{txt_detail}||'%'
				</if>
				<if test="sel_detail.equals('PR.no_person')">
				   AND PR.NO_PERSON LIKE '%'||#{txt_detail}||'%'
				</if>
				<if test="sel_detail.equals('PR.memo_from_agency')">
				   AND PR.MEMO_FROM_AGENCY LIKE '%'||#{txt_detail}||'%'
				</if>
			</if>

			<!-- 일자구분 -->
			<if test="@com.koscom.util.MybatisUtil@isNotEmpty(sel_dt_kind)">
				<choose>
					<when test="@com.koscom.util.MybatisUtil@contains('dt_',sel_dt_kind)">
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
							<if test="sel_dt_kind.equals('PR.dt_frt')">
								AND TO_CHAR(PR.DT_FRT,'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}
							</if>
							<if test="sel_dt_kind.equals('PR.dt_lst')">
								AND TO_CHAR(PR.DT_LST,'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}
							</if>
						</if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
							<if test="sel_dt_kind.equals('PR.dt_frt')">
								AND TO_CHAR(PR.DT_FRT,'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}
							</if>
							<if test="sel_dt_kind.equals('PR.dt_frt')">
								AND TO_CHAR(PR.DT_LST,'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}
							</if>
						</if>
					</when>
					<otherwise>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_from)">
							<if test="sel_dt_kind.equals('PR.dt_frt')">
								AND TO_CHAR(PR.DT_FRT,'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}
							</if>
							<if test="sel_dt_kind.equals('PR.dt_lst')">
								AND TO_CHAR(PR.DT_LST,'yyyyMMdd') <![CDATA[>=]]> #{txt_dt_from}
							</if>
						</if>
						<if test="@com.koscom.util.MybatisUtil@isNotEmpty(txt_dt_to)">
							<if test="sel_dt_kind.equals('PR.dt_frt')">
								AND TO_CHAR(PR.DT_FRT,'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}
							</if>
							<if test="sel_dt_kind.equals('PR.dt_frt')">
								AND TO_CHAR(PR.DT_LST,'yyyyMMdd') <![CDATA[<=]]> #{txt_dt_to}
							</if>
						</if>
					</otherwise>
				</choose>
			</if>

			<!-- 금융사 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_advertisement)'>
				AND PR.cd_advertisement = #{cd_advertisement}
			</if>

			<!-- 상품구분 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_goods_type)'>
				AND PR.cd_goods_type = #{cd_goods_type}
			</if>

			<!-- 서류함 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_prepare_doc_box)'>
				AND PR.cd_prepare_doc_box = #{cd_prepare_doc_box}
			</if>

			<!-- 상담사유 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_prepare_class_srch_20)'>
				AND PR.cd_prepare_doc_box = '20'
				AND PR.cd_prepare_class = #{cd_prepare_class_srch_20}
			</if>

			<!-- 접수불가 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_reject_cause)'>
				AND PR.cd_reject_cause = #{cd_reject_cause}
			</if>

			<!-- 휴대폰상태 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_ph_status)'>
				AND NVL(PE.cd_status_hp,'01') = #{cd_ph_status}
			</if>

		 	<!-- 접수상태 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_apply_class)'>
				AND PR.cd_prepare_doc_box = '50'
				AND PR.cd_prepare_class = #{cd_apply_class}
			</if>

			<!-- 담당자 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
				AND PR.id_prepare = #{id_prepare}
			</if>

			<!-- 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare_srch)'>
				AND PR.id_prepare = #{id_prepare_srch}
			</if>

			<!-- 매체사 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency)'>
				AND PR.id_agency = #{id_agency}
			</if>

			<!-- 대리점 담당자별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_agency_user)'>
				AND PR.id_agency_user = #{id_agency_user}
			</if>

			<!-- 대리점 유입경로별 검색 -->
			<if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_agency_path)'>
				AND PR.cd_agency_path = #{cd_agency_path}
			</if>

		</where>
	</sql>

	<select id="listPrepareInfo" parameterType="com.koscom.prepare.model.PrepareForm" resultType="com.koscom.prepare.model.PrepareVO">
	   SELECT
	        *
	    FROM
	        (SELECT
	            LST.*,
	            ROWNUM RNUM
	         FROM
	            (SELECT
	                  PR.no_prepare
	                , PR.no_person
					, PR.cd_prepare_doc_box
					, PR.cd_prepare_class
					, PR.cd_advertisement
					, PR.cd_goods_type
					, PR.amt_apply
					, PR.cnt_apply
					, PR.cnt_approval
					, PR.cnt_reject
					, PR.amt_approval
					, PR.id_prepare
					, PR.cd_reject_cause
					, PR.cd_used_apply
					, PR.memo_from_counsel
					, PR.c6_keyword
					, PR.yn_exist_person
					, PR.id_frt
					, PR.dt_frt
					, PR.dt_lst
					, PE.bgn
					, PE.hp
					, PE.cd_job_class
					, PE.nm_person
				FROM prepare_info PR
		 		INNER JOIN person_info PE ON PE.no_person = PR.no_person
				 <include refid="listPrepareInfo_WHERE"/>
				 ORDER BY PR.dt_frt DESC, PR.no_prepare DESC
	             ) LST
	        WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
	        )
	    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>

	<select id="listPrepareCount"  parameterType="com.koscom.prepare.model.PrepareForm" resultType="int">
		SELECT
               COUNT(*) AS recordCount
			FROM prepare_info PR
	 		INNER JOIN person_info PE ON PE.no_person = PR.no_person
		 <include refid="listPrepareInfo_WHERE"/>
	</select>

	<select id="listPrepareInfoAgency" parameterType="com.koscom.prepare.model.PrepareForm" resultType="com.koscom.prepare.model.PrepareVO">
	   SELECT
	        *
	    FROM
	        (SELECT
	            LST.*,
	            ROWNUM RNUM
	         FROM
	            (SELECT
	                  PR.no_prepare
	                , PR.no_person
	                , PR.no_agency_person
					, PR.cd_prepare_doc_box
					, PR.cd_prepare_class
					, PR.cd_advertisement
					, PR.cd_goods_type
					, PR.amt_apply
					, PR.cnt_apply
					, PR.cnt_approval
					, PR.cnt_reject
					, PR.amt_approval
					, PR.id_prepare
					, PR.cd_reject_cause
					, PR.cd_used_apply
					, PR.memo_from_counsel
					, PR.c6_keyword
					, PR.yn_exist_person
					, PR.id_agency_user
					, PR.dt_frt
					, PR.dt_lst
					, PE.bgn
					, PE.hp
					, PE.cd_job_class
					, PE.nm_person
				FROM prepare_info PR
		 		INNER JOIN agency_person_info PE ON PE.no_person = PR.no_agency_person
				 <include refid="listPrepareInfo_WHERE"/>
				 ORDER BY PR.no_prepare DESC
	             ) LST
	        WHERE ROWNUM <![CDATA[<=]]> #{endPosition, jdbcType=NUMERIC}
	        )
	    WHERE RNUM >= #{startPosition, jdbcType=NUMERIC}
	</select>

	<select id="listPrepareCountAgency"  parameterType="com.koscom.prepare.model.PrepareForm" resultType="int">
		SELECT
               COUNT(*) AS recordCount
			FROM prepare_info PR
	 		INNER JOIN agency_person_info PE ON PE.no_person = PR.no_agency_person
		 <include refid="listPrepareInfo_WHERE"/>
	</select>

	<select id="getPrepare" parameterType="java.lang.String" resultType="com.koscom.prepare.model.PrepareVO">
		SELECT
            	*
          FROM prepare_info
         WHERE no_prepare = #{no_prepare, jdbcType=VARCHAR}
	</select>

	<!-- 신규 사전접수 생성 -->
	<insert id="createPrepare" parameterType="com.koscom.domain.PrepareInfo">
<!-- 		<selectKey keyProperty="no_prepare" resultType="string" order="BEFORE">
			(SELECT LPAD(NVL(MAX(no_prepare),0)+1,12,'0') FROM prepare_info)
		</selectKey> -->
		<selectKey keyProperty="no_prepare" resultType="string" order="BEFORE">
			(SELECT LPAD(NVL(PREPARE_SEQUENCE.NEXTVAL,0),12,'0') FROM DUAL)
		</selectKey>

		INSERT INTO prepare_info
			(	  no_prepare
				, no_person
				, yn_overlap_chk
				, id_agency
				, cd_advertisement
				, cd_prepare_doc_box
				, cd_goods_type
				, id_prepare
				, amt_apply
				, etc_prepare_path
				, cd_collect_path
				, cd_contact_path
				, cd_collect_method
				, etc_memo
				, no_agency
				, nm_agency
				, nm_ceo_agency
				, url_homepage_agency
				, nm_writer
				, memo_from_agency
				, cd_used_apply
				, c6_keyword
				, yn_exist_person
				, ip_prepare
				, cd_goods_gubun
				, id_frt
				, dt_frt
				, id_lst
				, dt_lst
			) VALUES (
				  #{no_prepare}
				, #{no_person, jdbcType=VARCHAR}
				, #{yn_overlap_chk, jdbcType=VARCHAR}
				, #{id_agency, jdbcType=VARCHAR}
				, #{cd_advertisement, jdbcType=VARCHAR}
				, #{cd_prepare_doc_box, jdbcType=VARCHAR}
				, #{cd_goods_type, jdbcType=VARCHAR}
				, #{id_prepare, jdbcType=VARCHAR}
				, #{amt_apply, jdbcType=VARCHAR}
				, #{etc_prepare_path, jdbcType=VARCHAR}
				, #{cd_collect_path, jdbcType=VARCHAR}
				, #{cd_contact_path, jdbcType=VARCHAR}
				, #{cd_collect_method, jdbcType=VARCHAR}
				, #{etc_memo, jdbcType=VARCHAR}
				, #{no_agency, jdbcType=VARCHAR}
				, #{nm_agency, jdbcType=VARCHAR}
				, #{nm_ceo_agency, jdbcType=VARCHAR}
				, #{url_homepage_agency, jdbcType=VARCHAR}
				, #{nm_writer, jdbcType=VARCHAR}
				, #{memo_from_agency, jdbcType=VARCHAR}
				, #{cd_used_apply, jdbcType=VARCHAR}
				, #{c6_keyword, jdbcType=VARCHAR}
				, #{yn_exist_person, jdbcType=VARCHAR}
				, #{ip_prepare, jdbcType=VARCHAR}
				, #{cd_goods_gubun, jdbcType=VARCHAR}
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>
	<!-- 임시 사전접수 삭제 -->
	<delete id="deletePrepare" parameterType="com.koscom.domain.PrepareInfo">
        /* com.koscom.prepare.dao.PrepareMapper.deletePrepare */
		DELETE prepare_info
		 WHERE no_prepare IN (SELECT no_prepare
		                       FROM TX_FC_RECEIVE
		                      WHERE NO_BUNCH = #{no_bunch, jdbcType=VARCHAR} /*NO_BUNCH               */
		                     )
	</delete>

	<!-- 신규 사전접수 생성(대리점) -->
	<insert id="createPrepareAgency" parameterType="com.koscom.domain.PrepareInfo">
		<selectKey keyProperty="no_prepare" resultType="string" order="BEFORE">
			(SELECT LPAD(NVL(PREPARE_SEQUENCE.NEXTVAL,0),12,'0') FROM DUAL)
		</selectKey>

		INSERT INTO prepare_info
			(	  no_prepare
				, no_agency_person
				, yn_overlap_chk
				, id_agency
				, cd_advertisement
				, cd_prepare_doc_box
				, cd_goods_type
				, id_prepare
				, amt_apply
				, etc_prepare_path
				, cd_collect_path
				, cd_contact_path
				, cd_collect_method
				, etc_memo
				, nm_agency
				, nm_ceo_agency
				, url_homepage_agency
				, nm_writer
				, memo_from_agency
				, cd_used_apply
				, c6_keyword
				, yn_exist_person
				, ip_prepare
				, id_agency_user
				, cd_agency_path
				, id_frt
				, dt_frt
				, id_lst
				, dt_lst
			) VALUES (
				  #{no_prepare}
				, #{no_agency_person, jdbcType=VARCHAR}
				, #{yn_overlap_chk, jdbcType=VARCHAR}
				, #{id_agency, jdbcType=VARCHAR}
				, #{cd_advertisement, jdbcType=VARCHAR}
				, #{cd_prepare_doc_box, jdbcType=VARCHAR}
				, #{cd_goods_type, jdbcType=VARCHAR}
				, #{id_prepare, jdbcType=VARCHAR}
				, #{amt_apply, jdbcType=VARCHAR}
				, #{etc_prepare_path, jdbcType=VARCHAR}
				, #{cd_collect_path, jdbcType=VARCHAR}
				, #{cd_contact_path, jdbcType=VARCHAR}
				, #{cd_collect_method, jdbcType=VARCHAR}
				, #{etc_memo, jdbcType=VARCHAR}
				, #{nm_agency, jdbcType=VARCHAR}
				, #{nm_ceo_agency, jdbcType=VARCHAR}
				, #{url_homepage_agency, jdbcType=VARCHAR}
				, #{nm_writer, jdbcType=VARCHAR}
				, #{memo_from_agency, jdbcType=VARCHAR}
				, #{cd_used_apply, jdbcType=VARCHAR}
				, #{c6_keyword, jdbcType=VARCHAR}
				, #{yn_exist_person, jdbcType=VARCHAR}
				, #{ip_prepare, jdbcType=VARCHAR}
				, #{id_agency_user, jdbcType=VARCHAR}
				, #{cd_agency_path, jdbcType=VARCHAR}
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
				, #{id_frt, jdbcType=VARCHAR}
				, SYSDATE
			)
	</insert>

	<update id="updateOverlapChk" parameterType="com.koscom.domain.PrepareInfo">
		UPDATE prepare_info
		   SET  no_person = #{no_person}
		      , yn_overlap_chk = 'Y'
		      , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

	<update id="modifyPrepare" parameterType="com.koscom.domain.PrepareInfo">
		UPDATE prepare_info
		   SET  cd_advertisement = #{cd_advertisement, jdbcType=VARCHAR}
		      , cd_goods_type = #{cd_goods_type, jdbcType=VARCHAR}
		      , amt_apply = #{amt_apply, jdbcType=VARCHAR}
			  , cd_collect_path = #{cd_collect_path, jdbcType=VARCHAR}
			  , cd_contact_path = #{cd_contact_path, jdbcType=VARCHAR}
			  , cd_collect_method = #{cd_collect_method, jdbcType=VARCHAR}
			  , etc_memo = #{etc_memo, jdbcType=VARCHAR}
			  , nm_agency = #{nm_agency, jdbcType=VARCHAR}
			  , nm_ceo_agency = #{nm_ceo_agency, jdbcType=VARCHAR}
			  , url_homepage_agency = #{url_homepage_agency, jdbcType=VARCHAR}
			  , nm_writer = #{nm_writer, jdbcType=VARCHAR}
			  , cd_used_apply = #{cd_used_apply, jdbcType=VARCHAR}
		      , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

	<update id="modifyPrepareAgency" parameterType="com.koscom.domain.PrepareInfo">
		UPDATE prepare_info
		   SET  cd_goods_type = #{cd_goods_type, jdbcType=VARCHAR}
		      , amt_apply = #{amt_apply, jdbcType=VARCHAR}
			  , cd_collect_path = #{cd_collect_path, jdbcType=VARCHAR}
			  , cd_contact_path = #{cd_contact_path, jdbcType=VARCHAR}
			  , cd_collect_method = #{cd_collect_method, jdbcType=VARCHAR}
			  , etc_memo = #{etc_memo, jdbcType=VARCHAR}
			  , nm_agency = #{nm_agency, jdbcType=VARCHAR}
			  , nm_ceo_agency = #{nm_ceo_agency, jdbcType=VARCHAR}
			  , url_homepage_agency = #{url_homepage_agency, jdbcType=VARCHAR}
			  , nm_writer = #{nm_writer, jdbcType=VARCHAR}
			  , cd_used_apply = #{cd_used_apply, jdbcType=VARCHAR}
			  , memo_from_agency = #{memo_from_agency, jdbcType=VARCHAR}
			  , id_agency_user = #{id_agency_user, jdbcType=VARCHAR}
			  , cd_agency_path = #{cd_agency_path, jdbcType=VARCHAR}
		      , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

	<select id="listPrepareByPerson" parameterType="com.koscom.prepare.model.PrepareForm" resultType="com.koscom.prepare.model.PrepareVO">
		SELECT
			  no_prepare
			, cd_advertisement
			, cd_goods_type
			, amt_apply
			, cnt_apply
			, cnt_approval
			, cnt_reject
			, amt_approval
			, cd_prepare_doc_box
			, cd_prepare_class
			, cd_reject_cause
			, TO_CHAR(dt_frt,'yy-MM-dd') AS ymd_frt_short
		FROM prepare_info
 		WHERE no_person = #{no_person}
 		  AND cd_prepare_doc_box <![CDATA[<=]]> 90
		ORDER BY dt_frt DESC
	</select>

	<update id="modifyPrepareDoc" parameterType="com.koscom.domain.PrepareInfo">
		UPDATE prepare_info
		   SET	cd_prepare_doc_box = #{cd_prepare_doc_box}
	        <choose>
				<when test='"60".equals(cd_prepare_doc_box)'>
			      , cd_reject_cause = #{cd_reject_cause, jdbcType=VARCHAR}
			      , cd_prepare_class = ''
				</when>
				<when test='"50".equals(cd_prepare_doc_box)'>
			      , cd_reject_cause = ''
			      , cd_prepare_class = #{cd_prepare_class, jdbcType=VARCHAR}
				</when>
				<when test='"20".equals(cd_prepare_doc_box)'>
			      , cd_reject_cause = ''
			      , cd_prepare_class = #{cd_prepare_class, jdbcType=VARCHAR}
				</when>
				<otherwise>
			      , cd_reject_cause = ''
			      , cd_prepare_class = ''
				</otherwise>
			</choose>
		      , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

	<update id="modifyPrepareId" parameterType="com.koscom.domain.PrepareInfo">
		UPDATE prepare_info
		   SET	id_prepare = #{id_prepare, jdbcType=VARCHAR}
		      , cd_prepare_class = #{cd_prepare_class, jdbcType=VARCHAR}
		      , cd_prepare_doc_box = #{cd_prepare_doc_box, jdbcType=VARCHAR}
		      , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

	<select id="getNoPerson" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT
			  no_person
		FROM prepare_info
		WHERE no_prepare = #{no_prepare}
	</select>

	<select id="getCntPrepareDoc" parameterType="com.koscom.prepare.model.PrepareForm" resultType="hashmap">
		SELECT '10' AS cd_prepare_doc_box,  COUNT(*) AS cnt
		  FROM prepare_info PR
		 WHERE PR.cd_prepare_doc_box <![CDATA[=]]> '10'
		 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
		 	AND PR.id_prepare = #{id_prepare}
		 </if>
		 UNION ALL
		SELECT '20' AS cd_prepare_doc_box,  COUNT(*) AS cnt
		  FROM prepare_info PR
		 WHERE PR.cd_prepare_doc_box <![CDATA[=]]> '20'
		 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
		 	AND PR.id_prepare = #{id_prepare}
		 </if>
	</select>

	<select id="getCntPrepareClass" parameterType="com.koscom.prepare.model.PrepareForm" resultType="hashmap">
		<foreach collection="class_fields" item="codeInfo" separator="UNION ALL">
			SELECT 
				   <if test='"20".equals(codeInfo.code_value)'>'20'</if>
                   <if test='"30".equals(codeInfo.code_value)'>'30'</if>
                   <if test='"50".equals(codeInfo.code_value)'>'50'</if>
                   <if test='"60".equals(codeInfo.code_value)'>'69'</if>
                   <if test='"70".equals(codeInfo.code_value)'>'70'</if>
                   <if test='"99".equals(codeInfo.code_value)'>'99'</if> 
					AS cd_prepare_class,  
					COUNT(*) AS cnt
			  FROM prepare_info PR
			 WHERE PR.cd_prepare_class <![CDATA[=]]> 
				<if test='"20".equals(codeInfo.codevalue)'>'20'</if>
                <if test='"30".equals(codeInfo.codevalue)'>'30'</if>
                <if test='"50".equals(codeInfo.codevalue)'>'50'</if>
                <if test='"60".equals(codeInfo.codevalue)'>'69'</if>
                <if test='"70".equals(codeInfo.codevalue)'>'70'</if>
                <if test='"99".equals(codeInfo.codevalue)'>'99'</if> 
			  <if test='@com.koscom.util.MybatisUtil@isNotEmpty(cd_prepare_doc)'>
			 	AND PR.cd_prepare_doc_box = #{cd_prepare_doc}
			 </if>
			 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
			 	AND PR.id_prepare = #{id_prepare}
			 </if>
		</foreach>
	</select>

	<update id="updatePrepareCnt" parameterType="java.lang.String">
		UPDATE prepare_info PI
		  SET   cnt_apply = (SELECT count(*) FROM apply_info AI WHERE AI.no_prepare = PI.no_prepare AND AI.cd_apply_doc_box != '99')
			  , cnt_approval = (SELECT count(*) FROM apply_info AI WHERE AI.no_prepare = PI.no_prepare AND AI.cd_apply_doc_box='50')
			  , cnt_reject = (SELECT count(*) FROM apply_info AI WHERE AI.no_prepare = PI.no_prepare AND AI.cd_apply_doc_box='60')
			  , amt_approval = (SELECT NVL(SUM(amt_approval),0) FROM apply_info AI WHERE AI.no_prepare = PI.no_prepare AND AI.cd_apply_doc_box='50')
		 WHERE no_prepare = #{no_prepare}
	</update>

	<select id="getCntPrepareTodayByHP" parameterType="java.lang.String" resultType="int">
		SELECT
				count(*) AS CNT
		  FROM PREPARE_INFO PR INNER JOIN person_info PE ON PE.no_person = PR.no_person
		 WHERE TO_CHAR(PR.DT_frt,'yyyyMMdd') = TO_CHAR(SYSDATE,'yyyyMMdd')
		   AND PR.cd_prepare_doc_box <![CDATA[<=]]> '90'
		   AND PE.HP = #{hp}
	</select>

	<update id="updateCounselMemo" parameterType="com.koscom.domain.PrepareInfo">
		UPDATE prepare_info PI
		   SET memo_from_counsel = #{memo_from_counsel, jdbcType=VARCHAR}
		   	  , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

 	<!-- 사전접수리스트 엑셀 -->
	<select id="listPrepareInfo_excel" parameterType="com.koscom.prepare.model.PrepareForm" resultType="hashmap">
		SELECT
	        (SELECT nm_code FROM comm_cd WHERE code_group = 'cd_advertisement' AND code_value = PR.cd_advertisement) a_광고매체
			,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_goods_type' AND code_value = PR.cd_goods_type) b_상품명
			,TO_CHAR(PR.dt_frt,'yyyyMMdd') d_신청일시
			,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_job_class' AND code_value = PE.cd_job_class)  e_직업구분
			,PE.nm_person f_이름
			,PE.bgn g_생년월일
			,PR.amt_apply h_승인금액
			,TO_CHAR(PR.dt_lst,'yyyyMMdd') i_처리일자
			,(SELECT nm_emp FROM worker_info WHERE id_emp = PR.id_prepare) j_담당자
			,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_prepare_doc_box' AND code_value = PR.cd_prepare_doc_box) k_상태
			,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_reject_cause' AND code_value = PR.cd_reject_cause)  m_불가사유
			,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_prepare_class' AND code_value = PR.cd_prepare_class) l_상세상태
			,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_keyword_comp' AND code_value = SUBSTR(PR.cd_keyword,1,1))  c_유입사이트
			,(SELECT nm_code FROM comm_cd WHERE code_group = 'cd_keyword' AND code_value = SUBSTR(PR.cd_keyword,2,4))  ca_유입키워드
			FROM prepare_info PR
			INNER JOIN person_info PE ON PE.no_person = PR.no_person
			<include refid="listPrepareInfo_WHERE"/>
			ORDER BY PR.no_prepare DESC
	</select>

	<update id="updatePrepareLst" parameterType="com.koscom.prepare.model.PrepareVO">
		UPDATE prepare_info
		   SET	id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

	<select id="getNoPrepare"  parameterType="com.koscom.prepare.model.PrepareForm" resultType="String">
		SELECT
 			no_prepare
	  	  FROM (
	 		SELECT PI.*, row_number() over(order by dt_frt desc) as rn
	 		  FROM prepare_info PI
	 		 WHERE PI.no_person = #{no_person}
	 		   AND PI.cd_prepare_doc_box <![CDATA[<=]]> '90'
	 		) LST
	 		WHERE LST.rn = 1
	</select>

	<select id="getPrepareExist" parameterType="com.koscom.prepare.model.PrepareVO" resultType="com.koscom.prepare.model.PrepareVO">
		SELECT
            	*
          FROM prepare_info
         WHERE no_agency = #{no_agency}
         	AND id_agency = #{id_agency}
         	AND cd_prepare_doc_box <![CDATA[<=]]> '90'
	</select>

	<select id="getCntPrepare" parameterType="com.koscom.prepare.model.PrepareVO" resultType="hashmap">
		SELECT #{cd_prepare_doc_box} AS cd_prepare_doc_box,  COUNT(*) AS cnt
		  FROM prepare_info PR
		 WHERE PR.cd_prepare_doc_box <![CDATA[=]]> #{cd_prepare_doc_box}
		 <if test='@com.koscom.util.MybatisUtil@isNotEmpty(id_prepare)'>
		 	AND PR.id_prepare = #{id_prepare}
		 </if>
	</select>

	<update id="updatePrepareChk" parameterType="com.koscom.prepare.model.PrepareVO">
		UPDATE prepare_info
		   SET	no_person = #{no_person, jdbcType=VARCHAR}
		   	  , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_frt = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

	<update id="procPreparePath" parameterType="com.koscom.prepare.model.PrepareVO">
		UPDATE prepare_info
		   SET	etc_prepare_path = #{etc_prepare_path, jdbcType=VARCHAR}
		   	  , id_lst = #{id_lst, jdbcType=VARCHAR}
		      , dt_lst = SYSDATE
		 WHERE no_prepare = #{no_prepare}
	</update>

</mapper>
